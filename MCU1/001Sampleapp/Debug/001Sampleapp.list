
001Sampleapp.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000019c4  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000001a8  08001a84  08001a84  00011a84  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001c2c  08001c2c  000200ac  2**0
                  CONTENTS
  4 .ARM          00000000  08001c2c  08001c2c  000200ac  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001c2c  08001c2c  000200ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001c2c  08001c2c  00011c2c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001c30  08001c30  00011c30  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000ac  20000000  08001c34  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000038  200000ac  08001ce0  000200ac  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200000e4  08001ce0  000200e4  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  000200ac  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002517  00000000  00000000  000200d4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000069f  00000000  00000000  000225eb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000138  00000000  00000000  00022c90  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000100  00000000  00000000  00022dc8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002b07  00000000  00000000  00022ec8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000014b4  00000000  00000000  000259cf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00009663  00000000  00000000  00026e83  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000304e6  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000ec0  00000000  00000000  0003053c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	200000ac 	.word	0x200000ac
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08001a6c 	.word	0x08001a6c

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	200000b0 	.word	0x200000b0
 8000104:	08001a6c 	.word	0x08001a6c

08000108 <__gnu_thumb1_case_shi>:
 8000108:	b403      	push	{r0, r1}
 800010a:	4671      	mov	r1, lr
 800010c:	0849      	lsrs	r1, r1, #1
 800010e:	0040      	lsls	r0, r0, #1
 8000110:	0049      	lsls	r1, r1, #1
 8000112:	5e09      	ldrsh	r1, [r1, r0]
 8000114:	0049      	lsls	r1, r1, #1
 8000116:	448e      	add	lr, r1
 8000118:	bc03      	pop	{r0, r1}
 800011a:	4770      	bx	lr

0800011c <__udivsi3>:
 800011c:	2200      	movs	r2, #0
 800011e:	0843      	lsrs	r3, r0, #1
 8000120:	428b      	cmp	r3, r1
 8000122:	d374      	bcc.n	800020e <__udivsi3+0xf2>
 8000124:	0903      	lsrs	r3, r0, #4
 8000126:	428b      	cmp	r3, r1
 8000128:	d35f      	bcc.n	80001ea <__udivsi3+0xce>
 800012a:	0a03      	lsrs	r3, r0, #8
 800012c:	428b      	cmp	r3, r1
 800012e:	d344      	bcc.n	80001ba <__udivsi3+0x9e>
 8000130:	0b03      	lsrs	r3, r0, #12
 8000132:	428b      	cmp	r3, r1
 8000134:	d328      	bcc.n	8000188 <__udivsi3+0x6c>
 8000136:	0c03      	lsrs	r3, r0, #16
 8000138:	428b      	cmp	r3, r1
 800013a:	d30d      	bcc.n	8000158 <__udivsi3+0x3c>
 800013c:	22ff      	movs	r2, #255	; 0xff
 800013e:	0209      	lsls	r1, r1, #8
 8000140:	ba12      	rev	r2, r2
 8000142:	0c03      	lsrs	r3, r0, #16
 8000144:	428b      	cmp	r3, r1
 8000146:	d302      	bcc.n	800014e <__udivsi3+0x32>
 8000148:	1212      	asrs	r2, r2, #8
 800014a:	0209      	lsls	r1, r1, #8
 800014c:	d065      	beq.n	800021a <__udivsi3+0xfe>
 800014e:	0b03      	lsrs	r3, r0, #12
 8000150:	428b      	cmp	r3, r1
 8000152:	d319      	bcc.n	8000188 <__udivsi3+0x6c>
 8000154:	e000      	b.n	8000158 <__udivsi3+0x3c>
 8000156:	0a09      	lsrs	r1, r1, #8
 8000158:	0bc3      	lsrs	r3, r0, #15
 800015a:	428b      	cmp	r3, r1
 800015c:	d301      	bcc.n	8000162 <__udivsi3+0x46>
 800015e:	03cb      	lsls	r3, r1, #15
 8000160:	1ac0      	subs	r0, r0, r3
 8000162:	4152      	adcs	r2, r2
 8000164:	0b83      	lsrs	r3, r0, #14
 8000166:	428b      	cmp	r3, r1
 8000168:	d301      	bcc.n	800016e <__udivsi3+0x52>
 800016a:	038b      	lsls	r3, r1, #14
 800016c:	1ac0      	subs	r0, r0, r3
 800016e:	4152      	adcs	r2, r2
 8000170:	0b43      	lsrs	r3, r0, #13
 8000172:	428b      	cmp	r3, r1
 8000174:	d301      	bcc.n	800017a <__udivsi3+0x5e>
 8000176:	034b      	lsls	r3, r1, #13
 8000178:	1ac0      	subs	r0, r0, r3
 800017a:	4152      	adcs	r2, r2
 800017c:	0b03      	lsrs	r3, r0, #12
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x6a>
 8000182:	030b      	lsls	r3, r1, #12
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0ac3      	lsrs	r3, r0, #11
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x76>
 800018e:	02cb      	lsls	r3, r1, #11
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0a83      	lsrs	r3, r0, #10
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x82>
 800019a:	028b      	lsls	r3, r1, #10
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0a43      	lsrs	r3, r0, #9
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x8e>
 80001a6:	024b      	lsls	r3, r1, #9
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0a03      	lsrs	r3, r0, #8
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x9a>
 80001b2:	020b      	lsls	r3, r1, #8
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	d2cd      	bcs.n	8000156 <__udivsi3+0x3a>
 80001ba:	09c3      	lsrs	r3, r0, #7
 80001bc:	428b      	cmp	r3, r1
 80001be:	d301      	bcc.n	80001c4 <__udivsi3+0xa8>
 80001c0:	01cb      	lsls	r3, r1, #7
 80001c2:	1ac0      	subs	r0, r0, r3
 80001c4:	4152      	adcs	r2, r2
 80001c6:	0983      	lsrs	r3, r0, #6
 80001c8:	428b      	cmp	r3, r1
 80001ca:	d301      	bcc.n	80001d0 <__udivsi3+0xb4>
 80001cc:	018b      	lsls	r3, r1, #6
 80001ce:	1ac0      	subs	r0, r0, r3
 80001d0:	4152      	adcs	r2, r2
 80001d2:	0943      	lsrs	r3, r0, #5
 80001d4:	428b      	cmp	r3, r1
 80001d6:	d301      	bcc.n	80001dc <__udivsi3+0xc0>
 80001d8:	014b      	lsls	r3, r1, #5
 80001da:	1ac0      	subs	r0, r0, r3
 80001dc:	4152      	adcs	r2, r2
 80001de:	0903      	lsrs	r3, r0, #4
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xcc>
 80001e4:	010b      	lsls	r3, r1, #4
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	08c3      	lsrs	r3, r0, #3
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xd8>
 80001f0:	00cb      	lsls	r3, r1, #3
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0883      	lsrs	r3, r0, #2
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xe4>
 80001fc:	008b      	lsls	r3, r1, #2
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0843      	lsrs	r3, r0, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xf0>
 8000208:	004b      	lsls	r3, r1, #1
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	1a41      	subs	r1, r0, r1
 8000210:	d200      	bcs.n	8000214 <__udivsi3+0xf8>
 8000212:	4601      	mov	r1, r0
 8000214:	4152      	adcs	r2, r2
 8000216:	4610      	mov	r0, r2
 8000218:	4770      	bx	lr
 800021a:	e7ff      	b.n	800021c <__udivsi3+0x100>
 800021c:	b501      	push	{r0, lr}
 800021e:	2000      	movs	r0, #0
 8000220:	f000 f8f0 	bl	8000404 <__aeabi_idiv0>
 8000224:	bd02      	pop	{r1, pc}
 8000226:	46c0      	nop			; (mov r8, r8)

08000228 <__aeabi_uidivmod>:
 8000228:	2900      	cmp	r1, #0
 800022a:	d0f7      	beq.n	800021c <__udivsi3+0x100>
 800022c:	e776      	b.n	800011c <__udivsi3>
 800022e:	4770      	bx	lr

08000230 <__divsi3>:
 8000230:	4603      	mov	r3, r0
 8000232:	430b      	orrs	r3, r1
 8000234:	d47f      	bmi.n	8000336 <__divsi3+0x106>
 8000236:	2200      	movs	r2, #0
 8000238:	0843      	lsrs	r3, r0, #1
 800023a:	428b      	cmp	r3, r1
 800023c:	d374      	bcc.n	8000328 <__divsi3+0xf8>
 800023e:	0903      	lsrs	r3, r0, #4
 8000240:	428b      	cmp	r3, r1
 8000242:	d35f      	bcc.n	8000304 <__divsi3+0xd4>
 8000244:	0a03      	lsrs	r3, r0, #8
 8000246:	428b      	cmp	r3, r1
 8000248:	d344      	bcc.n	80002d4 <__divsi3+0xa4>
 800024a:	0b03      	lsrs	r3, r0, #12
 800024c:	428b      	cmp	r3, r1
 800024e:	d328      	bcc.n	80002a2 <__divsi3+0x72>
 8000250:	0c03      	lsrs	r3, r0, #16
 8000252:	428b      	cmp	r3, r1
 8000254:	d30d      	bcc.n	8000272 <__divsi3+0x42>
 8000256:	22ff      	movs	r2, #255	; 0xff
 8000258:	0209      	lsls	r1, r1, #8
 800025a:	ba12      	rev	r2, r2
 800025c:	0c03      	lsrs	r3, r0, #16
 800025e:	428b      	cmp	r3, r1
 8000260:	d302      	bcc.n	8000268 <__divsi3+0x38>
 8000262:	1212      	asrs	r2, r2, #8
 8000264:	0209      	lsls	r1, r1, #8
 8000266:	d065      	beq.n	8000334 <__divsi3+0x104>
 8000268:	0b03      	lsrs	r3, r0, #12
 800026a:	428b      	cmp	r3, r1
 800026c:	d319      	bcc.n	80002a2 <__divsi3+0x72>
 800026e:	e000      	b.n	8000272 <__divsi3+0x42>
 8000270:	0a09      	lsrs	r1, r1, #8
 8000272:	0bc3      	lsrs	r3, r0, #15
 8000274:	428b      	cmp	r3, r1
 8000276:	d301      	bcc.n	800027c <__divsi3+0x4c>
 8000278:	03cb      	lsls	r3, r1, #15
 800027a:	1ac0      	subs	r0, r0, r3
 800027c:	4152      	adcs	r2, r2
 800027e:	0b83      	lsrs	r3, r0, #14
 8000280:	428b      	cmp	r3, r1
 8000282:	d301      	bcc.n	8000288 <__divsi3+0x58>
 8000284:	038b      	lsls	r3, r1, #14
 8000286:	1ac0      	subs	r0, r0, r3
 8000288:	4152      	adcs	r2, r2
 800028a:	0b43      	lsrs	r3, r0, #13
 800028c:	428b      	cmp	r3, r1
 800028e:	d301      	bcc.n	8000294 <__divsi3+0x64>
 8000290:	034b      	lsls	r3, r1, #13
 8000292:	1ac0      	subs	r0, r0, r3
 8000294:	4152      	adcs	r2, r2
 8000296:	0b03      	lsrs	r3, r0, #12
 8000298:	428b      	cmp	r3, r1
 800029a:	d301      	bcc.n	80002a0 <__divsi3+0x70>
 800029c:	030b      	lsls	r3, r1, #12
 800029e:	1ac0      	subs	r0, r0, r3
 80002a0:	4152      	adcs	r2, r2
 80002a2:	0ac3      	lsrs	r3, r0, #11
 80002a4:	428b      	cmp	r3, r1
 80002a6:	d301      	bcc.n	80002ac <__divsi3+0x7c>
 80002a8:	02cb      	lsls	r3, r1, #11
 80002aa:	1ac0      	subs	r0, r0, r3
 80002ac:	4152      	adcs	r2, r2
 80002ae:	0a83      	lsrs	r3, r0, #10
 80002b0:	428b      	cmp	r3, r1
 80002b2:	d301      	bcc.n	80002b8 <__divsi3+0x88>
 80002b4:	028b      	lsls	r3, r1, #10
 80002b6:	1ac0      	subs	r0, r0, r3
 80002b8:	4152      	adcs	r2, r2
 80002ba:	0a43      	lsrs	r3, r0, #9
 80002bc:	428b      	cmp	r3, r1
 80002be:	d301      	bcc.n	80002c4 <__divsi3+0x94>
 80002c0:	024b      	lsls	r3, r1, #9
 80002c2:	1ac0      	subs	r0, r0, r3
 80002c4:	4152      	adcs	r2, r2
 80002c6:	0a03      	lsrs	r3, r0, #8
 80002c8:	428b      	cmp	r3, r1
 80002ca:	d301      	bcc.n	80002d0 <__divsi3+0xa0>
 80002cc:	020b      	lsls	r3, r1, #8
 80002ce:	1ac0      	subs	r0, r0, r3
 80002d0:	4152      	adcs	r2, r2
 80002d2:	d2cd      	bcs.n	8000270 <__divsi3+0x40>
 80002d4:	09c3      	lsrs	r3, r0, #7
 80002d6:	428b      	cmp	r3, r1
 80002d8:	d301      	bcc.n	80002de <__divsi3+0xae>
 80002da:	01cb      	lsls	r3, r1, #7
 80002dc:	1ac0      	subs	r0, r0, r3
 80002de:	4152      	adcs	r2, r2
 80002e0:	0983      	lsrs	r3, r0, #6
 80002e2:	428b      	cmp	r3, r1
 80002e4:	d301      	bcc.n	80002ea <__divsi3+0xba>
 80002e6:	018b      	lsls	r3, r1, #6
 80002e8:	1ac0      	subs	r0, r0, r3
 80002ea:	4152      	adcs	r2, r2
 80002ec:	0943      	lsrs	r3, r0, #5
 80002ee:	428b      	cmp	r3, r1
 80002f0:	d301      	bcc.n	80002f6 <__divsi3+0xc6>
 80002f2:	014b      	lsls	r3, r1, #5
 80002f4:	1ac0      	subs	r0, r0, r3
 80002f6:	4152      	adcs	r2, r2
 80002f8:	0903      	lsrs	r3, r0, #4
 80002fa:	428b      	cmp	r3, r1
 80002fc:	d301      	bcc.n	8000302 <__divsi3+0xd2>
 80002fe:	010b      	lsls	r3, r1, #4
 8000300:	1ac0      	subs	r0, r0, r3
 8000302:	4152      	adcs	r2, r2
 8000304:	08c3      	lsrs	r3, r0, #3
 8000306:	428b      	cmp	r3, r1
 8000308:	d301      	bcc.n	800030e <__divsi3+0xde>
 800030a:	00cb      	lsls	r3, r1, #3
 800030c:	1ac0      	subs	r0, r0, r3
 800030e:	4152      	adcs	r2, r2
 8000310:	0883      	lsrs	r3, r0, #2
 8000312:	428b      	cmp	r3, r1
 8000314:	d301      	bcc.n	800031a <__divsi3+0xea>
 8000316:	008b      	lsls	r3, r1, #2
 8000318:	1ac0      	subs	r0, r0, r3
 800031a:	4152      	adcs	r2, r2
 800031c:	0843      	lsrs	r3, r0, #1
 800031e:	428b      	cmp	r3, r1
 8000320:	d301      	bcc.n	8000326 <__divsi3+0xf6>
 8000322:	004b      	lsls	r3, r1, #1
 8000324:	1ac0      	subs	r0, r0, r3
 8000326:	4152      	adcs	r2, r2
 8000328:	1a41      	subs	r1, r0, r1
 800032a:	d200      	bcs.n	800032e <__divsi3+0xfe>
 800032c:	4601      	mov	r1, r0
 800032e:	4152      	adcs	r2, r2
 8000330:	4610      	mov	r0, r2
 8000332:	4770      	bx	lr
 8000334:	e05d      	b.n	80003f2 <__divsi3+0x1c2>
 8000336:	0fca      	lsrs	r2, r1, #31
 8000338:	d000      	beq.n	800033c <__divsi3+0x10c>
 800033a:	4249      	negs	r1, r1
 800033c:	1003      	asrs	r3, r0, #32
 800033e:	d300      	bcc.n	8000342 <__divsi3+0x112>
 8000340:	4240      	negs	r0, r0
 8000342:	4053      	eors	r3, r2
 8000344:	2200      	movs	r2, #0
 8000346:	469c      	mov	ip, r3
 8000348:	0903      	lsrs	r3, r0, #4
 800034a:	428b      	cmp	r3, r1
 800034c:	d32d      	bcc.n	80003aa <__divsi3+0x17a>
 800034e:	0a03      	lsrs	r3, r0, #8
 8000350:	428b      	cmp	r3, r1
 8000352:	d312      	bcc.n	800037a <__divsi3+0x14a>
 8000354:	22fc      	movs	r2, #252	; 0xfc
 8000356:	0189      	lsls	r1, r1, #6
 8000358:	ba12      	rev	r2, r2
 800035a:	0a03      	lsrs	r3, r0, #8
 800035c:	428b      	cmp	r3, r1
 800035e:	d30c      	bcc.n	800037a <__divsi3+0x14a>
 8000360:	0189      	lsls	r1, r1, #6
 8000362:	1192      	asrs	r2, r2, #6
 8000364:	428b      	cmp	r3, r1
 8000366:	d308      	bcc.n	800037a <__divsi3+0x14a>
 8000368:	0189      	lsls	r1, r1, #6
 800036a:	1192      	asrs	r2, r2, #6
 800036c:	428b      	cmp	r3, r1
 800036e:	d304      	bcc.n	800037a <__divsi3+0x14a>
 8000370:	0189      	lsls	r1, r1, #6
 8000372:	d03a      	beq.n	80003ea <__divsi3+0x1ba>
 8000374:	1192      	asrs	r2, r2, #6
 8000376:	e000      	b.n	800037a <__divsi3+0x14a>
 8000378:	0989      	lsrs	r1, r1, #6
 800037a:	09c3      	lsrs	r3, r0, #7
 800037c:	428b      	cmp	r3, r1
 800037e:	d301      	bcc.n	8000384 <__divsi3+0x154>
 8000380:	01cb      	lsls	r3, r1, #7
 8000382:	1ac0      	subs	r0, r0, r3
 8000384:	4152      	adcs	r2, r2
 8000386:	0983      	lsrs	r3, r0, #6
 8000388:	428b      	cmp	r3, r1
 800038a:	d301      	bcc.n	8000390 <__divsi3+0x160>
 800038c:	018b      	lsls	r3, r1, #6
 800038e:	1ac0      	subs	r0, r0, r3
 8000390:	4152      	adcs	r2, r2
 8000392:	0943      	lsrs	r3, r0, #5
 8000394:	428b      	cmp	r3, r1
 8000396:	d301      	bcc.n	800039c <__divsi3+0x16c>
 8000398:	014b      	lsls	r3, r1, #5
 800039a:	1ac0      	subs	r0, r0, r3
 800039c:	4152      	adcs	r2, r2
 800039e:	0903      	lsrs	r3, r0, #4
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d301      	bcc.n	80003a8 <__divsi3+0x178>
 80003a4:	010b      	lsls	r3, r1, #4
 80003a6:	1ac0      	subs	r0, r0, r3
 80003a8:	4152      	adcs	r2, r2
 80003aa:	08c3      	lsrs	r3, r0, #3
 80003ac:	428b      	cmp	r3, r1
 80003ae:	d301      	bcc.n	80003b4 <__divsi3+0x184>
 80003b0:	00cb      	lsls	r3, r1, #3
 80003b2:	1ac0      	subs	r0, r0, r3
 80003b4:	4152      	adcs	r2, r2
 80003b6:	0883      	lsrs	r3, r0, #2
 80003b8:	428b      	cmp	r3, r1
 80003ba:	d301      	bcc.n	80003c0 <__divsi3+0x190>
 80003bc:	008b      	lsls	r3, r1, #2
 80003be:	1ac0      	subs	r0, r0, r3
 80003c0:	4152      	adcs	r2, r2
 80003c2:	d2d9      	bcs.n	8000378 <__divsi3+0x148>
 80003c4:	0843      	lsrs	r3, r0, #1
 80003c6:	428b      	cmp	r3, r1
 80003c8:	d301      	bcc.n	80003ce <__divsi3+0x19e>
 80003ca:	004b      	lsls	r3, r1, #1
 80003cc:	1ac0      	subs	r0, r0, r3
 80003ce:	4152      	adcs	r2, r2
 80003d0:	1a41      	subs	r1, r0, r1
 80003d2:	d200      	bcs.n	80003d6 <__divsi3+0x1a6>
 80003d4:	4601      	mov	r1, r0
 80003d6:	4663      	mov	r3, ip
 80003d8:	4152      	adcs	r2, r2
 80003da:	105b      	asrs	r3, r3, #1
 80003dc:	4610      	mov	r0, r2
 80003de:	d301      	bcc.n	80003e4 <__divsi3+0x1b4>
 80003e0:	4240      	negs	r0, r0
 80003e2:	2b00      	cmp	r3, #0
 80003e4:	d500      	bpl.n	80003e8 <__divsi3+0x1b8>
 80003e6:	4249      	negs	r1, r1
 80003e8:	4770      	bx	lr
 80003ea:	4663      	mov	r3, ip
 80003ec:	105b      	asrs	r3, r3, #1
 80003ee:	d300      	bcc.n	80003f2 <__divsi3+0x1c2>
 80003f0:	4240      	negs	r0, r0
 80003f2:	b501      	push	{r0, lr}
 80003f4:	2000      	movs	r0, #0
 80003f6:	f000 f805 	bl	8000404 <__aeabi_idiv0>
 80003fa:	bd02      	pop	{r1, pc}

080003fc <__aeabi_idivmod>:
 80003fc:	2900      	cmp	r1, #0
 80003fe:	d0f8      	beq.n	80003f2 <__divsi3+0x1c2>
 8000400:	e716      	b.n	8000230 <__divsi3>
 8000402:	4770      	bx	lr

08000404 <__aeabi_idiv0>:
 8000404:	4770      	bx	lr
 8000406:	46c0      	nop			; (mov r8, r8)

08000408 <__aeabi_lmul>:
 8000408:	b5f0      	push	{r4, r5, r6, r7, lr}
 800040a:	0415      	lsls	r5, r2, #16
 800040c:	0c2d      	lsrs	r5, r5, #16
 800040e:	000f      	movs	r7, r1
 8000410:	0001      	movs	r1, r0
 8000412:	002e      	movs	r6, r5
 8000414:	46c6      	mov	lr, r8
 8000416:	4684      	mov	ip, r0
 8000418:	0400      	lsls	r0, r0, #16
 800041a:	0c14      	lsrs	r4, r2, #16
 800041c:	0c00      	lsrs	r0, r0, #16
 800041e:	0c09      	lsrs	r1, r1, #16
 8000420:	4346      	muls	r6, r0
 8000422:	434d      	muls	r5, r1
 8000424:	4360      	muls	r0, r4
 8000426:	4361      	muls	r1, r4
 8000428:	1940      	adds	r0, r0, r5
 800042a:	0c34      	lsrs	r4, r6, #16
 800042c:	1824      	adds	r4, r4, r0
 800042e:	b500      	push	{lr}
 8000430:	42a5      	cmp	r5, r4
 8000432:	d903      	bls.n	800043c <__aeabi_lmul+0x34>
 8000434:	2080      	movs	r0, #128	; 0x80
 8000436:	0240      	lsls	r0, r0, #9
 8000438:	4680      	mov	r8, r0
 800043a:	4441      	add	r1, r8
 800043c:	0c25      	lsrs	r5, r4, #16
 800043e:	186d      	adds	r5, r5, r1
 8000440:	4661      	mov	r1, ip
 8000442:	4359      	muls	r1, r3
 8000444:	437a      	muls	r2, r7
 8000446:	0430      	lsls	r0, r6, #16
 8000448:	1949      	adds	r1, r1, r5
 800044a:	0424      	lsls	r4, r4, #16
 800044c:	0c00      	lsrs	r0, r0, #16
 800044e:	1820      	adds	r0, r4, r0
 8000450:	1889      	adds	r1, r1, r2
 8000452:	bc80      	pop	{r7}
 8000454:	46b8      	mov	r8, r7
 8000456:	bdf0      	pop	{r4, r5, r6, r7, pc}

08000458 <array_fill_numbers>:
int numbers[] = { 456,345,678,567,890,456,3456,123,765,456,896,456,678,987,000,145,90};

int  someData = 90;

void array_fill_numbers(int pNumbers[], unsigned int len)
{
 8000458:	b590      	push	{r4, r7, lr}
 800045a:	b085      	sub	sp, #20
 800045c:	af00      	add	r7, sp, #0
 800045e:	6078      	str	r0, [r7, #4]
 8000460:	6039      	str	r1, [r7, #0]

    for ( unsigned int i = 0 ; i < len ; i++)
 8000462:	2300      	movs	r3, #0
 8000464:	60fb      	str	r3, [r7, #12]
 8000466:	e00e      	b.n	8000486 <array_fill_numbers+0x2e>
    {
        pNumbers[i] = rand() % 1000;
 8000468:	f000 fa6a 	bl	8000940 <rand>
 800046c:	68fb      	ldr	r3, [r7, #12]
 800046e:	009b      	lsls	r3, r3, #2
 8000470:	687a      	ldr	r2, [r7, #4]
 8000472:	18d4      	adds	r4, r2, r3
 8000474:	23fa      	movs	r3, #250	; 0xfa
 8000476:	0099      	lsls	r1, r3, #2
 8000478:	f7ff ffc0 	bl	80003fc <__aeabi_idivmod>
 800047c:	000b      	movs	r3, r1
 800047e:	6023      	str	r3, [r4, #0]
    for ( unsigned int i = 0 ; i < len ; i++)
 8000480:	68fb      	ldr	r3, [r7, #12]
 8000482:	3301      	adds	r3, #1
 8000484:	60fb      	str	r3, [r7, #12]
 8000486:	68fa      	ldr	r2, [r7, #12]
 8000488:	683b      	ldr	r3, [r7, #0]
 800048a:	429a      	cmp	r2, r3
 800048c:	d3ec      	bcc.n	8000468 <array_fill_numbers+0x10>
    }

}
 800048e:	46c0      	nop			; (mov r8, r8)
 8000490:	46c0      	nop			; (mov r8, r8)
 8000492:	46bd      	mov	sp, r7
 8000494:	b005      	add	sp, #20
 8000496:	bd90      	pop	{r4, r7, pc}

08000498 <display_numbers>:

void display_numbers(int *pNumbers, unsigned int len, char *pMessage)
{
 8000498:	b580      	push	{r7, lr}
 800049a:	b086      	sub	sp, #24
 800049c:	af00      	add	r7, sp, #0
 800049e:	60f8      	str	r0, [r7, #12]
 80004a0:	60b9      	str	r1, [r7, #8]
 80004a2:	607a      	str	r2, [r7, #4]
    printf("%s",pMessage);
 80004a4:	687a      	ldr	r2, [r7, #4]
 80004a6:	4b10      	ldr	r3, [pc, #64]	; (80004e8 <display_numbers+0x50>)
 80004a8:	0011      	movs	r1, r2
 80004aa:	0018      	movs	r0, r3
 80004ac:	f000 fa1a 	bl	80008e4 <iprintf>

    for (unsigned i = 0 ; i < len ; i++)
 80004b0:	2300      	movs	r3, #0
 80004b2:	617b      	str	r3, [r7, #20]
 80004b4:	e00c      	b.n	80004d0 <display_numbers+0x38>
    {
        printf("%5d  ",pNumbers[i]);
 80004b6:	697b      	ldr	r3, [r7, #20]
 80004b8:	009b      	lsls	r3, r3, #2
 80004ba:	68fa      	ldr	r2, [r7, #12]
 80004bc:	18d3      	adds	r3, r2, r3
 80004be:	681a      	ldr	r2, [r3, #0]
 80004c0:	4b0a      	ldr	r3, [pc, #40]	; (80004ec <display_numbers+0x54>)
 80004c2:	0011      	movs	r1, r2
 80004c4:	0018      	movs	r0, r3
 80004c6:	f000 fa0d 	bl	80008e4 <iprintf>
    for (unsigned i = 0 ; i < len ; i++)
 80004ca:	697b      	ldr	r3, [r7, #20]
 80004cc:	3301      	adds	r3, #1
 80004ce:	617b      	str	r3, [r7, #20]
 80004d0:	697a      	ldr	r2, [r7, #20]
 80004d2:	68bb      	ldr	r3, [r7, #8]
 80004d4:	429a      	cmp	r2, r3
 80004d6:	d3ee      	bcc.n	80004b6 <display_numbers+0x1e>
    }

    printf("\n");
 80004d8:	200a      	movs	r0, #10
 80004da:	f000 fa1d 	bl	8000918 <putchar>
}
 80004de:	46c0      	nop			; (mov r8, r8)
 80004e0:	46bd      	mov	sp, r7
 80004e2:	b006      	add	sp, #24
 80004e4:	bd80      	pop	{r7, pc}
 80004e6:	46c0      	nop			; (mov r8, r8)
 80004e8:	08001a84 	.word	0x08001a84
 80004ec:	08001a88 	.word	0x08001a88

080004f0 <swap_numbers>:


void swap_numbers(int *x,int *y)
{
 80004f0:	b580      	push	{r7, lr}
 80004f2:	b084      	sub	sp, #16
 80004f4:	af00      	add	r7, sp, #0
 80004f6:	6078      	str	r0, [r7, #4]
 80004f8:	6039      	str	r1, [r7, #0]
     int temp=*x;
 80004fa:	687b      	ldr	r3, [r7, #4]
 80004fc:	681b      	ldr	r3, [r3, #0]
 80004fe:	60fb      	str	r3, [r7, #12]
     *x=*y;
 8000500:	683b      	ldr	r3, [r7, #0]
 8000502:	681a      	ldr	r2, [r3, #0]
 8000504:	687b      	ldr	r3, [r7, #4]
 8000506:	601a      	str	r2, [r3, #0]
     *y=temp;
 8000508:	683b      	ldr	r3, [r7, #0]
 800050a:	68fa      	ldr	r2, [r7, #12]
 800050c:	601a      	str	r2, [r3, #0]
     void (*jump_addr) (void);
     jump_addr = (void*)0x20000009;
     jump_addr();
#endif

     someData = 10;
 800050e:	4b03      	ldr	r3, [pc, #12]	; (800051c <swap_numbers+0x2c>)
 8000510:	220a      	movs	r2, #10
 8000512:	601a      	str	r2, [r3, #0]
}
 8000514:	46c0      	nop			; (mov r8, r8)
 8000516:	46bd      	mov	sp, r7
 8000518:	b004      	add	sp, #16
 800051a:	bd80      	pop	{r7, pc}
 800051c:	20000044 	.word	0x20000044

08000520 <bubble_sort>:


void bubble_sort(int *pNumbers , unsigned int len)
{
 8000520:	b580      	push	{r7, lr}
 8000522:	b086      	sub	sp, #24
 8000524:	af00      	add	r7, sp, #0
 8000526:	6078      	str	r0, [r7, #4]
 8000528:	6039      	str	r1, [r7, #0]

    int i,j,flag=0;
 800052a:	2300      	movs	r3, #0
 800052c:	60fb      	str	r3, [r7, #12]

    for(i=0;i<len-1;i++)
 800052e:	2300      	movs	r3, #0
 8000530:	617b      	str	r3, [r7, #20]
 8000532:	e02f      	b.n	8000594 <bubble_sort+0x74>
    {
        flag=0;
 8000534:	2300      	movs	r3, #0
 8000536:	60fb      	str	r3, [r7, #12]

        for(j=0;j<len-1-i;j++)
 8000538:	2300      	movs	r3, #0
 800053a:	613b      	str	r3, [r7, #16]
 800053c:	e01d      	b.n	800057a <bubble_sort+0x5a>
        {
            if(pNumbers[j] > pNumbers[j+1])
 800053e:	693b      	ldr	r3, [r7, #16]
 8000540:	009b      	lsls	r3, r3, #2
 8000542:	687a      	ldr	r2, [r7, #4]
 8000544:	18d3      	adds	r3, r2, r3
 8000546:	681a      	ldr	r2, [r3, #0]
 8000548:	693b      	ldr	r3, [r7, #16]
 800054a:	3301      	adds	r3, #1
 800054c:	009b      	lsls	r3, r3, #2
 800054e:	6879      	ldr	r1, [r7, #4]
 8000550:	18cb      	adds	r3, r1, r3
 8000552:	681b      	ldr	r3, [r3, #0]
 8000554:	429a      	cmp	r2, r3
 8000556:	dd0d      	ble.n	8000574 <bubble_sort+0x54>
            {
                swap_numbers(&pNumbers[j],&pNumbers[j+1]);
 8000558:	693b      	ldr	r3, [r7, #16]
 800055a:	009b      	lsls	r3, r3, #2
 800055c:	687a      	ldr	r2, [r7, #4]
 800055e:	18d0      	adds	r0, r2, r3
 8000560:	693b      	ldr	r3, [r7, #16]
 8000562:	3301      	adds	r3, #1
 8000564:	009b      	lsls	r3, r3, #2
 8000566:	687a      	ldr	r2, [r7, #4]
 8000568:	18d3      	adds	r3, r2, r3
 800056a:	0019      	movs	r1, r3
 800056c:	f7ff ffc0 	bl	80004f0 <swap_numbers>
                flag=1;
 8000570:	2301      	movs	r3, #1
 8000572:	60fb      	str	r3, [r7, #12]
        for(j=0;j<len-1-i;j++)
 8000574:	693b      	ldr	r3, [r7, #16]
 8000576:	3301      	adds	r3, #1
 8000578:	613b      	str	r3, [r7, #16]
 800057a:	697b      	ldr	r3, [r7, #20]
 800057c:	683a      	ldr	r2, [r7, #0]
 800057e:	1ad3      	subs	r3, r2, r3
 8000580:	1e5a      	subs	r2, r3, #1
 8000582:	693b      	ldr	r3, [r7, #16]
 8000584:	429a      	cmp	r2, r3
 8000586:	d8da      	bhi.n	800053e <bubble_sort+0x1e>
            }
        }

        if(flag==0)
 8000588:	68fb      	ldr	r3, [r7, #12]
 800058a:	2b00      	cmp	r3, #0
 800058c:	d008      	beq.n	80005a0 <bubble_sort+0x80>
    for(i=0;i<len-1;i++)
 800058e:	697b      	ldr	r3, [r7, #20]
 8000590:	3301      	adds	r3, #1
 8000592:	617b      	str	r3, [r7, #20]
 8000594:	683b      	ldr	r3, [r7, #0]
 8000596:	1e5a      	subs	r2, r3, #1
 8000598:	697b      	ldr	r3, [r7, #20]
 800059a:	429a      	cmp	r2, r3
 800059c:	d8ca      	bhi.n	8000534 <bubble_sort+0x14>
            break;
    }
}
 800059e:	e000      	b.n	80005a2 <bubble_sort+0x82>
            break;
 80005a0:	46c0      	nop			; (mov r8, r8)
}
 80005a2:	46c0      	nop			; (mov r8, r8)
 80005a4:	46bd      	mov	sp, r7
 80005a6:	b006      	add	sp, #24
 80005a8:	bd80      	pop	{r7, pc}

080005aa <insertion_sort>:

void insertion_sort(int *pNumbers , unsigned int len)
{
 80005aa:	b580      	push	{r7, lr}
 80005ac:	b086      	sub	sp, #24
 80005ae:	af00      	add	r7, sp, #0
 80005b0:	6078      	str	r0, [r7, #4]
 80005b2:	6039      	str	r1, [r7, #0]

     int i,j,num;

     for(i=1 ; i<len ; i++)
 80005b4:	2301      	movs	r3, #1
 80005b6:	617b      	str	r3, [r7, #20]
 80005b8:	e02c      	b.n	8000614 <insertion_sort+0x6a>
     {
         j=i-1;
 80005ba:	697b      	ldr	r3, [r7, #20]
 80005bc:	3b01      	subs	r3, #1
 80005be:	613b      	str	r3, [r7, #16]

         num = pNumbers[i];
 80005c0:	697b      	ldr	r3, [r7, #20]
 80005c2:	009b      	lsls	r3, r3, #2
 80005c4:	687a      	ldr	r2, [r7, #4]
 80005c6:	18d3      	adds	r3, r2, r3
 80005c8:	681b      	ldr	r3, [r3, #0]
 80005ca:	60fb      	str	r3, [r7, #12]

         while( (j>-1) && (pNumbers[j] > num) )
 80005cc:	e00d      	b.n	80005ea <insertion_sort+0x40>
         {
             pNumbers[j+1] = pNumbers[j];
 80005ce:	693b      	ldr	r3, [r7, #16]
 80005d0:	009b      	lsls	r3, r3, #2
 80005d2:	687a      	ldr	r2, [r7, #4]
 80005d4:	18d2      	adds	r2, r2, r3
 80005d6:	693b      	ldr	r3, [r7, #16]
 80005d8:	3301      	adds	r3, #1
 80005da:	009b      	lsls	r3, r3, #2
 80005dc:	6879      	ldr	r1, [r7, #4]
 80005de:	18cb      	adds	r3, r1, r3
 80005e0:	6812      	ldr	r2, [r2, #0]
 80005e2:	601a      	str	r2, [r3, #0]
             j--;
 80005e4:	693b      	ldr	r3, [r7, #16]
 80005e6:	3b01      	subs	r3, #1
 80005e8:	613b      	str	r3, [r7, #16]
         while( (j>-1) && (pNumbers[j] > num) )
 80005ea:	693b      	ldr	r3, [r7, #16]
 80005ec:	2b00      	cmp	r3, #0
 80005ee:	db07      	blt.n	8000600 <insertion_sort+0x56>
 80005f0:	693b      	ldr	r3, [r7, #16]
 80005f2:	009b      	lsls	r3, r3, #2
 80005f4:	687a      	ldr	r2, [r7, #4]
 80005f6:	18d3      	adds	r3, r2, r3
 80005f8:	681b      	ldr	r3, [r3, #0]
 80005fa:	68fa      	ldr	r2, [r7, #12]
 80005fc:	429a      	cmp	r2, r3
 80005fe:	dbe6      	blt.n	80005ce <insertion_sort+0x24>
         }

         pNumbers[j+1]=num;
 8000600:	693b      	ldr	r3, [r7, #16]
 8000602:	3301      	adds	r3, #1
 8000604:	009b      	lsls	r3, r3, #2
 8000606:	687a      	ldr	r2, [r7, #4]
 8000608:	18d3      	adds	r3, r2, r3
 800060a:	68fa      	ldr	r2, [r7, #12]
 800060c:	601a      	str	r2, [r3, #0]
     for(i=1 ; i<len ; i++)
 800060e:	697b      	ldr	r3, [r7, #20]
 8000610:	3301      	adds	r3, #1
 8000612:	617b      	str	r3, [r7, #20]
 8000614:	697b      	ldr	r3, [r7, #20]
 8000616:	683a      	ldr	r2, [r7, #0]
 8000618:	429a      	cmp	r2, r3
 800061a:	d8ce      	bhi.n	80005ba <insertion_sort+0x10>
     }


}
 800061c:	46c0      	nop			; (mov r8, r8)
 800061e:	46c0      	nop			; (mov r8, r8)
 8000620:	46bd      	mov	sp, r7
 8000622:	b006      	add	sp, #24
 8000624:	bd80      	pop	{r7, pc}
	...

08000628 <main>:



int main()
{
 8000628:	b580      	push	{r7, lr}
 800062a:	b082      	sub	sp, #8
 800062c:	af00      	add	r7, sp, #0

    unsigned int len = sizeof(numbers)/sizeof(int);
 800062e:	2311      	movs	r3, #17
 8000630:	607b      	str	r3, [r7, #4]

    array_fill_numbers(numbers,len);
 8000632:	687a      	ldr	r2, [r7, #4]
 8000634:	4b19      	ldr	r3, [pc, #100]	; (800069c <main+0x74>)
 8000636:	0011      	movs	r1, r2
 8000638:	0018      	movs	r0, r3
 800063a:	f7ff ff0d 	bl	8000458 <array_fill_numbers>

    display_numbers(numbers,len,"B-unsorted array :");
 800063e:	4a18      	ldr	r2, [pc, #96]	; (80006a0 <main+0x78>)
 8000640:	6879      	ldr	r1, [r7, #4]
 8000642:	4b16      	ldr	r3, [pc, #88]	; (800069c <main+0x74>)
 8000644:	0018      	movs	r0, r3
 8000646:	f7ff ff27 	bl	8000498 <display_numbers>

    bubble_sort(numbers,len);
 800064a:	687a      	ldr	r2, [r7, #4]
 800064c:	4b13      	ldr	r3, [pc, #76]	; (800069c <main+0x74>)
 800064e:	0011      	movs	r1, r2
 8000650:	0018      	movs	r0, r3
 8000652:	f7ff ff65 	bl	8000520 <bubble_sort>

    display_numbers(numbers,len,"B-sorted array   :");
 8000656:	4a13      	ldr	r2, [pc, #76]	; (80006a4 <main+0x7c>)
 8000658:	6879      	ldr	r1, [r7, #4]
 800065a:	4b10      	ldr	r3, [pc, #64]	; (800069c <main+0x74>)
 800065c:	0018      	movs	r0, r3
 800065e:	f7ff ff1b 	bl	8000498 <display_numbers>

    array_fill_numbers(numbers,len);
 8000662:	687a      	ldr	r2, [r7, #4]
 8000664:	4b0d      	ldr	r3, [pc, #52]	; (800069c <main+0x74>)
 8000666:	0011      	movs	r1, r2
 8000668:	0018      	movs	r0, r3
 800066a:	f7ff fef5 	bl	8000458 <array_fill_numbers>

    display_numbers(numbers,len,"I-unsorted array :");
 800066e:	4a0e      	ldr	r2, [pc, #56]	; (80006a8 <main+0x80>)
 8000670:	6879      	ldr	r1, [r7, #4]
 8000672:	4b0a      	ldr	r3, [pc, #40]	; (800069c <main+0x74>)
 8000674:	0018      	movs	r0, r3
 8000676:	f7ff ff0f 	bl	8000498 <display_numbers>

    insertion_sort(numbers,len);
 800067a:	687a      	ldr	r2, [r7, #4]
 800067c:	4b07      	ldr	r3, [pc, #28]	; (800069c <main+0x74>)
 800067e:	0011      	movs	r1, r2
 8000680:	0018      	movs	r0, r3
 8000682:	f7ff ff92 	bl	80005aa <insertion_sort>

    display_numbers(numbers,len,"I-sorted array   :");
 8000686:	4a09      	ldr	r2, [pc, #36]	; (80006ac <main+0x84>)
 8000688:	6879      	ldr	r1, [r7, #4]
 800068a:	4b04      	ldr	r3, [pc, #16]	; (800069c <main+0x74>)
 800068c:	0018      	movs	r0, r3
 800068e:	f7ff ff03 	bl	8000498 <display_numbers>



    return 0;
 8000692:	2300      	movs	r3, #0
}
 8000694:	0018      	movs	r0, r3
 8000696:	46bd      	mov	sp, r7
 8000698:	b002      	add	sp, #8
 800069a:	bd80      	pop	{r7, pc}
 800069c:	20000000 	.word	0x20000000
 80006a0:	08001a90 	.word	0x08001a90
 80006a4:	08001aa4 	.word	0x08001aa4
 80006a8:	08001ab8 	.word	0x08001ab8
 80006ac:	08001acc 	.word	0x08001acc

080006b0 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80006b0:	b580      	push	{r7, lr}
 80006b2:	af00      	add	r7, sp, #0
	return 1;
 80006b4:	2301      	movs	r3, #1
}
 80006b6:	0018      	movs	r0, r3
 80006b8:	46bd      	mov	sp, r7
 80006ba:	bd80      	pop	{r7, pc}

080006bc <_kill>:

int _kill(int pid, int sig)
{
 80006bc:	b580      	push	{r7, lr}
 80006be:	b082      	sub	sp, #8
 80006c0:	af00      	add	r7, sp, #0
 80006c2:	6078      	str	r0, [r7, #4]
 80006c4:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 80006c6:	f000 f8db 	bl	8000880 <__errno>
 80006ca:	0003      	movs	r3, r0
 80006cc:	2216      	movs	r2, #22
 80006ce:	601a      	str	r2, [r3, #0]
	return -1;
 80006d0:	2301      	movs	r3, #1
 80006d2:	425b      	negs	r3, r3
}
 80006d4:	0018      	movs	r0, r3
 80006d6:	46bd      	mov	sp, r7
 80006d8:	b002      	add	sp, #8
 80006da:	bd80      	pop	{r7, pc}

080006dc <_exit>:

void _exit (int status)
{
 80006dc:	b580      	push	{r7, lr}
 80006de:	b082      	sub	sp, #8
 80006e0:	af00      	add	r7, sp, #0
 80006e2:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 80006e4:	2301      	movs	r3, #1
 80006e6:	425a      	negs	r2, r3
 80006e8:	687b      	ldr	r3, [r7, #4]
 80006ea:	0011      	movs	r1, r2
 80006ec:	0018      	movs	r0, r3
 80006ee:	f7ff ffe5 	bl	80006bc <_kill>
	while (1) {}		/* Make sure we hang here */
 80006f2:	e7fe      	b.n	80006f2 <_exit+0x16>

080006f4 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80006f4:	b580      	push	{r7, lr}
 80006f6:	b086      	sub	sp, #24
 80006f8:	af00      	add	r7, sp, #0
 80006fa:	60f8      	str	r0, [r7, #12]
 80006fc:	60b9      	str	r1, [r7, #8]
 80006fe:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000700:	2300      	movs	r3, #0
 8000702:	617b      	str	r3, [r7, #20]
 8000704:	e00a      	b.n	800071c <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8000706:	e000      	b.n	800070a <_read+0x16>
 8000708:	bf00      	nop
 800070a:	0001      	movs	r1, r0
 800070c:	68bb      	ldr	r3, [r7, #8]
 800070e:	1c5a      	adds	r2, r3, #1
 8000710:	60ba      	str	r2, [r7, #8]
 8000712:	b2ca      	uxtb	r2, r1
 8000714:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000716:	697b      	ldr	r3, [r7, #20]
 8000718:	3301      	adds	r3, #1
 800071a:	617b      	str	r3, [r7, #20]
 800071c:	697a      	ldr	r2, [r7, #20]
 800071e:	687b      	ldr	r3, [r7, #4]
 8000720:	429a      	cmp	r2, r3
 8000722:	dbf0      	blt.n	8000706 <_read+0x12>
	}

return len;
 8000724:	687b      	ldr	r3, [r7, #4]
}
 8000726:	0018      	movs	r0, r3
 8000728:	46bd      	mov	sp, r7
 800072a:	b006      	add	sp, #24
 800072c:	bd80      	pop	{r7, pc}

0800072e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800072e:	b580      	push	{r7, lr}
 8000730:	b086      	sub	sp, #24
 8000732:	af00      	add	r7, sp, #0
 8000734:	60f8      	str	r0, [r7, #12]
 8000736:	60b9      	str	r1, [r7, #8]
 8000738:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800073a:	2300      	movs	r3, #0
 800073c:	617b      	str	r3, [r7, #20]
 800073e:	e009      	b.n	8000754 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8000740:	68bb      	ldr	r3, [r7, #8]
 8000742:	1c5a      	adds	r2, r3, #1
 8000744:	60ba      	str	r2, [r7, #8]
 8000746:	781b      	ldrb	r3, [r3, #0]
 8000748:	0018      	movs	r0, r3
 800074a:	e000      	b.n	800074e <_write+0x20>
 800074c:	bf00      	nop
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800074e:	697b      	ldr	r3, [r7, #20]
 8000750:	3301      	adds	r3, #1
 8000752:	617b      	str	r3, [r7, #20]
 8000754:	697a      	ldr	r2, [r7, #20]
 8000756:	687b      	ldr	r3, [r7, #4]
 8000758:	429a      	cmp	r2, r3
 800075a:	dbf1      	blt.n	8000740 <_write+0x12>
	}
	return len;
 800075c:	687b      	ldr	r3, [r7, #4]
}
 800075e:	0018      	movs	r0, r3
 8000760:	46bd      	mov	sp, r7
 8000762:	b006      	add	sp, #24
 8000764:	bd80      	pop	{r7, pc}

08000766 <_close>:

int _close(int file)
{
 8000766:	b580      	push	{r7, lr}
 8000768:	b082      	sub	sp, #8
 800076a:	af00      	add	r7, sp, #0
 800076c:	6078      	str	r0, [r7, #4]
	return -1;
 800076e:	2301      	movs	r3, #1
 8000770:	425b      	negs	r3, r3
}
 8000772:	0018      	movs	r0, r3
 8000774:	46bd      	mov	sp, r7
 8000776:	b002      	add	sp, #8
 8000778:	bd80      	pop	{r7, pc}

0800077a <_fstat>:


int _fstat(int file, struct stat *st)
{
 800077a:	b580      	push	{r7, lr}
 800077c:	b082      	sub	sp, #8
 800077e:	af00      	add	r7, sp, #0
 8000780:	6078      	str	r0, [r7, #4]
 8000782:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000784:	683b      	ldr	r3, [r7, #0]
 8000786:	2280      	movs	r2, #128	; 0x80
 8000788:	0192      	lsls	r2, r2, #6
 800078a:	605a      	str	r2, [r3, #4]
	return 0;
 800078c:	2300      	movs	r3, #0
}
 800078e:	0018      	movs	r0, r3
 8000790:	46bd      	mov	sp, r7
 8000792:	b002      	add	sp, #8
 8000794:	bd80      	pop	{r7, pc}

08000796 <_isatty>:

int _isatty(int file)
{
 8000796:	b580      	push	{r7, lr}
 8000798:	b082      	sub	sp, #8
 800079a:	af00      	add	r7, sp, #0
 800079c:	6078      	str	r0, [r7, #4]
	return 1;
 800079e:	2301      	movs	r3, #1
}
 80007a0:	0018      	movs	r0, r3
 80007a2:	46bd      	mov	sp, r7
 80007a4:	b002      	add	sp, #8
 80007a6:	bd80      	pop	{r7, pc}

080007a8 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80007a8:	b580      	push	{r7, lr}
 80007aa:	b084      	sub	sp, #16
 80007ac:	af00      	add	r7, sp, #0
 80007ae:	60f8      	str	r0, [r7, #12]
 80007b0:	60b9      	str	r1, [r7, #8]
 80007b2:	607a      	str	r2, [r7, #4]
	return 0;
 80007b4:	2300      	movs	r3, #0
}
 80007b6:	0018      	movs	r0, r3
 80007b8:	46bd      	mov	sp, r7
 80007ba:	b004      	add	sp, #16
 80007bc:	bd80      	pop	{r7, pc}
	...

080007c0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80007c0:	b580      	push	{r7, lr}
 80007c2:	b086      	sub	sp, #24
 80007c4:	af00      	add	r7, sp, #0
 80007c6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80007c8:	4a14      	ldr	r2, [pc, #80]	; (800081c <_sbrk+0x5c>)
 80007ca:	4b15      	ldr	r3, [pc, #84]	; (8000820 <_sbrk+0x60>)
 80007cc:	1ad3      	subs	r3, r2, r3
 80007ce:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80007d0:	697b      	ldr	r3, [r7, #20]
 80007d2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80007d4:	4b13      	ldr	r3, [pc, #76]	; (8000824 <_sbrk+0x64>)
 80007d6:	681b      	ldr	r3, [r3, #0]
 80007d8:	2b00      	cmp	r3, #0
 80007da:	d102      	bne.n	80007e2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80007dc:	4b11      	ldr	r3, [pc, #68]	; (8000824 <_sbrk+0x64>)
 80007de:	4a12      	ldr	r2, [pc, #72]	; (8000828 <_sbrk+0x68>)
 80007e0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80007e2:	4b10      	ldr	r3, [pc, #64]	; (8000824 <_sbrk+0x64>)
 80007e4:	681a      	ldr	r2, [r3, #0]
 80007e6:	687b      	ldr	r3, [r7, #4]
 80007e8:	18d3      	adds	r3, r2, r3
 80007ea:	693a      	ldr	r2, [r7, #16]
 80007ec:	429a      	cmp	r2, r3
 80007ee:	d207      	bcs.n	8000800 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80007f0:	f000 f846 	bl	8000880 <__errno>
 80007f4:	0003      	movs	r3, r0
 80007f6:	220c      	movs	r2, #12
 80007f8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80007fa:	2301      	movs	r3, #1
 80007fc:	425b      	negs	r3, r3
 80007fe:	e009      	b.n	8000814 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000800:	4b08      	ldr	r3, [pc, #32]	; (8000824 <_sbrk+0x64>)
 8000802:	681b      	ldr	r3, [r3, #0]
 8000804:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000806:	4b07      	ldr	r3, [pc, #28]	; (8000824 <_sbrk+0x64>)
 8000808:	681a      	ldr	r2, [r3, #0]
 800080a:	687b      	ldr	r3, [r7, #4]
 800080c:	18d2      	adds	r2, r2, r3
 800080e:	4b05      	ldr	r3, [pc, #20]	; (8000824 <_sbrk+0x64>)
 8000810:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 8000812:	68fb      	ldr	r3, [r7, #12]
}
 8000814:	0018      	movs	r0, r3
 8000816:	46bd      	mov	sp, r7
 8000818:	b006      	add	sp, #24
 800081a:	bd80      	pop	{r7, pc}
 800081c:	20002000 	.word	0x20002000
 8000820:	00000400 	.word	0x00000400
 8000824:	200000c8 	.word	0x200000c8
 8000828:	200000e8 	.word	0x200000e8

0800082c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800082c:	480d      	ldr	r0, [pc, #52]	; (8000864 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800082e:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000830:	e000      	b.n	8000834 <Reset_Handler+0x8>
 8000832:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000834:	480c      	ldr	r0, [pc, #48]	; (8000868 <LoopForever+0x6>)
  ldr r1, =_edata
 8000836:	490d      	ldr	r1, [pc, #52]	; (800086c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000838:	4a0d      	ldr	r2, [pc, #52]	; (8000870 <LoopForever+0xe>)
  movs r3, #0
 800083a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800083c:	e002      	b.n	8000844 <LoopCopyDataInit>

0800083e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800083e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000840:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000842:	3304      	adds	r3, #4

08000844 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000844:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000846:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000848:	d3f9      	bcc.n	800083e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800084a:	4a0a      	ldr	r2, [pc, #40]	; (8000874 <LoopForever+0x12>)
  ldr r4, =_ebss
 800084c:	4c0a      	ldr	r4, [pc, #40]	; (8000878 <LoopForever+0x16>)
  movs r3, #0
 800084e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000850:	e001      	b.n	8000856 <LoopFillZerobss>

08000852 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000852:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000854:	3204      	adds	r2, #4

08000856 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000856:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000858:	d3fb      	bcc.n	8000852 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800085a:	f000 f817 	bl	800088c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800085e:	f7ff fee3 	bl	8000628 <main>

08000862 <LoopForever>:

LoopForever:
    b LoopForever
 8000862:	e7fe      	b.n	8000862 <LoopForever>
  ldr   r0, =_estack
 8000864:	20002000 	.word	0x20002000
  ldr r0, =_sdata
 8000868:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800086c:	200000ac 	.word	0x200000ac
  ldr r2, =_sidata
 8000870:	08001c34 	.word	0x08001c34
  ldr r2, =_sbss
 8000874:	200000ac 	.word	0x200000ac
  ldr r4, =_ebss
 8000878:	200000e4 	.word	0x200000e4

0800087c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800087c:	e7fe      	b.n	800087c <ADC_IRQHandler>
	...

08000880 <__errno>:
 8000880:	4b01      	ldr	r3, [pc, #4]	; (8000888 <__errno+0x8>)
 8000882:	6818      	ldr	r0, [r3, #0]
 8000884:	4770      	bx	lr
 8000886:	46c0      	nop			; (mov r8, r8)
 8000888:	20000048 	.word	0x20000048

0800088c <__libc_init_array>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	2600      	movs	r6, #0
 8000890:	4d0c      	ldr	r5, [pc, #48]	; (80008c4 <__libc_init_array+0x38>)
 8000892:	4c0d      	ldr	r4, [pc, #52]	; (80008c8 <__libc_init_array+0x3c>)
 8000894:	1b64      	subs	r4, r4, r5
 8000896:	10a4      	asrs	r4, r4, #2
 8000898:	42a6      	cmp	r6, r4
 800089a:	d109      	bne.n	80008b0 <__libc_init_array+0x24>
 800089c:	2600      	movs	r6, #0
 800089e:	f001 f8e5 	bl	8001a6c <_init>
 80008a2:	4d0a      	ldr	r5, [pc, #40]	; (80008cc <__libc_init_array+0x40>)
 80008a4:	4c0a      	ldr	r4, [pc, #40]	; (80008d0 <__libc_init_array+0x44>)
 80008a6:	1b64      	subs	r4, r4, r5
 80008a8:	10a4      	asrs	r4, r4, #2
 80008aa:	42a6      	cmp	r6, r4
 80008ac:	d105      	bne.n	80008ba <__libc_init_array+0x2e>
 80008ae:	bd70      	pop	{r4, r5, r6, pc}
 80008b0:	00b3      	lsls	r3, r6, #2
 80008b2:	58eb      	ldr	r3, [r5, r3]
 80008b4:	4798      	blx	r3
 80008b6:	3601      	adds	r6, #1
 80008b8:	e7ee      	b.n	8000898 <__libc_init_array+0xc>
 80008ba:	00b3      	lsls	r3, r6, #2
 80008bc:	58eb      	ldr	r3, [r5, r3]
 80008be:	4798      	blx	r3
 80008c0:	3601      	adds	r6, #1
 80008c2:	e7f2      	b.n	80008aa <__libc_init_array+0x1e>
 80008c4:	08001c2c 	.word	0x08001c2c
 80008c8:	08001c2c 	.word	0x08001c2c
 80008cc:	08001c2c 	.word	0x08001c2c
 80008d0:	08001c30 	.word	0x08001c30

080008d4 <memset>:
 80008d4:	0003      	movs	r3, r0
 80008d6:	1882      	adds	r2, r0, r2
 80008d8:	4293      	cmp	r3, r2
 80008da:	d100      	bne.n	80008de <memset+0xa>
 80008dc:	4770      	bx	lr
 80008de:	7019      	strb	r1, [r3, #0]
 80008e0:	3301      	adds	r3, #1
 80008e2:	e7f9      	b.n	80008d8 <memset+0x4>

080008e4 <iprintf>:
 80008e4:	b40f      	push	{r0, r1, r2, r3}
 80008e6:	4b0b      	ldr	r3, [pc, #44]	; (8000914 <iprintf+0x30>)
 80008e8:	b513      	push	{r0, r1, r4, lr}
 80008ea:	681c      	ldr	r4, [r3, #0]
 80008ec:	2c00      	cmp	r4, #0
 80008ee:	d005      	beq.n	80008fc <iprintf+0x18>
 80008f0:	69a3      	ldr	r3, [r4, #24]
 80008f2:	2b00      	cmp	r3, #0
 80008f4:	d102      	bne.n	80008fc <iprintf+0x18>
 80008f6:	0020      	movs	r0, r4
 80008f8:	f000 f8e0 	bl	8000abc <__sinit>
 80008fc:	ab05      	add	r3, sp, #20
 80008fe:	0020      	movs	r0, r4
 8000900:	9a04      	ldr	r2, [sp, #16]
 8000902:	68a1      	ldr	r1, [r4, #8]
 8000904:	9301      	str	r3, [sp, #4]
 8000906:	f000 fa67 	bl	8000dd8 <_vfiprintf_r>
 800090a:	bc16      	pop	{r1, r2, r4}
 800090c:	bc08      	pop	{r3}
 800090e:	b004      	add	sp, #16
 8000910:	4718      	bx	r3
 8000912:	46c0      	nop			; (mov r8, r8)
 8000914:	20000048 	.word	0x20000048

08000918 <putchar>:
 8000918:	4b08      	ldr	r3, [pc, #32]	; (800093c <putchar+0x24>)
 800091a:	b570      	push	{r4, r5, r6, lr}
 800091c:	681c      	ldr	r4, [r3, #0]
 800091e:	0005      	movs	r5, r0
 8000920:	2c00      	cmp	r4, #0
 8000922:	d005      	beq.n	8000930 <putchar+0x18>
 8000924:	69a3      	ldr	r3, [r4, #24]
 8000926:	2b00      	cmp	r3, #0
 8000928:	d102      	bne.n	8000930 <putchar+0x18>
 800092a:	0020      	movs	r0, r4
 800092c:	f000 f8c6 	bl	8000abc <__sinit>
 8000930:	0029      	movs	r1, r5
 8000932:	0020      	movs	r0, r4
 8000934:	68a2      	ldr	r2, [r4, #8]
 8000936:	f000 fd0b 	bl	8001350 <_putc_r>
 800093a:	bd70      	pop	{r4, r5, r6, pc}
 800093c:	20000048 	.word	0x20000048

08000940 <rand>:
 8000940:	4b16      	ldr	r3, [pc, #88]	; (800099c <rand+0x5c>)
 8000942:	b510      	push	{r4, lr}
 8000944:	681c      	ldr	r4, [r3, #0]
 8000946:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8000948:	2b00      	cmp	r3, #0
 800094a:	d116      	bne.n	800097a <rand+0x3a>
 800094c:	2018      	movs	r0, #24
 800094e:	f000 f969 	bl	8000c24 <malloc>
 8000952:	1e02      	subs	r2, r0, #0
 8000954:	63a0      	str	r0, [r4, #56]	; 0x38
 8000956:	d104      	bne.n	8000962 <rand+0x22>
 8000958:	214e      	movs	r1, #78	; 0x4e
 800095a:	4b11      	ldr	r3, [pc, #68]	; (80009a0 <rand+0x60>)
 800095c:	4811      	ldr	r0, [pc, #68]	; (80009a4 <rand+0x64>)
 800095e:	f000 f82d 	bl	80009bc <__assert_func>
 8000962:	4b11      	ldr	r3, [pc, #68]	; (80009a8 <rand+0x68>)
 8000964:	2100      	movs	r1, #0
 8000966:	6003      	str	r3, [r0, #0]
 8000968:	4b10      	ldr	r3, [pc, #64]	; (80009ac <rand+0x6c>)
 800096a:	6043      	str	r3, [r0, #4]
 800096c:	4b10      	ldr	r3, [pc, #64]	; (80009b0 <rand+0x70>)
 800096e:	6083      	str	r3, [r0, #8]
 8000970:	230b      	movs	r3, #11
 8000972:	8183      	strh	r3, [r0, #12]
 8000974:	2001      	movs	r0, #1
 8000976:	6110      	str	r0, [r2, #16]
 8000978:	6151      	str	r1, [r2, #20]
 800097a:	6ba4      	ldr	r4, [r4, #56]	; 0x38
 800097c:	4a0d      	ldr	r2, [pc, #52]	; (80009b4 <rand+0x74>)
 800097e:	6920      	ldr	r0, [r4, #16]
 8000980:	6961      	ldr	r1, [r4, #20]
 8000982:	4b0d      	ldr	r3, [pc, #52]	; (80009b8 <rand+0x78>)
 8000984:	f7ff fd40 	bl	8000408 <__aeabi_lmul>
 8000988:	2201      	movs	r2, #1
 800098a:	2300      	movs	r3, #0
 800098c:	1880      	adds	r0, r0, r2
 800098e:	4159      	adcs	r1, r3
 8000990:	6120      	str	r0, [r4, #16]
 8000992:	6161      	str	r1, [r4, #20]
 8000994:	0048      	lsls	r0, r1, #1
 8000996:	0840      	lsrs	r0, r0, #1
 8000998:	bd10      	pop	{r4, pc}
 800099a:	46c0      	nop			; (mov r8, r8)
 800099c:	20000048 	.word	0x20000048
 80009a0:	08001ae4 	.word	0x08001ae4
 80009a4:	08001afb 	.word	0x08001afb
 80009a8:	abcd330e 	.word	0xabcd330e
 80009ac:	e66d1234 	.word	0xe66d1234
 80009b0:	0005deec 	.word	0x0005deec
 80009b4:	4c957f2d 	.word	0x4c957f2d
 80009b8:	5851f42d 	.word	0x5851f42d

080009bc <__assert_func>:
 80009bc:	b530      	push	{r4, r5, lr}
 80009be:	0014      	movs	r4, r2
 80009c0:	001a      	movs	r2, r3
 80009c2:	4b09      	ldr	r3, [pc, #36]	; (80009e8 <__assert_func+0x2c>)
 80009c4:	0005      	movs	r5, r0
 80009c6:	681b      	ldr	r3, [r3, #0]
 80009c8:	b085      	sub	sp, #20
 80009ca:	68d8      	ldr	r0, [r3, #12]
 80009cc:	4b07      	ldr	r3, [pc, #28]	; (80009ec <__assert_func+0x30>)
 80009ce:	2c00      	cmp	r4, #0
 80009d0:	d101      	bne.n	80009d6 <__assert_func+0x1a>
 80009d2:	4b07      	ldr	r3, [pc, #28]	; (80009f0 <__assert_func+0x34>)
 80009d4:	001c      	movs	r4, r3
 80009d6:	9301      	str	r3, [sp, #4]
 80009d8:	9100      	str	r1, [sp, #0]
 80009da:	002b      	movs	r3, r5
 80009dc:	4905      	ldr	r1, [pc, #20]	; (80009f4 <__assert_func+0x38>)
 80009de:	9402      	str	r4, [sp, #8]
 80009e0:	f000 f8ec 	bl	8000bbc <fiprintf>
 80009e4:	f000 fe3e 	bl	8001664 <abort>
 80009e8:	20000048 	.word	0x20000048
 80009ec:	08001b5a 	.word	0x08001b5a
 80009f0:	08001b95 	.word	0x08001b95
 80009f4:	08001b67 	.word	0x08001b67

080009f8 <std>:
 80009f8:	2300      	movs	r3, #0
 80009fa:	b510      	push	{r4, lr}
 80009fc:	0004      	movs	r4, r0
 80009fe:	6003      	str	r3, [r0, #0]
 8000a00:	6043      	str	r3, [r0, #4]
 8000a02:	6083      	str	r3, [r0, #8]
 8000a04:	8181      	strh	r1, [r0, #12]
 8000a06:	6643      	str	r3, [r0, #100]	; 0x64
 8000a08:	0019      	movs	r1, r3
 8000a0a:	81c2      	strh	r2, [r0, #14]
 8000a0c:	6103      	str	r3, [r0, #16]
 8000a0e:	6143      	str	r3, [r0, #20]
 8000a10:	6183      	str	r3, [r0, #24]
 8000a12:	2208      	movs	r2, #8
 8000a14:	305c      	adds	r0, #92	; 0x5c
 8000a16:	f7ff ff5d 	bl	80008d4 <memset>
 8000a1a:	4b05      	ldr	r3, [pc, #20]	; (8000a30 <std+0x38>)
 8000a1c:	6263      	str	r3, [r4, #36]	; 0x24
 8000a1e:	4b05      	ldr	r3, [pc, #20]	; (8000a34 <std+0x3c>)
 8000a20:	6224      	str	r4, [r4, #32]
 8000a22:	62a3      	str	r3, [r4, #40]	; 0x28
 8000a24:	4b04      	ldr	r3, [pc, #16]	; (8000a38 <std+0x40>)
 8000a26:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000a28:	4b04      	ldr	r3, [pc, #16]	; (8000a3c <std+0x44>)
 8000a2a:	6323      	str	r3, [r4, #48]	; 0x30
 8000a2c:	bd10      	pop	{r4, pc}
 8000a2e:	46c0      	nop			; (mov r8, r8)
 8000a30:	08001409 	.word	0x08001409
 8000a34:	08001431 	.word	0x08001431
 8000a38:	08001469 	.word	0x08001469
 8000a3c:	08001495 	.word	0x08001495

08000a40 <_cleanup_r>:
 8000a40:	b510      	push	{r4, lr}
 8000a42:	4902      	ldr	r1, [pc, #8]	; (8000a4c <_cleanup_r+0xc>)
 8000a44:	f000 f8ca 	bl	8000bdc <_fwalk_reent>
 8000a48:	bd10      	pop	{r4, pc}
 8000a4a:	46c0      	nop			; (mov r8, r8)
 8000a4c:	080017b1 	.word	0x080017b1

08000a50 <__sfmoreglue>:
 8000a50:	b570      	push	{r4, r5, r6, lr}
 8000a52:	2568      	movs	r5, #104	; 0x68
 8000a54:	1e4a      	subs	r2, r1, #1
 8000a56:	4355      	muls	r5, r2
 8000a58:	000e      	movs	r6, r1
 8000a5a:	0029      	movs	r1, r5
 8000a5c:	3174      	adds	r1, #116	; 0x74
 8000a5e:	f000 f935 	bl	8000ccc <_malloc_r>
 8000a62:	1e04      	subs	r4, r0, #0
 8000a64:	d008      	beq.n	8000a78 <__sfmoreglue+0x28>
 8000a66:	2100      	movs	r1, #0
 8000a68:	002a      	movs	r2, r5
 8000a6a:	6001      	str	r1, [r0, #0]
 8000a6c:	6046      	str	r6, [r0, #4]
 8000a6e:	300c      	adds	r0, #12
 8000a70:	60a0      	str	r0, [r4, #8]
 8000a72:	3268      	adds	r2, #104	; 0x68
 8000a74:	f7ff ff2e 	bl	80008d4 <memset>
 8000a78:	0020      	movs	r0, r4
 8000a7a:	bd70      	pop	{r4, r5, r6, pc}

08000a7c <__sfp_lock_acquire>:
 8000a7c:	b510      	push	{r4, lr}
 8000a7e:	4802      	ldr	r0, [pc, #8]	; (8000a88 <__sfp_lock_acquire+0xc>)
 8000a80:	f000 f8cd 	bl	8000c1e <__retarget_lock_acquire_recursive>
 8000a84:	bd10      	pop	{r4, pc}
 8000a86:	46c0      	nop			; (mov r8, r8)
 8000a88:	200000dc 	.word	0x200000dc

08000a8c <__sfp_lock_release>:
 8000a8c:	b510      	push	{r4, lr}
 8000a8e:	4802      	ldr	r0, [pc, #8]	; (8000a98 <__sfp_lock_release+0xc>)
 8000a90:	f000 f8c6 	bl	8000c20 <__retarget_lock_release_recursive>
 8000a94:	bd10      	pop	{r4, pc}
 8000a96:	46c0      	nop			; (mov r8, r8)
 8000a98:	200000dc 	.word	0x200000dc

08000a9c <__sinit_lock_acquire>:
 8000a9c:	b510      	push	{r4, lr}
 8000a9e:	4802      	ldr	r0, [pc, #8]	; (8000aa8 <__sinit_lock_acquire+0xc>)
 8000aa0:	f000 f8bd 	bl	8000c1e <__retarget_lock_acquire_recursive>
 8000aa4:	bd10      	pop	{r4, pc}
 8000aa6:	46c0      	nop			; (mov r8, r8)
 8000aa8:	200000d7 	.word	0x200000d7

08000aac <__sinit_lock_release>:
 8000aac:	b510      	push	{r4, lr}
 8000aae:	4802      	ldr	r0, [pc, #8]	; (8000ab8 <__sinit_lock_release+0xc>)
 8000ab0:	f000 f8b6 	bl	8000c20 <__retarget_lock_release_recursive>
 8000ab4:	bd10      	pop	{r4, pc}
 8000ab6:	46c0      	nop			; (mov r8, r8)
 8000ab8:	200000d7 	.word	0x200000d7

08000abc <__sinit>:
 8000abc:	b513      	push	{r0, r1, r4, lr}
 8000abe:	0004      	movs	r4, r0
 8000ac0:	f7ff ffec 	bl	8000a9c <__sinit_lock_acquire>
 8000ac4:	69a3      	ldr	r3, [r4, #24]
 8000ac6:	2b00      	cmp	r3, #0
 8000ac8:	d002      	beq.n	8000ad0 <__sinit+0x14>
 8000aca:	f7ff ffef 	bl	8000aac <__sinit_lock_release>
 8000ace:	bd13      	pop	{r0, r1, r4, pc}
 8000ad0:	64a3      	str	r3, [r4, #72]	; 0x48
 8000ad2:	64e3      	str	r3, [r4, #76]	; 0x4c
 8000ad4:	6523      	str	r3, [r4, #80]	; 0x50
 8000ad6:	4b13      	ldr	r3, [pc, #76]	; (8000b24 <__sinit+0x68>)
 8000ad8:	4a13      	ldr	r2, [pc, #76]	; (8000b28 <__sinit+0x6c>)
 8000ada:	681b      	ldr	r3, [r3, #0]
 8000adc:	62a2      	str	r2, [r4, #40]	; 0x28
 8000ade:	9301      	str	r3, [sp, #4]
 8000ae0:	42a3      	cmp	r3, r4
 8000ae2:	d101      	bne.n	8000ae8 <__sinit+0x2c>
 8000ae4:	2301      	movs	r3, #1
 8000ae6:	61a3      	str	r3, [r4, #24]
 8000ae8:	0020      	movs	r0, r4
 8000aea:	f000 f81f 	bl	8000b2c <__sfp>
 8000aee:	6060      	str	r0, [r4, #4]
 8000af0:	0020      	movs	r0, r4
 8000af2:	f000 f81b 	bl	8000b2c <__sfp>
 8000af6:	60a0      	str	r0, [r4, #8]
 8000af8:	0020      	movs	r0, r4
 8000afa:	f000 f817 	bl	8000b2c <__sfp>
 8000afe:	2200      	movs	r2, #0
 8000b00:	2104      	movs	r1, #4
 8000b02:	60e0      	str	r0, [r4, #12]
 8000b04:	6860      	ldr	r0, [r4, #4]
 8000b06:	f7ff ff77 	bl	80009f8 <std>
 8000b0a:	2201      	movs	r2, #1
 8000b0c:	2109      	movs	r1, #9
 8000b0e:	68a0      	ldr	r0, [r4, #8]
 8000b10:	f7ff ff72 	bl	80009f8 <std>
 8000b14:	2202      	movs	r2, #2
 8000b16:	2112      	movs	r1, #18
 8000b18:	68e0      	ldr	r0, [r4, #12]
 8000b1a:	f7ff ff6d 	bl	80009f8 <std>
 8000b1e:	2301      	movs	r3, #1
 8000b20:	61a3      	str	r3, [r4, #24]
 8000b22:	e7d2      	b.n	8000aca <__sinit+0xe>
 8000b24:	08001ae0 	.word	0x08001ae0
 8000b28:	08000a41 	.word	0x08000a41

08000b2c <__sfp>:
 8000b2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b2e:	0007      	movs	r7, r0
 8000b30:	f7ff ffa4 	bl	8000a7c <__sfp_lock_acquire>
 8000b34:	4b1f      	ldr	r3, [pc, #124]	; (8000bb4 <__sfp+0x88>)
 8000b36:	681e      	ldr	r6, [r3, #0]
 8000b38:	69b3      	ldr	r3, [r6, #24]
 8000b3a:	2b00      	cmp	r3, #0
 8000b3c:	d102      	bne.n	8000b44 <__sfp+0x18>
 8000b3e:	0030      	movs	r0, r6
 8000b40:	f7ff ffbc 	bl	8000abc <__sinit>
 8000b44:	3648      	adds	r6, #72	; 0x48
 8000b46:	68b4      	ldr	r4, [r6, #8]
 8000b48:	6873      	ldr	r3, [r6, #4]
 8000b4a:	3b01      	subs	r3, #1
 8000b4c:	d504      	bpl.n	8000b58 <__sfp+0x2c>
 8000b4e:	6833      	ldr	r3, [r6, #0]
 8000b50:	2b00      	cmp	r3, #0
 8000b52:	d022      	beq.n	8000b9a <__sfp+0x6e>
 8000b54:	6836      	ldr	r6, [r6, #0]
 8000b56:	e7f6      	b.n	8000b46 <__sfp+0x1a>
 8000b58:	220c      	movs	r2, #12
 8000b5a:	5ea5      	ldrsh	r5, [r4, r2]
 8000b5c:	2d00      	cmp	r5, #0
 8000b5e:	d11a      	bne.n	8000b96 <__sfp+0x6a>
 8000b60:	0020      	movs	r0, r4
 8000b62:	4b15      	ldr	r3, [pc, #84]	; (8000bb8 <__sfp+0x8c>)
 8000b64:	3058      	adds	r0, #88	; 0x58
 8000b66:	60e3      	str	r3, [r4, #12]
 8000b68:	6665      	str	r5, [r4, #100]	; 0x64
 8000b6a:	f000 f857 	bl	8000c1c <__retarget_lock_init_recursive>
 8000b6e:	f7ff ff8d 	bl	8000a8c <__sfp_lock_release>
 8000b72:	0020      	movs	r0, r4
 8000b74:	2208      	movs	r2, #8
 8000b76:	0029      	movs	r1, r5
 8000b78:	6025      	str	r5, [r4, #0]
 8000b7a:	60a5      	str	r5, [r4, #8]
 8000b7c:	6065      	str	r5, [r4, #4]
 8000b7e:	6125      	str	r5, [r4, #16]
 8000b80:	6165      	str	r5, [r4, #20]
 8000b82:	61a5      	str	r5, [r4, #24]
 8000b84:	305c      	adds	r0, #92	; 0x5c
 8000b86:	f7ff fea5 	bl	80008d4 <memset>
 8000b8a:	6365      	str	r5, [r4, #52]	; 0x34
 8000b8c:	63a5      	str	r5, [r4, #56]	; 0x38
 8000b8e:	64a5      	str	r5, [r4, #72]	; 0x48
 8000b90:	64e5      	str	r5, [r4, #76]	; 0x4c
 8000b92:	0020      	movs	r0, r4
 8000b94:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000b96:	3468      	adds	r4, #104	; 0x68
 8000b98:	e7d7      	b.n	8000b4a <__sfp+0x1e>
 8000b9a:	2104      	movs	r1, #4
 8000b9c:	0038      	movs	r0, r7
 8000b9e:	f7ff ff57 	bl	8000a50 <__sfmoreglue>
 8000ba2:	1e04      	subs	r4, r0, #0
 8000ba4:	6030      	str	r0, [r6, #0]
 8000ba6:	d1d5      	bne.n	8000b54 <__sfp+0x28>
 8000ba8:	f7ff ff70 	bl	8000a8c <__sfp_lock_release>
 8000bac:	230c      	movs	r3, #12
 8000bae:	603b      	str	r3, [r7, #0]
 8000bb0:	e7ef      	b.n	8000b92 <__sfp+0x66>
 8000bb2:	46c0      	nop			; (mov r8, r8)
 8000bb4:	08001ae0 	.word	0x08001ae0
 8000bb8:	ffff0001 	.word	0xffff0001

08000bbc <fiprintf>:
 8000bbc:	b40e      	push	{r1, r2, r3}
 8000bbe:	b503      	push	{r0, r1, lr}
 8000bc0:	0001      	movs	r1, r0
 8000bc2:	ab03      	add	r3, sp, #12
 8000bc4:	4804      	ldr	r0, [pc, #16]	; (8000bd8 <fiprintf+0x1c>)
 8000bc6:	cb04      	ldmia	r3!, {r2}
 8000bc8:	6800      	ldr	r0, [r0, #0]
 8000bca:	9301      	str	r3, [sp, #4]
 8000bcc:	f000 f904 	bl	8000dd8 <_vfiprintf_r>
 8000bd0:	b002      	add	sp, #8
 8000bd2:	bc08      	pop	{r3}
 8000bd4:	b003      	add	sp, #12
 8000bd6:	4718      	bx	r3
 8000bd8:	20000048 	.word	0x20000048

08000bdc <_fwalk_reent>:
 8000bdc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000bde:	0004      	movs	r4, r0
 8000be0:	0006      	movs	r6, r0
 8000be2:	2700      	movs	r7, #0
 8000be4:	9101      	str	r1, [sp, #4]
 8000be6:	3448      	adds	r4, #72	; 0x48
 8000be8:	6863      	ldr	r3, [r4, #4]
 8000bea:	68a5      	ldr	r5, [r4, #8]
 8000bec:	9300      	str	r3, [sp, #0]
 8000bee:	9b00      	ldr	r3, [sp, #0]
 8000bf0:	3b01      	subs	r3, #1
 8000bf2:	9300      	str	r3, [sp, #0]
 8000bf4:	d504      	bpl.n	8000c00 <_fwalk_reent+0x24>
 8000bf6:	6824      	ldr	r4, [r4, #0]
 8000bf8:	2c00      	cmp	r4, #0
 8000bfa:	d1f5      	bne.n	8000be8 <_fwalk_reent+0xc>
 8000bfc:	0038      	movs	r0, r7
 8000bfe:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8000c00:	89ab      	ldrh	r3, [r5, #12]
 8000c02:	2b01      	cmp	r3, #1
 8000c04:	d908      	bls.n	8000c18 <_fwalk_reent+0x3c>
 8000c06:	220e      	movs	r2, #14
 8000c08:	5eab      	ldrsh	r3, [r5, r2]
 8000c0a:	3301      	adds	r3, #1
 8000c0c:	d004      	beq.n	8000c18 <_fwalk_reent+0x3c>
 8000c0e:	0029      	movs	r1, r5
 8000c10:	0030      	movs	r0, r6
 8000c12:	9b01      	ldr	r3, [sp, #4]
 8000c14:	4798      	blx	r3
 8000c16:	4307      	orrs	r7, r0
 8000c18:	3568      	adds	r5, #104	; 0x68
 8000c1a:	e7e8      	b.n	8000bee <_fwalk_reent+0x12>

08000c1c <__retarget_lock_init_recursive>:
 8000c1c:	4770      	bx	lr

08000c1e <__retarget_lock_acquire_recursive>:
 8000c1e:	4770      	bx	lr

08000c20 <__retarget_lock_release_recursive>:
 8000c20:	4770      	bx	lr
	...

08000c24 <malloc>:
 8000c24:	b510      	push	{r4, lr}
 8000c26:	4b03      	ldr	r3, [pc, #12]	; (8000c34 <malloc+0x10>)
 8000c28:	0001      	movs	r1, r0
 8000c2a:	6818      	ldr	r0, [r3, #0]
 8000c2c:	f000 f84e 	bl	8000ccc <_malloc_r>
 8000c30:	bd10      	pop	{r4, pc}
 8000c32:	46c0      	nop			; (mov r8, r8)
 8000c34:	20000048 	.word	0x20000048

08000c38 <_free_r>:
 8000c38:	b570      	push	{r4, r5, r6, lr}
 8000c3a:	0005      	movs	r5, r0
 8000c3c:	2900      	cmp	r1, #0
 8000c3e:	d010      	beq.n	8000c62 <_free_r+0x2a>
 8000c40:	1f0c      	subs	r4, r1, #4
 8000c42:	6823      	ldr	r3, [r4, #0]
 8000c44:	2b00      	cmp	r3, #0
 8000c46:	da00      	bge.n	8000c4a <_free_r+0x12>
 8000c48:	18e4      	adds	r4, r4, r3
 8000c4a:	0028      	movs	r0, r5
 8000c4c:	f000 fe7c 	bl	8001948 <__malloc_lock>
 8000c50:	4a1d      	ldr	r2, [pc, #116]	; (8000cc8 <_free_r+0x90>)
 8000c52:	6813      	ldr	r3, [r2, #0]
 8000c54:	2b00      	cmp	r3, #0
 8000c56:	d105      	bne.n	8000c64 <_free_r+0x2c>
 8000c58:	6063      	str	r3, [r4, #4]
 8000c5a:	6014      	str	r4, [r2, #0]
 8000c5c:	0028      	movs	r0, r5
 8000c5e:	f000 fe7b 	bl	8001958 <__malloc_unlock>
 8000c62:	bd70      	pop	{r4, r5, r6, pc}
 8000c64:	42a3      	cmp	r3, r4
 8000c66:	d908      	bls.n	8000c7a <_free_r+0x42>
 8000c68:	6821      	ldr	r1, [r4, #0]
 8000c6a:	1860      	adds	r0, r4, r1
 8000c6c:	4283      	cmp	r3, r0
 8000c6e:	d1f3      	bne.n	8000c58 <_free_r+0x20>
 8000c70:	6818      	ldr	r0, [r3, #0]
 8000c72:	685b      	ldr	r3, [r3, #4]
 8000c74:	1841      	adds	r1, r0, r1
 8000c76:	6021      	str	r1, [r4, #0]
 8000c78:	e7ee      	b.n	8000c58 <_free_r+0x20>
 8000c7a:	001a      	movs	r2, r3
 8000c7c:	685b      	ldr	r3, [r3, #4]
 8000c7e:	2b00      	cmp	r3, #0
 8000c80:	d001      	beq.n	8000c86 <_free_r+0x4e>
 8000c82:	42a3      	cmp	r3, r4
 8000c84:	d9f9      	bls.n	8000c7a <_free_r+0x42>
 8000c86:	6811      	ldr	r1, [r2, #0]
 8000c88:	1850      	adds	r0, r2, r1
 8000c8a:	42a0      	cmp	r0, r4
 8000c8c:	d10b      	bne.n	8000ca6 <_free_r+0x6e>
 8000c8e:	6820      	ldr	r0, [r4, #0]
 8000c90:	1809      	adds	r1, r1, r0
 8000c92:	1850      	adds	r0, r2, r1
 8000c94:	6011      	str	r1, [r2, #0]
 8000c96:	4283      	cmp	r3, r0
 8000c98:	d1e0      	bne.n	8000c5c <_free_r+0x24>
 8000c9a:	6818      	ldr	r0, [r3, #0]
 8000c9c:	685b      	ldr	r3, [r3, #4]
 8000c9e:	1841      	adds	r1, r0, r1
 8000ca0:	6011      	str	r1, [r2, #0]
 8000ca2:	6053      	str	r3, [r2, #4]
 8000ca4:	e7da      	b.n	8000c5c <_free_r+0x24>
 8000ca6:	42a0      	cmp	r0, r4
 8000ca8:	d902      	bls.n	8000cb0 <_free_r+0x78>
 8000caa:	230c      	movs	r3, #12
 8000cac:	602b      	str	r3, [r5, #0]
 8000cae:	e7d5      	b.n	8000c5c <_free_r+0x24>
 8000cb0:	6821      	ldr	r1, [r4, #0]
 8000cb2:	1860      	adds	r0, r4, r1
 8000cb4:	4283      	cmp	r3, r0
 8000cb6:	d103      	bne.n	8000cc0 <_free_r+0x88>
 8000cb8:	6818      	ldr	r0, [r3, #0]
 8000cba:	685b      	ldr	r3, [r3, #4]
 8000cbc:	1841      	adds	r1, r0, r1
 8000cbe:	6021      	str	r1, [r4, #0]
 8000cc0:	6063      	str	r3, [r4, #4]
 8000cc2:	6054      	str	r4, [r2, #4]
 8000cc4:	e7ca      	b.n	8000c5c <_free_r+0x24>
 8000cc6:	46c0      	nop			; (mov r8, r8)
 8000cc8:	200000cc 	.word	0x200000cc

08000ccc <_malloc_r>:
 8000ccc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000cce:	2303      	movs	r3, #3
 8000cd0:	1ccd      	adds	r5, r1, #3
 8000cd2:	439d      	bics	r5, r3
 8000cd4:	3508      	adds	r5, #8
 8000cd6:	0006      	movs	r6, r0
 8000cd8:	2d0c      	cmp	r5, #12
 8000cda:	d21f      	bcs.n	8000d1c <_malloc_r+0x50>
 8000cdc:	250c      	movs	r5, #12
 8000cde:	42a9      	cmp	r1, r5
 8000ce0:	d81e      	bhi.n	8000d20 <_malloc_r+0x54>
 8000ce2:	0030      	movs	r0, r6
 8000ce4:	f000 fe30 	bl	8001948 <__malloc_lock>
 8000ce8:	4925      	ldr	r1, [pc, #148]	; (8000d80 <_malloc_r+0xb4>)
 8000cea:	680a      	ldr	r2, [r1, #0]
 8000cec:	0014      	movs	r4, r2
 8000cee:	2c00      	cmp	r4, #0
 8000cf0:	d11a      	bne.n	8000d28 <_malloc_r+0x5c>
 8000cf2:	4f24      	ldr	r7, [pc, #144]	; (8000d84 <_malloc_r+0xb8>)
 8000cf4:	683b      	ldr	r3, [r7, #0]
 8000cf6:	2b00      	cmp	r3, #0
 8000cf8:	d104      	bne.n	8000d04 <_malloc_r+0x38>
 8000cfa:	0021      	movs	r1, r4
 8000cfc:	0030      	movs	r0, r6
 8000cfe:	f000 fb71 	bl	80013e4 <_sbrk_r>
 8000d02:	6038      	str	r0, [r7, #0]
 8000d04:	0029      	movs	r1, r5
 8000d06:	0030      	movs	r0, r6
 8000d08:	f000 fb6c 	bl	80013e4 <_sbrk_r>
 8000d0c:	1c43      	adds	r3, r0, #1
 8000d0e:	d12b      	bne.n	8000d68 <_malloc_r+0x9c>
 8000d10:	230c      	movs	r3, #12
 8000d12:	0030      	movs	r0, r6
 8000d14:	6033      	str	r3, [r6, #0]
 8000d16:	f000 fe1f 	bl	8001958 <__malloc_unlock>
 8000d1a:	e003      	b.n	8000d24 <_malloc_r+0x58>
 8000d1c:	2d00      	cmp	r5, #0
 8000d1e:	dade      	bge.n	8000cde <_malloc_r+0x12>
 8000d20:	230c      	movs	r3, #12
 8000d22:	6033      	str	r3, [r6, #0]
 8000d24:	2000      	movs	r0, #0
 8000d26:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000d28:	6823      	ldr	r3, [r4, #0]
 8000d2a:	1b5b      	subs	r3, r3, r5
 8000d2c:	d419      	bmi.n	8000d62 <_malloc_r+0x96>
 8000d2e:	2b0b      	cmp	r3, #11
 8000d30:	d903      	bls.n	8000d3a <_malloc_r+0x6e>
 8000d32:	6023      	str	r3, [r4, #0]
 8000d34:	18e4      	adds	r4, r4, r3
 8000d36:	6025      	str	r5, [r4, #0]
 8000d38:	e003      	b.n	8000d42 <_malloc_r+0x76>
 8000d3a:	6863      	ldr	r3, [r4, #4]
 8000d3c:	42a2      	cmp	r2, r4
 8000d3e:	d10e      	bne.n	8000d5e <_malloc_r+0x92>
 8000d40:	600b      	str	r3, [r1, #0]
 8000d42:	0030      	movs	r0, r6
 8000d44:	f000 fe08 	bl	8001958 <__malloc_unlock>
 8000d48:	0020      	movs	r0, r4
 8000d4a:	2207      	movs	r2, #7
 8000d4c:	300b      	adds	r0, #11
 8000d4e:	1d23      	adds	r3, r4, #4
 8000d50:	4390      	bics	r0, r2
 8000d52:	1ac2      	subs	r2, r0, r3
 8000d54:	4298      	cmp	r0, r3
 8000d56:	d0e6      	beq.n	8000d26 <_malloc_r+0x5a>
 8000d58:	1a1b      	subs	r3, r3, r0
 8000d5a:	50a3      	str	r3, [r4, r2]
 8000d5c:	e7e3      	b.n	8000d26 <_malloc_r+0x5a>
 8000d5e:	6053      	str	r3, [r2, #4]
 8000d60:	e7ef      	b.n	8000d42 <_malloc_r+0x76>
 8000d62:	0022      	movs	r2, r4
 8000d64:	6864      	ldr	r4, [r4, #4]
 8000d66:	e7c2      	b.n	8000cee <_malloc_r+0x22>
 8000d68:	2303      	movs	r3, #3
 8000d6a:	1cc4      	adds	r4, r0, #3
 8000d6c:	439c      	bics	r4, r3
 8000d6e:	42a0      	cmp	r0, r4
 8000d70:	d0e1      	beq.n	8000d36 <_malloc_r+0x6a>
 8000d72:	1a21      	subs	r1, r4, r0
 8000d74:	0030      	movs	r0, r6
 8000d76:	f000 fb35 	bl	80013e4 <_sbrk_r>
 8000d7a:	1c43      	adds	r3, r0, #1
 8000d7c:	d1db      	bne.n	8000d36 <_malloc_r+0x6a>
 8000d7e:	e7c7      	b.n	8000d10 <_malloc_r+0x44>
 8000d80:	200000cc 	.word	0x200000cc
 8000d84:	200000d0 	.word	0x200000d0

08000d88 <__sfputc_r>:
 8000d88:	6893      	ldr	r3, [r2, #8]
 8000d8a:	b510      	push	{r4, lr}
 8000d8c:	3b01      	subs	r3, #1
 8000d8e:	6093      	str	r3, [r2, #8]
 8000d90:	2b00      	cmp	r3, #0
 8000d92:	da04      	bge.n	8000d9e <__sfputc_r+0x16>
 8000d94:	6994      	ldr	r4, [r2, #24]
 8000d96:	42a3      	cmp	r3, r4
 8000d98:	db07      	blt.n	8000daa <__sfputc_r+0x22>
 8000d9a:	290a      	cmp	r1, #10
 8000d9c:	d005      	beq.n	8000daa <__sfputc_r+0x22>
 8000d9e:	6813      	ldr	r3, [r2, #0]
 8000da0:	1c58      	adds	r0, r3, #1
 8000da2:	6010      	str	r0, [r2, #0]
 8000da4:	7019      	strb	r1, [r3, #0]
 8000da6:	0008      	movs	r0, r1
 8000da8:	bd10      	pop	{r4, pc}
 8000daa:	f000 fb79 	bl	80014a0 <__swbuf_r>
 8000dae:	0001      	movs	r1, r0
 8000db0:	e7f9      	b.n	8000da6 <__sfputc_r+0x1e>

08000db2 <__sfputs_r>:
 8000db2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000db4:	0006      	movs	r6, r0
 8000db6:	000f      	movs	r7, r1
 8000db8:	0014      	movs	r4, r2
 8000dba:	18d5      	adds	r5, r2, r3
 8000dbc:	42ac      	cmp	r4, r5
 8000dbe:	d101      	bne.n	8000dc4 <__sfputs_r+0x12>
 8000dc0:	2000      	movs	r0, #0
 8000dc2:	e007      	b.n	8000dd4 <__sfputs_r+0x22>
 8000dc4:	7821      	ldrb	r1, [r4, #0]
 8000dc6:	003a      	movs	r2, r7
 8000dc8:	0030      	movs	r0, r6
 8000dca:	f7ff ffdd 	bl	8000d88 <__sfputc_r>
 8000dce:	3401      	adds	r4, #1
 8000dd0:	1c43      	adds	r3, r0, #1
 8000dd2:	d1f3      	bne.n	8000dbc <__sfputs_r+0xa>
 8000dd4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000dd8 <_vfiprintf_r>:
 8000dd8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000dda:	b0a1      	sub	sp, #132	; 0x84
 8000ddc:	0006      	movs	r6, r0
 8000dde:	000c      	movs	r4, r1
 8000de0:	001f      	movs	r7, r3
 8000de2:	9203      	str	r2, [sp, #12]
 8000de4:	2800      	cmp	r0, #0
 8000de6:	d004      	beq.n	8000df2 <_vfiprintf_r+0x1a>
 8000de8:	6983      	ldr	r3, [r0, #24]
 8000dea:	2b00      	cmp	r3, #0
 8000dec:	d101      	bne.n	8000df2 <_vfiprintf_r+0x1a>
 8000dee:	f7ff fe65 	bl	8000abc <__sinit>
 8000df2:	4b8e      	ldr	r3, [pc, #568]	; (800102c <_vfiprintf_r+0x254>)
 8000df4:	429c      	cmp	r4, r3
 8000df6:	d11c      	bne.n	8000e32 <_vfiprintf_r+0x5a>
 8000df8:	6874      	ldr	r4, [r6, #4]
 8000dfa:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000dfc:	07db      	lsls	r3, r3, #31
 8000dfe:	d405      	bmi.n	8000e0c <_vfiprintf_r+0x34>
 8000e00:	89a3      	ldrh	r3, [r4, #12]
 8000e02:	059b      	lsls	r3, r3, #22
 8000e04:	d402      	bmi.n	8000e0c <_vfiprintf_r+0x34>
 8000e06:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000e08:	f7ff ff09 	bl	8000c1e <__retarget_lock_acquire_recursive>
 8000e0c:	89a3      	ldrh	r3, [r4, #12]
 8000e0e:	071b      	lsls	r3, r3, #28
 8000e10:	d502      	bpl.n	8000e18 <_vfiprintf_r+0x40>
 8000e12:	6923      	ldr	r3, [r4, #16]
 8000e14:	2b00      	cmp	r3, #0
 8000e16:	d11d      	bne.n	8000e54 <_vfiprintf_r+0x7c>
 8000e18:	0021      	movs	r1, r4
 8000e1a:	0030      	movs	r0, r6
 8000e1c:	f000 fbaa 	bl	8001574 <__swsetup_r>
 8000e20:	2800      	cmp	r0, #0
 8000e22:	d017      	beq.n	8000e54 <_vfiprintf_r+0x7c>
 8000e24:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000e26:	07db      	lsls	r3, r3, #31
 8000e28:	d50d      	bpl.n	8000e46 <_vfiprintf_r+0x6e>
 8000e2a:	2001      	movs	r0, #1
 8000e2c:	4240      	negs	r0, r0
 8000e2e:	b021      	add	sp, #132	; 0x84
 8000e30:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000e32:	4b7f      	ldr	r3, [pc, #508]	; (8001030 <_vfiprintf_r+0x258>)
 8000e34:	429c      	cmp	r4, r3
 8000e36:	d101      	bne.n	8000e3c <_vfiprintf_r+0x64>
 8000e38:	68b4      	ldr	r4, [r6, #8]
 8000e3a:	e7de      	b.n	8000dfa <_vfiprintf_r+0x22>
 8000e3c:	4b7d      	ldr	r3, [pc, #500]	; (8001034 <_vfiprintf_r+0x25c>)
 8000e3e:	429c      	cmp	r4, r3
 8000e40:	d1db      	bne.n	8000dfa <_vfiprintf_r+0x22>
 8000e42:	68f4      	ldr	r4, [r6, #12]
 8000e44:	e7d9      	b.n	8000dfa <_vfiprintf_r+0x22>
 8000e46:	89a3      	ldrh	r3, [r4, #12]
 8000e48:	059b      	lsls	r3, r3, #22
 8000e4a:	d4ee      	bmi.n	8000e2a <_vfiprintf_r+0x52>
 8000e4c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000e4e:	f7ff fee7 	bl	8000c20 <__retarget_lock_release_recursive>
 8000e52:	e7ea      	b.n	8000e2a <_vfiprintf_r+0x52>
 8000e54:	2300      	movs	r3, #0
 8000e56:	ad08      	add	r5, sp, #32
 8000e58:	616b      	str	r3, [r5, #20]
 8000e5a:	3320      	adds	r3, #32
 8000e5c:	766b      	strb	r3, [r5, #25]
 8000e5e:	3310      	adds	r3, #16
 8000e60:	76ab      	strb	r3, [r5, #26]
 8000e62:	9707      	str	r7, [sp, #28]
 8000e64:	9f03      	ldr	r7, [sp, #12]
 8000e66:	783b      	ldrb	r3, [r7, #0]
 8000e68:	2b00      	cmp	r3, #0
 8000e6a:	d001      	beq.n	8000e70 <_vfiprintf_r+0x98>
 8000e6c:	2b25      	cmp	r3, #37	; 0x25
 8000e6e:	d14e      	bne.n	8000f0e <_vfiprintf_r+0x136>
 8000e70:	9b03      	ldr	r3, [sp, #12]
 8000e72:	1afb      	subs	r3, r7, r3
 8000e74:	9305      	str	r3, [sp, #20]
 8000e76:	9b03      	ldr	r3, [sp, #12]
 8000e78:	429f      	cmp	r7, r3
 8000e7a:	d00d      	beq.n	8000e98 <_vfiprintf_r+0xc0>
 8000e7c:	9b05      	ldr	r3, [sp, #20]
 8000e7e:	0021      	movs	r1, r4
 8000e80:	0030      	movs	r0, r6
 8000e82:	9a03      	ldr	r2, [sp, #12]
 8000e84:	f7ff ff95 	bl	8000db2 <__sfputs_r>
 8000e88:	1c43      	adds	r3, r0, #1
 8000e8a:	d100      	bne.n	8000e8e <_vfiprintf_r+0xb6>
 8000e8c:	e0b5      	b.n	8000ffa <_vfiprintf_r+0x222>
 8000e8e:	696a      	ldr	r2, [r5, #20]
 8000e90:	9b05      	ldr	r3, [sp, #20]
 8000e92:	4694      	mov	ip, r2
 8000e94:	4463      	add	r3, ip
 8000e96:	616b      	str	r3, [r5, #20]
 8000e98:	783b      	ldrb	r3, [r7, #0]
 8000e9a:	2b00      	cmp	r3, #0
 8000e9c:	d100      	bne.n	8000ea0 <_vfiprintf_r+0xc8>
 8000e9e:	e0ac      	b.n	8000ffa <_vfiprintf_r+0x222>
 8000ea0:	2201      	movs	r2, #1
 8000ea2:	1c7b      	adds	r3, r7, #1
 8000ea4:	9303      	str	r3, [sp, #12]
 8000ea6:	2300      	movs	r3, #0
 8000ea8:	4252      	negs	r2, r2
 8000eaa:	606a      	str	r2, [r5, #4]
 8000eac:	a904      	add	r1, sp, #16
 8000eae:	3254      	adds	r2, #84	; 0x54
 8000eb0:	1852      	adds	r2, r2, r1
 8000eb2:	602b      	str	r3, [r5, #0]
 8000eb4:	60eb      	str	r3, [r5, #12]
 8000eb6:	60ab      	str	r3, [r5, #8]
 8000eb8:	7013      	strb	r3, [r2, #0]
 8000eba:	65ab      	str	r3, [r5, #88]	; 0x58
 8000ebc:	9b03      	ldr	r3, [sp, #12]
 8000ebe:	2205      	movs	r2, #5
 8000ec0:	7819      	ldrb	r1, [r3, #0]
 8000ec2:	485d      	ldr	r0, [pc, #372]	; (8001038 <_vfiprintf_r+0x260>)
 8000ec4:	f000 fd34 	bl	8001930 <memchr>
 8000ec8:	9b03      	ldr	r3, [sp, #12]
 8000eca:	1c5f      	adds	r7, r3, #1
 8000ecc:	2800      	cmp	r0, #0
 8000ece:	d120      	bne.n	8000f12 <_vfiprintf_r+0x13a>
 8000ed0:	682a      	ldr	r2, [r5, #0]
 8000ed2:	06d3      	lsls	r3, r2, #27
 8000ed4:	d504      	bpl.n	8000ee0 <_vfiprintf_r+0x108>
 8000ed6:	2353      	movs	r3, #83	; 0x53
 8000ed8:	a904      	add	r1, sp, #16
 8000eda:	185b      	adds	r3, r3, r1
 8000edc:	2120      	movs	r1, #32
 8000ede:	7019      	strb	r1, [r3, #0]
 8000ee0:	0713      	lsls	r3, r2, #28
 8000ee2:	d504      	bpl.n	8000eee <_vfiprintf_r+0x116>
 8000ee4:	2353      	movs	r3, #83	; 0x53
 8000ee6:	a904      	add	r1, sp, #16
 8000ee8:	185b      	adds	r3, r3, r1
 8000eea:	212b      	movs	r1, #43	; 0x2b
 8000eec:	7019      	strb	r1, [r3, #0]
 8000eee:	9b03      	ldr	r3, [sp, #12]
 8000ef0:	781b      	ldrb	r3, [r3, #0]
 8000ef2:	2b2a      	cmp	r3, #42	; 0x2a
 8000ef4:	d016      	beq.n	8000f24 <_vfiprintf_r+0x14c>
 8000ef6:	2100      	movs	r1, #0
 8000ef8:	68eb      	ldr	r3, [r5, #12]
 8000efa:	9f03      	ldr	r7, [sp, #12]
 8000efc:	783a      	ldrb	r2, [r7, #0]
 8000efe:	1c78      	adds	r0, r7, #1
 8000f00:	3a30      	subs	r2, #48	; 0x30
 8000f02:	4684      	mov	ip, r0
 8000f04:	2a09      	cmp	r2, #9
 8000f06:	d94f      	bls.n	8000fa8 <_vfiprintf_r+0x1d0>
 8000f08:	2900      	cmp	r1, #0
 8000f0a:	d111      	bne.n	8000f30 <_vfiprintf_r+0x158>
 8000f0c:	e017      	b.n	8000f3e <_vfiprintf_r+0x166>
 8000f0e:	3701      	adds	r7, #1
 8000f10:	e7a9      	b.n	8000e66 <_vfiprintf_r+0x8e>
 8000f12:	4b49      	ldr	r3, [pc, #292]	; (8001038 <_vfiprintf_r+0x260>)
 8000f14:	682a      	ldr	r2, [r5, #0]
 8000f16:	1ac0      	subs	r0, r0, r3
 8000f18:	2301      	movs	r3, #1
 8000f1a:	4083      	lsls	r3, r0
 8000f1c:	4313      	orrs	r3, r2
 8000f1e:	602b      	str	r3, [r5, #0]
 8000f20:	9703      	str	r7, [sp, #12]
 8000f22:	e7cb      	b.n	8000ebc <_vfiprintf_r+0xe4>
 8000f24:	9b07      	ldr	r3, [sp, #28]
 8000f26:	1d19      	adds	r1, r3, #4
 8000f28:	681b      	ldr	r3, [r3, #0]
 8000f2a:	9107      	str	r1, [sp, #28]
 8000f2c:	2b00      	cmp	r3, #0
 8000f2e:	db01      	blt.n	8000f34 <_vfiprintf_r+0x15c>
 8000f30:	930b      	str	r3, [sp, #44]	; 0x2c
 8000f32:	e004      	b.n	8000f3e <_vfiprintf_r+0x166>
 8000f34:	425b      	negs	r3, r3
 8000f36:	60eb      	str	r3, [r5, #12]
 8000f38:	2302      	movs	r3, #2
 8000f3a:	4313      	orrs	r3, r2
 8000f3c:	602b      	str	r3, [r5, #0]
 8000f3e:	783b      	ldrb	r3, [r7, #0]
 8000f40:	2b2e      	cmp	r3, #46	; 0x2e
 8000f42:	d10a      	bne.n	8000f5a <_vfiprintf_r+0x182>
 8000f44:	787b      	ldrb	r3, [r7, #1]
 8000f46:	2b2a      	cmp	r3, #42	; 0x2a
 8000f48:	d137      	bne.n	8000fba <_vfiprintf_r+0x1e2>
 8000f4a:	9b07      	ldr	r3, [sp, #28]
 8000f4c:	3702      	adds	r7, #2
 8000f4e:	1d1a      	adds	r2, r3, #4
 8000f50:	681b      	ldr	r3, [r3, #0]
 8000f52:	9207      	str	r2, [sp, #28]
 8000f54:	2b00      	cmp	r3, #0
 8000f56:	db2d      	blt.n	8000fb4 <_vfiprintf_r+0x1dc>
 8000f58:	9309      	str	r3, [sp, #36]	; 0x24
 8000f5a:	2203      	movs	r2, #3
 8000f5c:	7839      	ldrb	r1, [r7, #0]
 8000f5e:	4837      	ldr	r0, [pc, #220]	; (800103c <_vfiprintf_r+0x264>)
 8000f60:	f000 fce6 	bl	8001930 <memchr>
 8000f64:	2800      	cmp	r0, #0
 8000f66:	d007      	beq.n	8000f78 <_vfiprintf_r+0x1a0>
 8000f68:	4b34      	ldr	r3, [pc, #208]	; (800103c <_vfiprintf_r+0x264>)
 8000f6a:	682a      	ldr	r2, [r5, #0]
 8000f6c:	1ac0      	subs	r0, r0, r3
 8000f6e:	2340      	movs	r3, #64	; 0x40
 8000f70:	4083      	lsls	r3, r0
 8000f72:	4313      	orrs	r3, r2
 8000f74:	3701      	adds	r7, #1
 8000f76:	602b      	str	r3, [r5, #0]
 8000f78:	7839      	ldrb	r1, [r7, #0]
 8000f7a:	1c7b      	adds	r3, r7, #1
 8000f7c:	2206      	movs	r2, #6
 8000f7e:	4830      	ldr	r0, [pc, #192]	; (8001040 <_vfiprintf_r+0x268>)
 8000f80:	9303      	str	r3, [sp, #12]
 8000f82:	7629      	strb	r1, [r5, #24]
 8000f84:	f000 fcd4 	bl	8001930 <memchr>
 8000f88:	2800      	cmp	r0, #0
 8000f8a:	d045      	beq.n	8001018 <_vfiprintf_r+0x240>
 8000f8c:	4b2d      	ldr	r3, [pc, #180]	; (8001044 <_vfiprintf_r+0x26c>)
 8000f8e:	2b00      	cmp	r3, #0
 8000f90:	d127      	bne.n	8000fe2 <_vfiprintf_r+0x20a>
 8000f92:	2207      	movs	r2, #7
 8000f94:	9b07      	ldr	r3, [sp, #28]
 8000f96:	3307      	adds	r3, #7
 8000f98:	4393      	bics	r3, r2
 8000f9a:	3308      	adds	r3, #8
 8000f9c:	9307      	str	r3, [sp, #28]
 8000f9e:	696b      	ldr	r3, [r5, #20]
 8000fa0:	9a04      	ldr	r2, [sp, #16]
 8000fa2:	189b      	adds	r3, r3, r2
 8000fa4:	616b      	str	r3, [r5, #20]
 8000fa6:	e75d      	b.n	8000e64 <_vfiprintf_r+0x8c>
 8000fa8:	210a      	movs	r1, #10
 8000faa:	434b      	muls	r3, r1
 8000fac:	4667      	mov	r7, ip
 8000fae:	189b      	adds	r3, r3, r2
 8000fb0:	3909      	subs	r1, #9
 8000fb2:	e7a3      	b.n	8000efc <_vfiprintf_r+0x124>
 8000fb4:	2301      	movs	r3, #1
 8000fb6:	425b      	negs	r3, r3
 8000fb8:	e7ce      	b.n	8000f58 <_vfiprintf_r+0x180>
 8000fba:	2300      	movs	r3, #0
 8000fbc:	001a      	movs	r2, r3
 8000fbe:	3701      	adds	r7, #1
 8000fc0:	606b      	str	r3, [r5, #4]
 8000fc2:	7839      	ldrb	r1, [r7, #0]
 8000fc4:	1c78      	adds	r0, r7, #1
 8000fc6:	3930      	subs	r1, #48	; 0x30
 8000fc8:	4684      	mov	ip, r0
 8000fca:	2909      	cmp	r1, #9
 8000fcc:	d903      	bls.n	8000fd6 <_vfiprintf_r+0x1fe>
 8000fce:	2b00      	cmp	r3, #0
 8000fd0:	d0c3      	beq.n	8000f5a <_vfiprintf_r+0x182>
 8000fd2:	9209      	str	r2, [sp, #36]	; 0x24
 8000fd4:	e7c1      	b.n	8000f5a <_vfiprintf_r+0x182>
 8000fd6:	230a      	movs	r3, #10
 8000fd8:	435a      	muls	r2, r3
 8000fda:	4667      	mov	r7, ip
 8000fdc:	1852      	adds	r2, r2, r1
 8000fde:	3b09      	subs	r3, #9
 8000fe0:	e7ef      	b.n	8000fc2 <_vfiprintf_r+0x1ea>
 8000fe2:	ab07      	add	r3, sp, #28
 8000fe4:	9300      	str	r3, [sp, #0]
 8000fe6:	0022      	movs	r2, r4
 8000fe8:	0029      	movs	r1, r5
 8000fea:	0030      	movs	r0, r6
 8000fec:	4b16      	ldr	r3, [pc, #88]	; (8001048 <_vfiprintf_r+0x270>)
 8000fee:	e000      	b.n	8000ff2 <_vfiprintf_r+0x21a>
 8000ff0:	bf00      	nop
 8000ff2:	9004      	str	r0, [sp, #16]
 8000ff4:	9b04      	ldr	r3, [sp, #16]
 8000ff6:	3301      	adds	r3, #1
 8000ff8:	d1d1      	bne.n	8000f9e <_vfiprintf_r+0x1c6>
 8000ffa:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000ffc:	07db      	lsls	r3, r3, #31
 8000ffe:	d405      	bmi.n	800100c <_vfiprintf_r+0x234>
 8001000:	89a3      	ldrh	r3, [r4, #12]
 8001002:	059b      	lsls	r3, r3, #22
 8001004:	d402      	bmi.n	800100c <_vfiprintf_r+0x234>
 8001006:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001008:	f7ff fe0a 	bl	8000c20 <__retarget_lock_release_recursive>
 800100c:	89a3      	ldrh	r3, [r4, #12]
 800100e:	065b      	lsls	r3, r3, #25
 8001010:	d500      	bpl.n	8001014 <_vfiprintf_r+0x23c>
 8001012:	e70a      	b.n	8000e2a <_vfiprintf_r+0x52>
 8001014:	980d      	ldr	r0, [sp, #52]	; 0x34
 8001016:	e70a      	b.n	8000e2e <_vfiprintf_r+0x56>
 8001018:	ab07      	add	r3, sp, #28
 800101a:	9300      	str	r3, [sp, #0]
 800101c:	0022      	movs	r2, r4
 800101e:	0029      	movs	r1, r5
 8001020:	0030      	movs	r0, r6
 8001022:	4b09      	ldr	r3, [pc, #36]	; (8001048 <_vfiprintf_r+0x270>)
 8001024:	f000 f882 	bl	800112c <_printf_i>
 8001028:	e7e3      	b.n	8000ff2 <_vfiprintf_r+0x21a>
 800102a:	46c0      	nop			; (mov r8, r8)
 800102c:	08001bb8 	.word	0x08001bb8
 8001030:	08001bd8 	.word	0x08001bd8
 8001034:	08001b98 	.word	0x08001b98
 8001038:	08001bf8 	.word	0x08001bf8
 800103c:	08001bfe 	.word	0x08001bfe
 8001040:	08001c02 	.word	0x08001c02
 8001044:	00000000 	.word	0x00000000
 8001048:	08000db3 	.word	0x08000db3

0800104c <_printf_common>:
 800104c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800104e:	0015      	movs	r5, r2
 8001050:	9301      	str	r3, [sp, #4]
 8001052:	688a      	ldr	r2, [r1, #8]
 8001054:	690b      	ldr	r3, [r1, #16]
 8001056:	000c      	movs	r4, r1
 8001058:	9000      	str	r0, [sp, #0]
 800105a:	4293      	cmp	r3, r2
 800105c:	da00      	bge.n	8001060 <_printf_common+0x14>
 800105e:	0013      	movs	r3, r2
 8001060:	0022      	movs	r2, r4
 8001062:	602b      	str	r3, [r5, #0]
 8001064:	3243      	adds	r2, #67	; 0x43
 8001066:	7812      	ldrb	r2, [r2, #0]
 8001068:	2a00      	cmp	r2, #0
 800106a:	d001      	beq.n	8001070 <_printf_common+0x24>
 800106c:	3301      	adds	r3, #1
 800106e:	602b      	str	r3, [r5, #0]
 8001070:	6823      	ldr	r3, [r4, #0]
 8001072:	069b      	lsls	r3, r3, #26
 8001074:	d502      	bpl.n	800107c <_printf_common+0x30>
 8001076:	682b      	ldr	r3, [r5, #0]
 8001078:	3302      	adds	r3, #2
 800107a:	602b      	str	r3, [r5, #0]
 800107c:	6822      	ldr	r2, [r4, #0]
 800107e:	2306      	movs	r3, #6
 8001080:	0017      	movs	r7, r2
 8001082:	401f      	ands	r7, r3
 8001084:	421a      	tst	r2, r3
 8001086:	d027      	beq.n	80010d8 <_printf_common+0x8c>
 8001088:	0023      	movs	r3, r4
 800108a:	3343      	adds	r3, #67	; 0x43
 800108c:	781b      	ldrb	r3, [r3, #0]
 800108e:	1e5a      	subs	r2, r3, #1
 8001090:	4193      	sbcs	r3, r2
 8001092:	6822      	ldr	r2, [r4, #0]
 8001094:	0692      	lsls	r2, r2, #26
 8001096:	d430      	bmi.n	80010fa <_printf_common+0xae>
 8001098:	0022      	movs	r2, r4
 800109a:	9901      	ldr	r1, [sp, #4]
 800109c:	9800      	ldr	r0, [sp, #0]
 800109e:	9e08      	ldr	r6, [sp, #32]
 80010a0:	3243      	adds	r2, #67	; 0x43
 80010a2:	47b0      	blx	r6
 80010a4:	1c43      	adds	r3, r0, #1
 80010a6:	d025      	beq.n	80010f4 <_printf_common+0xa8>
 80010a8:	2306      	movs	r3, #6
 80010aa:	6820      	ldr	r0, [r4, #0]
 80010ac:	682a      	ldr	r2, [r5, #0]
 80010ae:	68e1      	ldr	r1, [r4, #12]
 80010b0:	2500      	movs	r5, #0
 80010b2:	4003      	ands	r3, r0
 80010b4:	2b04      	cmp	r3, #4
 80010b6:	d103      	bne.n	80010c0 <_printf_common+0x74>
 80010b8:	1a8d      	subs	r5, r1, r2
 80010ba:	43eb      	mvns	r3, r5
 80010bc:	17db      	asrs	r3, r3, #31
 80010be:	401d      	ands	r5, r3
 80010c0:	68a3      	ldr	r3, [r4, #8]
 80010c2:	6922      	ldr	r2, [r4, #16]
 80010c4:	4293      	cmp	r3, r2
 80010c6:	dd01      	ble.n	80010cc <_printf_common+0x80>
 80010c8:	1a9b      	subs	r3, r3, r2
 80010ca:	18ed      	adds	r5, r5, r3
 80010cc:	2700      	movs	r7, #0
 80010ce:	42bd      	cmp	r5, r7
 80010d0:	d120      	bne.n	8001114 <_printf_common+0xc8>
 80010d2:	2000      	movs	r0, #0
 80010d4:	e010      	b.n	80010f8 <_printf_common+0xac>
 80010d6:	3701      	adds	r7, #1
 80010d8:	68e3      	ldr	r3, [r4, #12]
 80010da:	682a      	ldr	r2, [r5, #0]
 80010dc:	1a9b      	subs	r3, r3, r2
 80010de:	42bb      	cmp	r3, r7
 80010e0:	ddd2      	ble.n	8001088 <_printf_common+0x3c>
 80010e2:	0022      	movs	r2, r4
 80010e4:	2301      	movs	r3, #1
 80010e6:	9901      	ldr	r1, [sp, #4]
 80010e8:	9800      	ldr	r0, [sp, #0]
 80010ea:	9e08      	ldr	r6, [sp, #32]
 80010ec:	3219      	adds	r2, #25
 80010ee:	47b0      	blx	r6
 80010f0:	1c43      	adds	r3, r0, #1
 80010f2:	d1f0      	bne.n	80010d6 <_printf_common+0x8a>
 80010f4:	2001      	movs	r0, #1
 80010f6:	4240      	negs	r0, r0
 80010f8:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80010fa:	2030      	movs	r0, #48	; 0x30
 80010fc:	18e1      	adds	r1, r4, r3
 80010fe:	3143      	adds	r1, #67	; 0x43
 8001100:	7008      	strb	r0, [r1, #0]
 8001102:	0021      	movs	r1, r4
 8001104:	1c5a      	adds	r2, r3, #1
 8001106:	3145      	adds	r1, #69	; 0x45
 8001108:	7809      	ldrb	r1, [r1, #0]
 800110a:	18a2      	adds	r2, r4, r2
 800110c:	3243      	adds	r2, #67	; 0x43
 800110e:	3302      	adds	r3, #2
 8001110:	7011      	strb	r1, [r2, #0]
 8001112:	e7c1      	b.n	8001098 <_printf_common+0x4c>
 8001114:	0022      	movs	r2, r4
 8001116:	2301      	movs	r3, #1
 8001118:	9901      	ldr	r1, [sp, #4]
 800111a:	9800      	ldr	r0, [sp, #0]
 800111c:	9e08      	ldr	r6, [sp, #32]
 800111e:	321a      	adds	r2, #26
 8001120:	47b0      	blx	r6
 8001122:	1c43      	adds	r3, r0, #1
 8001124:	d0e6      	beq.n	80010f4 <_printf_common+0xa8>
 8001126:	3701      	adds	r7, #1
 8001128:	e7d1      	b.n	80010ce <_printf_common+0x82>
	...

0800112c <_printf_i>:
 800112c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800112e:	b08b      	sub	sp, #44	; 0x2c
 8001130:	9206      	str	r2, [sp, #24]
 8001132:	000a      	movs	r2, r1
 8001134:	3243      	adds	r2, #67	; 0x43
 8001136:	9307      	str	r3, [sp, #28]
 8001138:	9005      	str	r0, [sp, #20]
 800113a:	9204      	str	r2, [sp, #16]
 800113c:	7e0a      	ldrb	r2, [r1, #24]
 800113e:	000c      	movs	r4, r1
 8001140:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8001142:	2a78      	cmp	r2, #120	; 0x78
 8001144:	d806      	bhi.n	8001154 <_printf_i+0x28>
 8001146:	2a62      	cmp	r2, #98	; 0x62
 8001148:	d808      	bhi.n	800115c <_printf_i+0x30>
 800114a:	2a00      	cmp	r2, #0
 800114c:	d100      	bne.n	8001150 <_printf_i+0x24>
 800114e:	e0c0      	b.n	80012d2 <_printf_i+0x1a6>
 8001150:	2a58      	cmp	r2, #88	; 0x58
 8001152:	d052      	beq.n	80011fa <_printf_i+0xce>
 8001154:	0026      	movs	r6, r4
 8001156:	3642      	adds	r6, #66	; 0x42
 8001158:	7032      	strb	r2, [r6, #0]
 800115a:	e022      	b.n	80011a2 <_printf_i+0x76>
 800115c:	0010      	movs	r0, r2
 800115e:	3863      	subs	r0, #99	; 0x63
 8001160:	2815      	cmp	r0, #21
 8001162:	d8f7      	bhi.n	8001154 <_printf_i+0x28>
 8001164:	f7fe ffd0 	bl	8000108 <__gnu_thumb1_case_shi>
 8001168:	001f0016 	.word	0x001f0016
 800116c:	fff6fff6 	.word	0xfff6fff6
 8001170:	fff6fff6 	.word	0xfff6fff6
 8001174:	fff6001f 	.word	0xfff6001f
 8001178:	fff6fff6 	.word	0xfff6fff6
 800117c:	00a8fff6 	.word	0x00a8fff6
 8001180:	009a0036 	.word	0x009a0036
 8001184:	fff6fff6 	.word	0xfff6fff6
 8001188:	fff600b9 	.word	0xfff600b9
 800118c:	fff60036 	.word	0xfff60036
 8001190:	009efff6 	.word	0x009efff6
 8001194:	0026      	movs	r6, r4
 8001196:	681a      	ldr	r2, [r3, #0]
 8001198:	3642      	adds	r6, #66	; 0x42
 800119a:	1d11      	adds	r1, r2, #4
 800119c:	6019      	str	r1, [r3, #0]
 800119e:	6813      	ldr	r3, [r2, #0]
 80011a0:	7033      	strb	r3, [r6, #0]
 80011a2:	2301      	movs	r3, #1
 80011a4:	e0a7      	b.n	80012f6 <_printf_i+0x1ca>
 80011a6:	6808      	ldr	r0, [r1, #0]
 80011a8:	6819      	ldr	r1, [r3, #0]
 80011aa:	1d0a      	adds	r2, r1, #4
 80011ac:	0605      	lsls	r5, r0, #24
 80011ae:	d50b      	bpl.n	80011c8 <_printf_i+0x9c>
 80011b0:	680d      	ldr	r5, [r1, #0]
 80011b2:	601a      	str	r2, [r3, #0]
 80011b4:	2d00      	cmp	r5, #0
 80011b6:	da03      	bge.n	80011c0 <_printf_i+0x94>
 80011b8:	232d      	movs	r3, #45	; 0x2d
 80011ba:	9a04      	ldr	r2, [sp, #16]
 80011bc:	426d      	negs	r5, r5
 80011be:	7013      	strb	r3, [r2, #0]
 80011c0:	4b61      	ldr	r3, [pc, #388]	; (8001348 <_printf_i+0x21c>)
 80011c2:	270a      	movs	r7, #10
 80011c4:	9303      	str	r3, [sp, #12]
 80011c6:	e032      	b.n	800122e <_printf_i+0x102>
 80011c8:	680d      	ldr	r5, [r1, #0]
 80011ca:	601a      	str	r2, [r3, #0]
 80011cc:	0641      	lsls	r1, r0, #25
 80011ce:	d5f1      	bpl.n	80011b4 <_printf_i+0x88>
 80011d0:	b22d      	sxth	r5, r5
 80011d2:	e7ef      	b.n	80011b4 <_printf_i+0x88>
 80011d4:	680d      	ldr	r5, [r1, #0]
 80011d6:	6819      	ldr	r1, [r3, #0]
 80011d8:	1d08      	adds	r0, r1, #4
 80011da:	6018      	str	r0, [r3, #0]
 80011dc:	062e      	lsls	r6, r5, #24
 80011de:	d501      	bpl.n	80011e4 <_printf_i+0xb8>
 80011e0:	680d      	ldr	r5, [r1, #0]
 80011e2:	e003      	b.n	80011ec <_printf_i+0xc0>
 80011e4:	066d      	lsls	r5, r5, #25
 80011e6:	d5fb      	bpl.n	80011e0 <_printf_i+0xb4>
 80011e8:	680d      	ldr	r5, [r1, #0]
 80011ea:	b2ad      	uxth	r5, r5
 80011ec:	4b56      	ldr	r3, [pc, #344]	; (8001348 <_printf_i+0x21c>)
 80011ee:	270a      	movs	r7, #10
 80011f0:	9303      	str	r3, [sp, #12]
 80011f2:	2a6f      	cmp	r2, #111	; 0x6f
 80011f4:	d117      	bne.n	8001226 <_printf_i+0xfa>
 80011f6:	2708      	movs	r7, #8
 80011f8:	e015      	b.n	8001226 <_printf_i+0xfa>
 80011fa:	3145      	adds	r1, #69	; 0x45
 80011fc:	700a      	strb	r2, [r1, #0]
 80011fe:	4a52      	ldr	r2, [pc, #328]	; (8001348 <_printf_i+0x21c>)
 8001200:	9203      	str	r2, [sp, #12]
 8001202:	681a      	ldr	r2, [r3, #0]
 8001204:	6821      	ldr	r1, [r4, #0]
 8001206:	ca20      	ldmia	r2!, {r5}
 8001208:	601a      	str	r2, [r3, #0]
 800120a:	0608      	lsls	r0, r1, #24
 800120c:	d550      	bpl.n	80012b0 <_printf_i+0x184>
 800120e:	07cb      	lsls	r3, r1, #31
 8001210:	d502      	bpl.n	8001218 <_printf_i+0xec>
 8001212:	2320      	movs	r3, #32
 8001214:	4319      	orrs	r1, r3
 8001216:	6021      	str	r1, [r4, #0]
 8001218:	2710      	movs	r7, #16
 800121a:	2d00      	cmp	r5, #0
 800121c:	d103      	bne.n	8001226 <_printf_i+0xfa>
 800121e:	2320      	movs	r3, #32
 8001220:	6822      	ldr	r2, [r4, #0]
 8001222:	439a      	bics	r2, r3
 8001224:	6022      	str	r2, [r4, #0]
 8001226:	0023      	movs	r3, r4
 8001228:	2200      	movs	r2, #0
 800122a:	3343      	adds	r3, #67	; 0x43
 800122c:	701a      	strb	r2, [r3, #0]
 800122e:	6863      	ldr	r3, [r4, #4]
 8001230:	60a3      	str	r3, [r4, #8]
 8001232:	2b00      	cmp	r3, #0
 8001234:	db03      	blt.n	800123e <_printf_i+0x112>
 8001236:	2204      	movs	r2, #4
 8001238:	6821      	ldr	r1, [r4, #0]
 800123a:	4391      	bics	r1, r2
 800123c:	6021      	str	r1, [r4, #0]
 800123e:	2d00      	cmp	r5, #0
 8001240:	d102      	bne.n	8001248 <_printf_i+0x11c>
 8001242:	9e04      	ldr	r6, [sp, #16]
 8001244:	2b00      	cmp	r3, #0
 8001246:	d00c      	beq.n	8001262 <_printf_i+0x136>
 8001248:	9e04      	ldr	r6, [sp, #16]
 800124a:	0028      	movs	r0, r5
 800124c:	0039      	movs	r1, r7
 800124e:	f7fe ffeb 	bl	8000228 <__aeabi_uidivmod>
 8001252:	9b03      	ldr	r3, [sp, #12]
 8001254:	3e01      	subs	r6, #1
 8001256:	5c5b      	ldrb	r3, [r3, r1]
 8001258:	7033      	strb	r3, [r6, #0]
 800125a:	002b      	movs	r3, r5
 800125c:	0005      	movs	r5, r0
 800125e:	429f      	cmp	r7, r3
 8001260:	d9f3      	bls.n	800124a <_printf_i+0x11e>
 8001262:	2f08      	cmp	r7, #8
 8001264:	d109      	bne.n	800127a <_printf_i+0x14e>
 8001266:	6823      	ldr	r3, [r4, #0]
 8001268:	07db      	lsls	r3, r3, #31
 800126a:	d506      	bpl.n	800127a <_printf_i+0x14e>
 800126c:	6863      	ldr	r3, [r4, #4]
 800126e:	6922      	ldr	r2, [r4, #16]
 8001270:	4293      	cmp	r3, r2
 8001272:	dc02      	bgt.n	800127a <_printf_i+0x14e>
 8001274:	2330      	movs	r3, #48	; 0x30
 8001276:	3e01      	subs	r6, #1
 8001278:	7033      	strb	r3, [r6, #0]
 800127a:	9b04      	ldr	r3, [sp, #16]
 800127c:	1b9b      	subs	r3, r3, r6
 800127e:	6123      	str	r3, [r4, #16]
 8001280:	9b07      	ldr	r3, [sp, #28]
 8001282:	0021      	movs	r1, r4
 8001284:	9300      	str	r3, [sp, #0]
 8001286:	9805      	ldr	r0, [sp, #20]
 8001288:	9b06      	ldr	r3, [sp, #24]
 800128a:	aa09      	add	r2, sp, #36	; 0x24
 800128c:	f7ff fede 	bl	800104c <_printf_common>
 8001290:	1c43      	adds	r3, r0, #1
 8001292:	d135      	bne.n	8001300 <_printf_i+0x1d4>
 8001294:	2001      	movs	r0, #1
 8001296:	4240      	negs	r0, r0
 8001298:	b00b      	add	sp, #44	; 0x2c
 800129a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800129c:	2220      	movs	r2, #32
 800129e:	6809      	ldr	r1, [r1, #0]
 80012a0:	430a      	orrs	r2, r1
 80012a2:	6022      	str	r2, [r4, #0]
 80012a4:	0022      	movs	r2, r4
 80012a6:	2178      	movs	r1, #120	; 0x78
 80012a8:	3245      	adds	r2, #69	; 0x45
 80012aa:	7011      	strb	r1, [r2, #0]
 80012ac:	4a27      	ldr	r2, [pc, #156]	; (800134c <_printf_i+0x220>)
 80012ae:	e7a7      	b.n	8001200 <_printf_i+0xd4>
 80012b0:	0648      	lsls	r0, r1, #25
 80012b2:	d5ac      	bpl.n	800120e <_printf_i+0xe2>
 80012b4:	b2ad      	uxth	r5, r5
 80012b6:	e7aa      	b.n	800120e <_printf_i+0xe2>
 80012b8:	681a      	ldr	r2, [r3, #0]
 80012ba:	680d      	ldr	r5, [r1, #0]
 80012bc:	1d10      	adds	r0, r2, #4
 80012be:	6949      	ldr	r1, [r1, #20]
 80012c0:	6018      	str	r0, [r3, #0]
 80012c2:	6813      	ldr	r3, [r2, #0]
 80012c4:	062e      	lsls	r6, r5, #24
 80012c6:	d501      	bpl.n	80012cc <_printf_i+0x1a0>
 80012c8:	6019      	str	r1, [r3, #0]
 80012ca:	e002      	b.n	80012d2 <_printf_i+0x1a6>
 80012cc:	066d      	lsls	r5, r5, #25
 80012ce:	d5fb      	bpl.n	80012c8 <_printf_i+0x19c>
 80012d0:	8019      	strh	r1, [r3, #0]
 80012d2:	2300      	movs	r3, #0
 80012d4:	9e04      	ldr	r6, [sp, #16]
 80012d6:	6123      	str	r3, [r4, #16]
 80012d8:	e7d2      	b.n	8001280 <_printf_i+0x154>
 80012da:	681a      	ldr	r2, [r3, #0]
 80012dc:	1d11      	adds	r1, r2, #4
 80012de:	6019      	str	r1, [r3, #0]
 80012e0:	6816      	ldr	r6, [r2, #0]
 80012e2:	2100      	movs	r1, #0
 80012e4:	0030      	movs	r0, r6
 80012e6:	6862      	ldr	r2, [r4, #4]
 80012e8:	f000 fb22 	bl	8001930 <memchr>
 80012ec:	2800      	cmp	r0, #0
 80012ee:	d001      	beq.n	80012f4 <_printf_i+0x1c8>
 80012f0:	1b80      	subs	r0, r0, r6
 80012f2:	6060      	str	r0, [r4, #4]
 80012f4:	6863      	ldr	r3, [r4, #4]
 80012f6:	6123      	str	r3, [r4, #16]
 80012f8:	2300      	movs	r3, #0
 80012fa:	9a04      	ldr	r2, [sp, #16]
 80012fc:	7013      	strb	r3, [r2, #0]
 80012fe:	e7bf      	b.n	8001280 <_printf_i+0x154>
 8001300:	6923      	ldr	r3, [r4, #16]
 8001302:	0032      	movs	r2, r6
 8001304:	9906      	ldr	r1, [sp, #24]
 8001306:	9805      	ldr	r0, [sp, #20]
 8001308:	9d07      	ldr	r5, [sp, #28]
 800130a:	47a8      	blx	r5
 800130c:	1c43      	adds	r3, r0, #1
 800130e:	d0c1      	beq.n	8001294 <_printf_i+0x168>
 8001310:	6823      	ldr	r3, [r4, #0]
 8001312:	079b      	lsls	r3, r3, #30
 8001314:	d415      	bmi.n	8001342 <_printf_i+0x216>
 8001316:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8001318:	68e0      	ldr	r0, [r4, #12]
 800131a:	4298      	cmp	r0, r3
 800131c:	dabc      	bge.n	8001298 <_printf_i+0x16c>
 800131e:	0018      	movs	r0, r3
 8001320:	e7ba      	b.n	8001298 <_printf_i+0x16c>
 8001322:	0022      	movs	r2, r4
 8001324:	2301      	movs	r3, #1
 8001326:	9906      	ldr	r1, [sp, #24]
 8001328:	9805      	ldr	r0, [sp, #20]
 800132a:	9e07      	ldr	r6, [sp, #28]
 800132c:	3219      	adds	r2, #25
 800132e:	47b0      	blx	r6
 8001330:	1c43      	adds	r3, r0, #1
 8001332:	d0af      	beq.n	8001294 <_printf_i+0x168>
 8001334:	3501      	adds	r5, #1
 8001336:	68e3      	ldr	r3, [r4, #12]
 8001338:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800133a:	1a9b      	subs	r3, r3, r2
 800133c:	42ab      	cmp	r3, r5
 800133e:	dcf0      	bgt.n	8001322 <_printf_i+0x1f6>
 8001340:	e7e9      	b.n	8001316 <_printf_i+0x1ea>
 8001342:	2500      	movs	r5, #0
 8001344:	e7f7      	b.n	8001336 <_printf_i+0x20a>
 8001346:	46c0      	nop			; (mov r8, r8)
 8001348:	08001c09 	.word	0x08001c09
 800134c:	08001c1a 	.word	0x08001c1a

08001350 <_putc_r>:
 8001350:	b570      	push	{r4, r5, r6, lr}
 8001352:	0006      	movs	r6, r0
 8001354:	000d      	movs	r5, r1
 8001356:	0014      	movs	r4, r2
 8001358:	2800      	cmp	r0, #0
 800135a:	d004      	beq.n	8001366 <_putc_r+0x16>
 800135c:	6983      	ldr	r3, [r0, #24]
 800135e:	2b00      	cmp	r3, #0
 8001360:	d101      	bne.n	8001366 <_putc_r+0x16>
 8001362:	f7ff fbab 	bl	8000abc <__sinit>
 8001366:	4b1c      	ldr	r3, [pc, #112]	; (80013d8 <_putc_r+0x88>)
 8001368:	429c      	cmp	r4, r3
 800136a:	d124      	bne.n	80013b6 <_putc_r+0x66>
 800136c:	6874      	ldr	r4, [r6, #4]
 800136e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001370:	07db      	lsls	r3, r3, #31
 8001372:	d405      	bmi.n	8001380 <_putc_r+0x30>
 8001374:	89a3      	ldrh	r3, [r4, #12]
 8001376:	059b      	lsls	r3, r3, #22
 8001378:	d402      	bmi.n	8001380 <_putc_r+0x30>
 800137a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800137c:	f7ff fc4f 	bl	8000c1e <__retarget_lock_acquire_recursive>
 8001380:	68a3      	ldr	r3, [r4, #8]
 8001382:	3b01      	subs	r3, #1
 8001384:	60a3      	str	r3, [r4, #8]
 8001386:	2b00      	cmp	r3, #0
 8001388:	da05      	bge.n	8001396 <_putc_r+0x46>
 800138a:	69a2      	ldr	r2, [r4, #24]
 800138c:	4293      	cmp	r3, r2
 800138e:	db1c      	blt.n	80013ca <_putc_r+0x7a>
 8001390:	b2eb      	uxtb	r3, r5
 8001392:	2b0a      	cmp	r3, #10
 8001394:	d019      	beq.n	80013ca <_putc_r+0x7a>
 8001396:	6823      	ldr	r3, [r4, #0]
 8001398:	1c5a      	adds	r2, r3, #1
 800139a:	6022      	str	r2, [r4, #0]
 800139c:	701d      	strb	r5, [r3, #0]
 800139e:	b2ed      	uxtb	r5, r5
 80013a0:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80013a2:	07db      	lsls	r3, r3, #31
 80013a4:	d405      	bmi.n	80013b2 <_putc_r+0x62>
 80013a6:	89a3      	ldrh	r3, [r4, #12]
 80013a8:	059b      	lsls	r3, r3, #22
 80013aa:	d402      	bmi.n	80013b2 <_putc_r+0x62>
 80013ac:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80013ae:	f7ff fc37 	bl	8000c20 <__retarget_lock_release_recursive>
 80013b2:	0028      	movs	r0, r5
 80013b4:	bd70      	pop	{r4, r5, r6, pc}
 80013b6:	4b09      	ldr	r3, [pc, #36]	; (80013dc <_putc_r+0x8c>)
 80013b8:	429c      	cmp	r4, r3
 80013ba:	d101      	bne.n	80013c0 <_putc_r+0x70>
 80013bc:	68b4      	ldr	r4, [r6, #8]
 80013be:	e7d6      	b.n	800136e <_putc_r+0x1e>
 80013c0:	4b07      	ldr	r3, [pc, #28]	; (80013e0 <_putc_r+0x90>)
 80013c2:	429c      	cmp	r4, r3
 80013c4:	d1d3      	bne.n	800136e <_putc_r+0x1e>
 80013c6:	68f4      	ldr	r4, [r6, #12]
 80013c8:	e7d1      	b.n	800136e <_putc_r+0x1e>
 80013ca:	0029      	movs	r1, r5
 80013cc:	0022      	movs	r2, r4
 80013ce:	0030      	movs	r0, r6
 80013d0:	f000 f866 	bl	80014a0 <__swbuf_r>
 80013d4:	0005      	movs	r5, r0
 80013d6:	e7e3      	b.n	80013a0 <_putc_r+0x50>
 80013d8:	08001bb8 	.word	0x08001bb8
 80013dc:	08001bd8 	.word	0x08001bd8
 80013e0:	08001b98 	.word	0x08001b98

080013e4 <_sbrk_r>:
 80013e4:	2300      	movs	r3, #0
 80013e6:	b570      	push	{r4, r5, r6, lr}
 80013e8:	4d06      	ldr	r5, [pc, #24]	; (8001404 <_sbrk_r+0x20>)
 80013ea:	0004      	movs	r4, r0
 80013ec:	0008      	movs	r0, r1
 80013ee:	602b      	str	r3, [r5, #0]
 80013f0:	f7ff f9e6 	bl	80007c0 <_sbrk>
 80013f4:	1c43      	adds	r3, r0, #1
 80013f6:	d103      	bne.n	8001400 <_sbrk_r+0x1c>
 80013f8:	682b      	ldr	r3, [r5, #0]
 80013fa:	2b00      	cmp	r3, #0
 80013fc:	d000      	beq.n	8001400 <_sbrk_r+0x1c>
 80013fe:	6023      	str	r3, [r4, #0]
 8001400:	bd70      	pop	{r4, r5, r6, pc}
 8001402:	46c0      	nop			; (mov r8, r8)
 8001404:	200000e0 	.word	0x200000e0

08001408 <__sread>:
 8001408:	b570      	push	{r4, r5, r6, lr}
 800140a:	000c      	movs	r4, r1
 800140c:	250e      	movs	r5, #14
 800140e:	5f49      	ldrsh	r1, [r1, r5]
 8001410:	f000 faaa 	bl	8001968 <_read_r>
 8001414:	2800      	cmp	r0, #0
 8001416:	db03      	blt.n	8001420 <__sread+0x18>
 8001418:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800141a:	181b      	adds	r3, r3, r0
 800141c:	6563      	str	r3, [r4, #84]	; 0x54
 800141e:	bd70      	pop	{r4, r5, r6, pc}
 8001420:	89a3      	ldrh	r3, [r4, #12]
 8001422:	4a02      	ldr	r2, [pc, #8]	; (800142c <__sread+0x24>)
 8001424:	4013      	ands	r3, r2
 8001426:	81a3      	strh	r3, [r4, #12]
 8001428:	e7f9      	b.n	800141e <__sread+0x16>
 800142a:	46c0      	nop			; (mov r8, r8)
 800142c:	ffffefff 	.word	0xffffefff

08001430 <__swrite>:
 8001430:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001432:	001f      	movs	r7, r3
 8001434:	898b      	ldrh	r3, [r1, #12]
 8001436:	0005      	movs	r5, r0
 8001438:	000c      	movs	r4, r1
 800143a:	0016      	movs	r6, r2
 800143c:	05db      	lsls	r3, r3, #23
 800143e:	d505      	bpl.n	800144c <__swrite+0x1c>
 8001440:	230e      	movs	r3, #14
 8001442:	5ec9      	ldrsh	r1, [r1, r3]
 8001444:	2200      	movs	r2, #0
 8001446:	2302      	movs	r3, #2
 8001448:	f000 f9f2 	bl	8001830 <_lseek_r>
 800144c:	89a3      	ldrh	r3, [r4, #12]
 800144e:	4a05      	ldr	r2, [pc, #20]	; (8001464 <__swrite+0x34>)
 8001450:	0028      	movs	r0, r5
 8001452:	4013      	ands	r3, r2
 8001454:	81a3      	strh	r3, [r4, #12]
 8001456:	0032      	movs	r2, r6
 8001458:	230e      	movs	r3, #14
 800145a:	5ee1      	ldrsh	r1, [r4, r3]
 800145c:	003b      	movs	r3, r7
 800145e:	f000 f875 	bl	800154c <_write_r>
 8001462:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001464:	ffffefff 	.word	0xffffefff

08001468 <__sseek>:
 8001468:	b570      	push	{r4, r5, r6, lr}
 800146a:	000c      	movs	r4, r1
 800146c:	250e      	movs	r5, #14
 800146e:	5f49      	ldrsh	r1, [r1, r5]
 8001470:	f000 f9de 	bl	8001830 <_lseek_r>
 8001474:	89a3      	ldrh	r3, [r4, #12]
 8001476:	1c42      	adds	r2, r0, #1
 8001478:	d103      	bne.n	8001482 <__sseek+0x1a>
 800147a:	4a05      	ldr	r2, [pc, #20]	; (8001490 <__sseek+0x28>)
 800147c:	4013      	ands	r3, r2
 800147e:	81a3      	strh	r3, [r4, #12]
 8001480:	bd70      	pop	{r4, r5, r6, pc}
 8001482:	2280      	movs	r2, #128	; 0x80
 8001484:	0152      	lsls	r2, r2, #5
 8001486:	4313      	orrs	r3, r2
 8001488:	81a3      	strh	r3, [r4, #12]
 800148a:	6560      	str	r0, [r4, #84]	; 0x54
 800148c:	e7f8      	b.n	8001480 <__sseek+0x18>
 800148e:	46c0      	nop			; (mov r8, r8)
 8001490:	ffffefff 	.word	0xffffefff

08001494 <__sclose>:
 8001494:	b510      	push	{r4, lr}
 8001496:	230e      	movs	r3, #14
 8001498:	5ec9      	ldrsh	r1, [r1, r3]
 800149a:	f000 f8eb 	bl	8001674 <_close_r>
 800149e:	bd10      	pop	{r4, pc}

080014a0 <__swbuf_r>:
 80014a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014a2:	0005      	movs	r5, r0
 80014a4:	000e      	movs	r6, r1
 80014a6:	0014      	movs	r4, r2
 80014a8:	2800      	cmp	r0, #0
 80014aa:	d004      	beq.n	80014b6 <__swbuf_r+0x16>
 80014ac:	6983      	ldr	r3, [r0, #24]
 80014ae:	2b00      	cmp	r3, #0
 80014b0:	d101      	bne.n	80014b6 <__swbuf_r+0x16>
 80014b2:	f7ff fb03 	bl	8000abc <__sinit>
 80014b6:	4b22      	ldr	r3, [pc, #136]	; (8001540 <__swbuf_r+0xa0>)
 80014b8:	429c      	cmp	r4, r3
 80014ba:	d12e      	bne.n	800151a <__swbuf_r+0x7a>
 80014bc:	686c      	ldr	r4, [r5, #4]
 80014be:	69a3      	ldr	r3, [r4, #24]
 80014c0:	60a3      	str	r3, [r4, #8]
 80014c2:	89a3      	ldrh	r3, [r4, #12]
 80014c4:	071b      	lsls	r3, r3, #28
 80014c6:	d532      	bpl.n	800152e <__swbuf_r+0x8e>
 80014c8:	6923      	ldr	r3, [r4, #16]
 80014ca:	2b00      	cmp	r3, #0
 80014cc:	d02f      	beq.n	800152e <__swbuf_r+0x8e>
 80014ce:	6823      	ldr	r3, [r4, #0]
 80014d0:	6922      	ldr	r2, [r4, #16]
 80014d2:	b2f7      	uxtb	r7, r6
 80014d4:	1a98      	subs	r0, r3, r2
 80014d6:	6963      	ldr	r3, [r4, #20]
 80014d8:	b2f6      	uxtb	r6, r6
 80014da:	4283      	cmp	r3, r0
 80014dc:	dc05      	bgt.n	80014ea <__swbuf_r+0x4a>
 80014de:	0021      	movs	r1, r4
 80014e0:	0028      	movs	r0, r5
 80014e2:	f000 f965 	bl	80017b0 <_fflush_r>
 80014e6:	2800      	cmp	r0, #0
 80014e8:	d127      	bne.n	800153a <__swbuf_r+0x9a>
 80014ea:	68a3      	ldr	r3, [r4, #8]
 80014ec:	3001      	adds	r0, #1
 80014ee:	3b01      	subs	r3, #1
 80014f0:	60a3      	str	r3, [r4, #8]
 80014f2:	6823      	ldr	r3, [r4, #0]
 80014f4:	1c5a      	adds	r2, r3, #1
 80014f6:	6022      	str	r2, [r4, #0]
 80014f8:	701f      	strb	r7, [r3, #0]
 80014fa:	6963      	ldr	r3, [r4, #20]
 80014fc:	4283      	cmp	r3, r0
 80014fe:	d004      	beq.n	800150a <__swbuf_r+0x6a>
 8001500:	89a3      	ldrh	r3, [r4, #12]
 8001502:	07db      	lsls	r3, r3, #31
 8001504:	d507      	bpl.n	8001516 <__swbuf_r+0x76>
 8001506:	2e0a      	cmp	r6, #10
 8001508:	d105      	bne.n	8001516 <__swbuf_r+0x76>
 800150a:	0021      	movs	r1, r4
 800150c:	0028      	movs	r0, r5
 800150e:	f000 f94f 	bl	80017b0 <_fflush_r>
 8001512:	2800      	cmp	r0, #0
 8001514:	d111      	bne.n	800153a <__swbuf_r+0x9a>
 8001516:	0030      	movs	r0, r6
 8001518:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800151a:	4b0a      	ldr	r3, [pc, #40]	; (8001544 <__swbuf_r+0xa4>)
 800151c:	429c      	cmp	r4, r3
 800151e:	d101      	bne.n	8001524 <__swbuf_r+0x84>
 8001520:	68ac      	ldr	r4, [r5, #8]
 8001522:	e7cc      	b.n	80014be <__swbuf_r+0x1e>
 8001524:	4b08      	ldr	r3, [pc, #32]	; (8001548 <__swbuf_r+0xa8>)
 8001526:	429c      	cmp	r4, r3
 8001528:	d1c9      	bne.n	80014be <__swbuf_r+0x1e>
 800152a:	68ec      	ldr	r4, [r5, #12]
 800152c:	e7c7      	b.n	80014be <__swbuf_r+0x1e>
 800152e:	0021      	movs	r1, r4
 8001530:	0028      	movs	r0, r5
 8001532:	f000 f81f 	bl	8001574 <__swsetup_r>
 8001536:	2800      	cmp	r0, #0
 8001538:	d0c9      	beq.n	80014ce <__swbuf_r+0x2e>
 800153a:	2601      	movs	r6, #1
 800153c:	4276      	negs	r6, r6
 800153e:	e7ea      	b.n	8001516 <__swbuf_r+0x76>
 8001540:	08001bb8 	.word	0x08001bb8
 8001544:	08001bd8 	.word	0x08001bd8
 8001548:	08001b98 	.word	0x08001b98

0800154c <_write_r>:
 800154c:	b570      	push	{r4, r5, r6, lr}
 800154e:	0004      	movs	r4, r0
 8001550:	0008      	movs	r0, r1
 8001552:	0011      	movs	r1, r2
 8001554:	001a      	movs	r2, r3
 8001556:	2300      	movs	r3, #0
 8001558:	4d05      	ldr	r5, [pc, #20]	; (8001570 <_write_r+0x24>)
 800155a:	602b      	str	r3, [r5, #0]
 800155c:	f7ff f8e7 	bl	800072e <_write>
 8001560:	1c43      	adds	r3, r0, #1
 8001562:	d103      	bne.n	800156c <_write_r+0x20>
 8001564:	682b      	ldr	r3, [r5, #0]
 8001566:	2b00      	cmp	r3, #0
 8001568:	d000      	beq.n	800156c <_write_r+0x20>
 800156a:	6023      	str	r3, [r4, #0]
 800156c:	bd70      	pop	{r4, r5, r6, pc}
 800156e:	46c0      	nop			; (mov r8, r8)
 8001570:	200000e0 	.word	0x200000e0

08001574 <__swsetup_r>:
 8001574:	4b37      	ldr	r3, [pc, #220]	; (8001654 <__swsetup_r+0xe0>)
 8001576:	b570      	push	{r4, r5, r6, lr}
 8001578:	681d      	ldr	r5, [r3, #0]
 800157a:	0006      	movs	r6, r0
 800157c:	000c      	movs	r4, r1
 800157e:	2d00      	cmp	r5, #0
 8001580:	d005      	beq.n	800158e <__swsetup_r+0x1a>
 8001582:	69ab      	ldr	r3, [r5, #24]
 8001584:	2b00      	cmp	r3, #0
 8001586:	d102      	bne.n	800158e <__swsetup_r+0x1a>
 8001588:	0028      	movs	r0, r5
 800158a:	f7ff fa97 	bl	8000abc <__sinit>
 800158e:	4b32      	ldr	r3, [pc, #200]	; (8001658 <__swsetup_r+0xe4>)
 8001590:	429c      	cmp	r4, r3
 8001592:	d10f      	bne.n	80015b4 <__swsetup_r+0x40>
 8001594:	686c      	ldr	r4, [r5, #4]
 8001596:	230c      	movs	r3, #12
 8001598:	5ee2      	ldrsh	r2, [r4, r3]
 800159a:	b293      	uxth	r3, r2
 800159c:	0711      	lsls	r1, r2, #28
 800159e:	d42d      	bmi.n	80015fc <__swsetup_r+0x88>
 80015a0:	06d9      	lsls	r1, r3, #27
 80015a2:	d411      	bmi.n	80015c8 <__swsetup_r+0x54>
 80015a4:	2309      	movs	r3, #9
 80015a6:	2001      	movs	r0, #1
 80015a8:	6033      	str	r3, [r6, #0]
 80015aa:	3337      	adds	r3, #55	; 0x37
 80015ac:	4313      	orrs	r3, r2
 80015ae:	81a3      	strh	r3, [r4, #12]
 80015b0:	4240      	negs	r0, r0
 80015b2:	bd70      	pop	{r4, r5, r6, pc}
 80015b4:	4b29      	ldr	r3, [pc, #164]	; (800165c <__swsetup_r+0xe8>)
 80015b6:	429c      	cmp	r4, r3
 80015b8:	d101      	bne.n	80015be <__swsetup_r+0x4a>
 80015ba:	68ac      	ldr	r4, [r5, #8]
 80015bc:	e7eb      	b.n	8001596 <__swsetup_r+0x22>
 80015be:	4b28      	ldr	r3, [pc, #160]	; (8001660 <__swsetup_r+0xec>)
 80015c0:	429c      	cmp	r4, r3
 80015c2:	d1e8      	bne.n	8001596 <__swsetup_r+0x22>
 80015c4:	68ec      	ldr	r4, [r5, #12]
 80015c6:	e7e6      	b.n	8001596 <__swsetup_r+0x22>
 80015c8:	075b      	lsls	r3, r3, #29
 80015ca:	d513      	bpl.n	80015f4 <__swsetup_r+0x80>
 80015cc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80015ce:	2900      	cmp	r1, #0
 80015d0:	d008      	beq.n	80015e4 <__swsetup_r+0x70>
 80015d2:	0023      	movs	r3, r4
 80015d4:	3344      	adds	r3, #68	; 0x44
 80015d6:	4299      	cmp	r1, r3
 80015d8:	d002      	beq.n	80015e0 <__swsetup_r+0x6c>
 80015da:	0030      	movs	r0, r6
 80015dc:	f7ff fb2c 	bl	8000c38 <_free_r>
 80015e0:	2300      	movs	r3, #0
 80015e2:	6363      	str	r3, [r4, #52]	; 0x34
 80015e4:	2224      	movs	r2, #36	; 0x24
 80015e6:	89a3      	ldrh	r3, [r4, #12]
 80015e8:	4393      	bics	r3, r2
 80015ea:	81a3      	strh	r3, [r4, #12]
 80015ec:	2300      	movs	r3, #0
 80015ee:	6063      	str	r3, [r4, #4]
 80015f0:	6923      	ldr	r3, [r4, #16]
 80015f2:	6023      	str	r3, [r4, #0]
 80015f4:	2308      	movs	r3, #8
 80015f6:	89a2      	ldrh	r2, [r4, #12]
 80015f8:	4313      	orrs	r3, r2
 80015fa:	81a3      	strh	r3, [r4, #12]
 80015fc:	6923      	ldr	r3, [r4, #16]
 80015fe:	2b00      	cmp	r3, #0
 8001600:	d10b      	bne.n	800161a <__swsetup_r+0xa6>
 8001602:	21a0      	movs	r1, #160	; 0xa0
 8001604:	2280      	movs	r2, #128	; 0x80
 8001606:	89a3      	ldrh	r3, [r4, #12]
 8001608:	0089      	lsls	r1, r1, #2
 800160a:	0092      	lsls	r2, r2, #2
 800160c:	400b      	ands	r3, r1
 800160e:	4293      	cmp	r3, r2
 8001610:	d003      	beq.n	800161a <__swsetup_r+0xa6>
 8001612:	0021      	movs	r1, r4
 8001614:	0030      	movs	r0, r6
 8001616:	f000 f947 	bl	80018a8 <__smakebuf_r>
 800161a:	220c      	movs	r2, #12
 800161c:	5ea3      	ldrsh	r3, [r4, r2]
 800161e:	2001      	movs	r0, #1
 8001620:	001a      	movs	r2, r3
 8001622:	b299      	uxth	r1, r3
 8001624:	4002      	ands	r2, r0
 8001626:	4203      	tst	r3, r0
 8001628:	d00f      	beq.n	800164a <__swsetup_r+0xd6>
 800162a:	2200      	movs	r2, #0
 800162c:	60a2      	str	r2, [r4, #8]
 800162e:	6962      	ldr	r2, [r4, #20]
 8001630:	4252      	negs	r2, r2
 8001632:	61a2      	str	r2, [r4, #24]
 8001634:	2000      	movs	r0, #0
 8001636:	6922      	ldr	r2, [r4, #16]
 8001638:	4282      	cmp	r2, r0
 800163a:	d1ba      	bne.n	80015b2 <__swsetup_r+0x3e>
 800163c:	060a      	lsls	r2, r1, #24
 800163e:	d5b8      	bpl.n	80015b2 <__swsetup_r+0x3e>
 8001640:	2240      	movs	r2, #64	; 0x40
 8001642:	4313      	orrs	r3, r2
 8001644:	81a3      	strh	r3, [r4, #12]
 8001646:	3801      	subs	r0, #1
 8001648:	e7b3      	b.n	80015b2 <__swsetup_r+0x3e>
 800164a:	0788      	lsls	r0, r1, #30
 800164c:	d400      	bmi.n	8001650 <__swsetup_r+0xdc>
 800164e:	6962      	ldr	r2, [r4, #20]
 8001650:	60a2      	str	r2, [r4, #8]
 8001652:	e7ef      	b.n	8001634 <__swsetup_r+0xc0>
 8001654:	20000048 	.word	0x20000048
 8001658:	08001bb8 	.word	0x08001bb8
 800165c:	08001bd8 	.word	0x08001bd8
 8001660:	08001b98 	.word	0x08001b98

08001664 <abort>:
 8001664:	2006      	movs	r0, #6
 8001666:	b510      	push	{r4, lr}
 8001668:	f000 f9bc 	bl	80019e4 <raise>
 800166c:	2001      	movs	r0, #1
 800166e:	f7ff f835 	bl	80006dc <_exit>
	...

08001674 <_close_r>:
 8001674:	2300      	movs	r3, #0
 8001676:	b570      	push	{r4, r5, r6, lr}
 8001678:	4d06      	ldr	r5, [pc, #24]	; (8001694 <_close_r+0x20>)
 800167a:	0004      	movs	r4, r0
 800167c:	0008      	movs	r0, r1
 800167e:	602b      	str	r3, [r5, #0]
 8001680:	f7ff f871 	bl	8000766 <_close>
 8001684:	1c43      	adds	r3, r0, #1
 8001686:	d103      	bne.n	8001690 <_close_r+0x1c>
 8001688:	682b      	ldr	r3, [r5, #0]
 800168a:	2b00      	cmp	r3, #0
 800168c:	d000      	beq.n	8001690 <_close_r+0x1c>
 800168e:	6023      	str	r3, [r4, #0]
 8001690:	bd70      	pop	{r4, r5, r6, pc}
 8001692:	46c0      	nop			; (mov r8, r8)
 8001694:	200000e0 	.word	0x200000e0

08001698 <__sflush_r>:
 8001698:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800169a:	898b      	ldrh	r3, [r1, #12]
 800169c:	0005      	movs	r5, r0
 800169e:	000c      	movs	r4, r1
 80016a0:	071a      	lsls	r2, r3, #28
 80016a2:	d45f      	bmi.n	8001764 <__sflush_r+0xcc>
 80016a4:	684a      	ldr	r2, [r1, #4]
 80016a6:	2a00      	cmp	r2, #0
 80016a8:	dc04      	bgt.n	80016b4 <__sflush_r+0x1c>
 80016aa:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 80016ac:	2a00      	cmp	r2, #0
 80016ae:	dc01      	bgt.n	80016b4 <__sflush_r+0x1c>
 80016b0:	2000      	movs	r0, #0
 80016b2:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80016b4:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 80016b6:	2f00      	cmp	r7, #0
 80016b8:	d0fa      	beq.n	80016b0 <__sflush_r+0x18>
 80016ba:	2200      	movs	r2, #0
 80016bc:	2180      	movs	r1, #128	; 0x80
 80016be:	682e      	ldr	r6, [r5, #0]
 80016c0:	602a      	str	r2, [r5, #0]
 80016c2:	001a      	movs	r2, r3
 80016c4:	0149      	lsls	r1, r1, #5
 80016c6:	400a      	ands	r2, r1
 80016c8:	420b      	tst	r3, r1
 80016ca:	d034      	beq.n	8001736 <__sflush_r+0x9e>
 80016cc:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80016ce:	89a3      	ldrh	r3, [r4, #12]
 80016d0:	075b      	lsls	r3, r3, #29
 80016d2:	d506      	bpl.n	80016e2 <__sflush_r+0x4a>
 80016d4:	6863      	ldr	r3, [r4, #4]
 80016d6:	1ac0      	subs	r0, r0, r3
 80016d8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80016da:	2b00      	cmp	r3, #0
 80016dc:	d001      	beq.n	80016e2 <__sflush_r+0x4a>
 80016de:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80016e0:	1ac0      	subs	r0, r0, r3
 80016e2:	0002      	movs	r2, r0
 80016e4:	6a21      	ldr	r1, [r4, #32]
 80016e6:	2300      	movs	r3, #0
 80016e8:	0028      	movs	r0, r5
 80016ea:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 80016ec:	47b8      	blx	r7
 80016ee:	89a1      	ldrh	r1, [r4, #12]
 80016f0:	1c43      	adds	r3, r0, #1
 80016f2:	d106      	bne.n	8001702 <__sflush_r+0x6a>
 80016f4:	682b      	ldr	r3, [r5, #0]
 80016f6:	2b1d      	cmp	r3, #29
 80016f8:	d831      	bhi.n	800175e <__sflush_r+0xc6>
 80016fa:	4a2c      	ldr	r2, [pc, #176]	; (80017ac <__sflush_r+0x114>)
 80016fc:	40da      	lsrs	r2, r3
 80016fe:	07d3      	lsls	r3, r2, #31
 8001700:	d52d      	bpl.n	800175e <__sflush_r+0xc6>
 8001702:	2300      	movs	r3, #0
 8001704:	6063      	str	r3, [r4, #4]
 8001706:	6923      	ldr	r3, [r4, #16]
 8001708:	6023      	str	r3, [r4, #0]
 800170a:	04cb      	lsls	r3, r1, #19
 800170c:	d505      	bpl.n	800171a <__sflush_r+0x82>
 800170e:	1c43      	adds	r3, r0, #1
 8001710:	d102      	bne.n	8001718 <__sflush_r+0x80>
 8001712:	682b      	ldr	r3, [r5, #0]
 8001714:	2b00      	cmp	r3, #0
 8001716:	d100      	bne.n	800171a <__sflush_r+0x82>
 8001718:	6560      	str	r0, [r4, #84]	; 0x54
 800171a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800171c:	602e      	str	r6, [r5, #0]
 800171e:	2900      	cmp	r1, #0
 8001720:	d0c6      	beq.n	80016b0 <__sflush_r+0x18>
 8001722:	0023      	movs	r3, r4
 8001724:	3344      	adds	r3, #68	; 0x44
 8001726:	4299      	cmp	r1, r3
 8001728:	d002      	beq.n	8001730 <__sflush_r+0x98>
 800172a:	0028      	movs	r0, r5
 800172c:	f7ff fa84 	bl	8000c38 <_free_r>
 8001730:	2000      	movs	r0, #0
 8001732:	6360      	str	r0, [r4, #52]	; 0x34
 8001734:	e7bd      	b.n	80016b2 <__sflush_r+0x1a>
 8001736:	2301      	movs	r3, #1
 8001738:	0028      	movs	r0, r5
 800173a:	6a21      	ldr	r1, [r4, #32]
 800173c:	47b8      	blx	r7
 800173e:	1c43      	adds	r3, r0, #1
 8001740:	d1c5      	bne.n	80016ce <__sflush_r+0x36>
 8001742:	682b      	ldr	r3, [r5, #0]
 8001744:	2b00      	cmp	r3, #0
 8001746:	d0c2      	beq.n	80016ce <__sflush_r+0x36>
 8001748:	2b1d      	cmp	r3, #29
 800174a:	d001      	beq.n	8001750 <__sflush_r+0xb8>
 800174c:	2b16      	cmp	r3, #22
 800174e:	d101      	bne.n	8001754 <__sflush_r+0xbc>
 8001750:	602e      	str	r6, [r5, #0]
 8001752:	e7ad      	b.n	80016b0 <__sflush_r+0x18>
 8001754:	2340      	movs	r3, #64	; 0x40
 8001756:	89a2      	ldrh	r2, [r4, #12]
 8001758:	4313      	orrs	r3, r2
 800175a:	81a3      	strh	r3, [r4, #12]
 800175c:	e7a9      	b.n	80016b2 <__sflush_r+0x1a>
 800175e:	2340      	movs	r3, #64	; 0x40
 8001760:	430b      	orrs	r3, r1
 8001762:	e7fa      	b.n	800175a <__sflush_r+0xc2>
 8001764:	690f      	ldr	r7, [r1, #16]
 8001766:	2f00      	cmp	r7, #0
 8001768:	d0a2      	beq.n	80016b0 <__sflush_r+0x18>
 800176a:	680a      	ldr	r2, [r1, #0]
 800176c:	600f      	str	r7, [r1, #0]
 800176e:	1bd2      	subs	r2, r2, r7
 8001770:	9201      	str	r2, [sp, #4]
 8001772:	2200      	movs	r2, #0
 8001774:	079b      	lsls	r3, r3, #30
 8001776:	d100      	bne.n	800177a <__sflush_r+0xe2>
 8001778:	694a      	ldr	r2, [r1, #20]
 800177a:	60a2      	str	r2, [r4, #8]
 800177c:	9b01      	ldr	r3, [sp, #4]
 800177e:	2b00      	cmp	r3, #0
 8001780:	dc00      	bgt.n	8001784 <__sflush_r+0xec>
 8001782:	e795      	b.n	80016b0 <__sflush_r+0x18>
 8001784:	003a      	movs	r2, r7
 8001786:	0028      	movs	r0, r5
 8001788:	9b01      	ldr	r3, [sp, #4]
 800178a:	6a21      	ldr	r1, [r4, #32]
 800178c:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800178e:	47b0      	blx	r6
 8001790:	2800      	cmp	r0, #0
 8001792:	dc06      	bgt.n	80017a2 <__sflush_r+0x10a>
 8001794:	2340      	movs	r3, #64	; 0x40
 8001796:	2001      	movs	r0, #1
 8001798:	89a2      	ldrh	r2, [r4, #12]
 800179a:	4240      	negs	r0, r0
 800179c:	4313      	orrs	r3, r2
 800179e:	81a3      	strh	r3, [r4, #12]
 80017a0:	e787      	b.n	80016b2 <__sflush_r+0x1a>
 80017a2:	9b01      	ldr	r3, [sp, #4]
 80017a4:	183f      	adds	r7, r7, r0
 80017a6:	1a1b      	subs	r3, r3, r0
 80017a8:	9301      	str	r3, [sp, #4]
 80017aa:	e7e7      	b.n	800177c <__sflush_r+0xe4>
 80017ac:	20400001 	.word	0x20400001

080017b0 <_fflush_r>:
 80017b0:	690b      	ldr	r3, [r1, #16]
 80017b2:	b570      	push	{r4, r5, r6, lr}
 80017b4:	0005      	movs	r5, r0
 80017b6:	000c      	movs	r4, r1
 80017b8:	2b00      	cmp	r3, #0
 80017ba:	d102      	bne.n	80017c2 <_fflush_r+0x12>
 80017bc:	2500      	movs	r5, #0
 80017be:	0028      	movs	r0, r5
 80017c0:	bd70      	pop	{r4, r5, r6, pc}
 80017c2:	2800      	cmp	r0, #0
 80017c4:	d004      	beq.n	80017d0 <_fflush_r+0x20>
 80017c6:	6983      	ldr	r3, [r0, #24]
 80017c8:	2b00      	cmp	r3, #0
 80017ca:	d101      	bne.n	80017d0 <_fflush_r+0x20>
 80017cc:	f7ff f976 	bl	8000abc <__sinit>
 80017d0:	4b14      	ldr	r3, [pc, #80]	; (8001824 <_fflush_r+0x74>)
 80017d2:	429c      	cmp	r4, r3
 80017d4:	d11b      	bne.n	800180e <_fflush_r+0x5e>
 80017d6:	686c      	ldr	r4, [r5, #4]
 80017d8:	220c      	movs	r2, #12
 80017da:	5ea3      	ldrsh	r3, [r4, r2]
 80017dc:	2b00      	cmp	r3, #0
 80017de:	d0ed      	beq.n	80017bc <_fflush_r+0xc>
 80017e0:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80017e2:	07d2      	lsls	r2, r2, #31
 80017e4:	d404      	bmi.n	80017f0 <_fflush_r+0x40>
 80017e6:	059b      	lsls	r3, r3, #22
 80017e8:	d402      	bmi.n	80017f0 <_fflush_r+0x40>
 80017ea:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80017ec:	f7ff fa17 	bl	8000c1e <__retarget_lock_acquire_recursive>
 80017f0:	0028      	movs	r0, r5
 80017f2:	0021      	movs	r1, r4
 80017f4:	f7ff ff50 	bl	8001698 <__sflush_r>
 80017f8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80017fa:	0005      	movs	r5, r0
 80017fc:	07db      	lsls	r3, r3, #31
 80017fe:	d4de      	bmi.n	80017be <_fflush_r+0xe>
 8001800:	89a3      	ldrh	r3, [r4, #12]
 8001802:	059b      	lsls	r3, r3, #22
 8001804:	d4db      	bmi.n	80017be <_fflush_r+0xe>
 8001806:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001808:	f7ff fa0a 	bl	8000c20 <__retarget_lock_release_recursive>
 800180c:	e7d7      	b.n	80017be <_fflush_r+0xe>
 800180e:	4b06      	ldr	r3, [pc, #24]	; (8001828 <_fflush_r+0x78>)
 8001810:	429c      	cmp	r4, r3
 8001812:	d101      	bne.n	8001818 <_fflush_r+0x68>
 8001814:	68ac      	ldr	r4, [r5, #8]
 8001816:	e7df      	b.n	80017d8 <_fflush_r+0x28>
 8001818:	4b04      	ldr	r3, [pc, #16]	; (800182c <_fflush_r+0x7c>)
 800181a:	429c      	cmp	r4, r3
 800181c:	d1dc      	bne.n	80017d8 <_fflush_r+0x28>
 800181e:	68ec      	ldr	r4, [r5, #12]
 8001820:	e7da      	b.n	80017d8 <_fflush_r+0x28>
 8001822:	46c0      	nop			; (mov r8, r8)
 8001824:	08001bb8 	.word	0x08001bb8
 8001828:	08001bd8 	.word	0x08001bd8
 800182c:	08001b98 	.word	0x08001b98

08001830 <_lseek_r>:
 8001830:	b570      	push	{r4, r5, r6, lr}
 8001832:	0004      	movs	r4, r0
 8001834:	0008      	movs	r0, r1
 8001836:	0011      	movs	r1, r2
 8001838:	001a      	movs	r2, r3
 800183a:	2300      	movs	r3, #0
 800183c:	4d05      	ldr	r5, [pc, #20]	; (8001854 <_lseek_r+0x24>)
 800183e:	602b      	str	r3, [r5, #0]
 8001840:	f7fe ffb2 	bl	80007a8 <_lseek>
 8001844:	1c43      	adds	r3, r0, #1
 8001846:	d103      	bne.n	8001850 <_lseek_r+0x20>
 8001848:	682b      	ldr	r3, [r5, #0]
 800184a:	2b00      	cmp	r3, #0
 800184c:	d000      	beq.n	8001850 <_lseek_r+0x20>
 800184e:	6023      	str	r3, [r4, #0]
 8001850:	bd70      	pop	{r4, r5, r6, pc}
 8001852:	46c0      	nop			; (mov r8, r8)
 8001854:	200000e0 	.word	0x200000e0

08001858 <__swhatbuf_r>:
 8001858:	b570      	push	{r4, r5, r6, lr}
 800185a:	000e      	movs	r6, r1
 800185c:	001d      	movs	r5, r3
 800185e:	230e      	movs	r3, #14
 8001860:	5ec9      	ldrsh	r1, [r1, r3]
 8001862:	0014      	movs	r4, r2
 8001864:	b096      	sub	sp, #88	; 0x58
 8001866:	2900      	cmp	r1, #0
 8001868:	da07      	bge.n	800187a <__swhatbuf_r+0x22>
 800186a:	2300      	movs	r3, #0
 800186c:	602b      	str	r3, [r5, #0]
 800186e:	89b3      	ldrh	r3, [r6, #12]
 8001870:	061b      	lsls	r3, r3, #24
 8001872:	d411      	bmi.n	8001898 <__swhatbuf_r+0x40>
 8001874:	2380      	movs	r3, #128	; 0x80
 8001876:	00db      	lsls	r3, r3, #3
 8001878:	e00f      	b.n	800189a <__swhatbuf_r+0x42>
 800187a:	466a      	mov	r2, sp
 800187c:	f000 f8d2 	bl	8001a24 <_fstat_r>
 8001880:	2800      	cmp	r0, #0
 8001882:	dbf2      	blt.n	800186a <__swhatbuf_r+0x12>
 8001884:	23f0      	movs	r3, #240	; 0xf0
 8001886:	9901      	ldr	r1, [sp, #4]
 8001888:	021b      	lsls	r3, r3, #8
 800188a:	4019      	ands	r1, r3
 800188c:	4b05      	ldr	r3, [pc, #20]	; (80018a4 <__swhatbuf_r+0x4c>)
 800188e:	18c9      	adds	r1, r1, r3
 8001890:	424b      	negs	r3, r1
 8001892:	4159      	adcs	r1, r3
 8001894:	6029      	str	r1, [r5, #0]
 8001896:	e7ed      	b.n	8001874 <__swhatbuf_r+0x1c>
 8001898:	2340      	movs	r3, #64	; 0x40
 800189a:	2000      	movs	r0, #0
 800189c:	6023      	str	r3, [r4, #0]
 800189e:	b016      	add	sp, #88	; 0x58
 80018a0:	bd70      	pop	{r4, r5, r6, pc}
 80018a2:	46c0      	nop			; (mov r8, r8)
 80018a4:	ffffe000 	.word	0xffffe000

080018a8 <__smakebuf_r>:
 80018a8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80018aa:	2602      	movs	r6, #2
 80018ac:	898b      	ldrh	r3, [r1, #12]
 80018ae:	0005      	movs	r5, r0
 80018b0:	000c      	movs	r4, r1
 80018b2:	4233      	tst	r3, r6
 80018b4:	d006      	beq.n	80018c4 <__smakebuf_r+0x1c>
 80018b6:	0023      	movs	r3, r4
 80018b8:	3347      	adds	r3, #71	; 0x47
 80018ba:	6023      	str	r3, [r4, #0]
 80018bc:	6123      	str	r3, [r4, #16]
 80018be:	2301      	movs	r3, #1
 80018c0:	6163      	str	r3, [r4, #20]
 80018c2:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 80018c4:	466a      	mov	r2, sp
 80018c6:	ab01      	add	r3, sp, #4
 80018c8:	f7ff ffc6 	bl	8001858 <__swhatbuf_r>
 80018cc:	9900      	ldr	r1, [sp, #0]
 80018ce:	0007      	movs	r7, r0
 80018d0:	0028      	movs	r0, r5
 80018d2:	f7ff f9fb 	bl	8000ccc <_malloc_r>
 80018d6:	2800      	cmp	r0, #0
 80018d8:	d108      	bne.n	80018ec <__smakebuf_r+0x44>
 80018da:	220c      	movs	r2, #12
 80018dc:	5ea3      	ldrsh	r3, [r4, r2]
 80018de:	059a      	lsls	r2, r3, #22
 80018e0:	d4ef      	bmi.n	80018c2 <__smakebuf_r+0x1a>
 80018e2:	2203      	movs	r2, #3
 80018e4:	4393      	bics	r3, r2
 80018e6:	431e      	orrs	r6, r3
 80018e8:	81a6      	strh	r6, [r4, #12]
 80018ea:	e7e4      	b.n	80018b6 <__smakebuf_r+0xe>
 80018ec:	4b0f      	ldr	r3, [pc, #60]	; (800192c <__smakebuf_r+0x84>)
 80018ee:	62ab      	str	r3, [r5, #40]	; 0x28
 80018f0:	2380      	movs	r3, #128	; 0x80
 80018f2:	89a2      	ldrh	r2, [r4, #12]
 80018f4:	6020      	str	r0, [r4, #0]
 80018f6:	4313      	orrs	r3, r2
 80018f8:	81a3      	strh	r3, [r4, #12]
 80018fa:	9b00      	ldr	r3, [sp, #0]
 80018fc:	6120      	str	r0, [r4, #16]
 80018fe:	6163      	str	r3, [r4, #20]
 8001900:	9b01      	ldr	r3, [sp, #4]
 8001902:	2b00      	cmp	r3, #0
 8001904:	d00d      	beq.n	8001922 <__smakebuf_r+0x7a>
 8001906:	0028      	movs	r0, r5
 8001908:	230e      	movs	r3, #14
 800190a:	5ee1      	ldrsh	r1, [r4, r3]
 800190c:	f000 f89c 	bl	8001a48 <_isatty_r>
 8001910:	2800      	cmp	r0, #0
 8001912:	d006      	beq.n	8001922 <__smakebuf_r+0x7a>
 8001914:	2203      	movs	r2, #3
 8001916:	89a3      	ldrh	r3, [r4, #12]
 8001918:	4393      	bics	r3, r2
 800191a:	001a      	movs	r2, r3
 800191c:	2301      	movs	r3, #1
 800191e:	4313      	orrs	r3, r2
 8001920:	81a3      	strh	r3, [r4, #12]
 8001922:	89a0      	ldrh	r0, [r4, #12]
 8001924:	4307      	orrs	r7, r0
 8001926:	81a7      	strh	r7, [r4, #12]
 8001928:	e7cb      	b.n	80018c2 <__smakebuf_r+0x1a>
 800192a:	46c0      	nop			; (mov r8, r8)
 800192c:	08000a41 	.word	0x08000a41

08001930 <memchr>:
 8001930:	b2c9      	uxtb	r1, r1
 8001932:	1882      	adds	r2, r0, r2
 8001934:	4290      	cmp	r0, r2
 8001936:	d101      	bne.n	800193c <memchr+0xc>
 8001938:	2000      	movs	r0, #0
 800193a:	4770      	bx	lr
 800193c:	7803      	ldrb	r3, [r0, #0]
 800193e:	428b      	cmp	r3, r1
 8001940:	d0fb      	beq.n	800193a <memchr+0xa>
 8001942:	3001      	adds	r0, #1
 8001944:	e7f6      	b.n	8001934 <memchr+0x4>
	...

08001948 <__malloc_lock>:
 8001948:	b510      	push	{r4, lr}
 800194a:	4802      	ldr	r0, [pc, #8]	; (8001954 <__malloc_lock+0xc>)
 800194c:	f7ff f967 	bl	8000c1e <__retarget_lock_acquire_recursive>
 8001950:	bd10      	pop	{r4, pc}
 8001952:	46c0      	nop			; (mov r8, r8)
 8001954:	200000d8 	.word	0x200000d8

08001958 <__malloc_unlock>:
 8001958:	b510      	push	{r4, lr}
 800195a:	4802      	ldr	r0, [pc, #8]	; (8001964 <__malloc_unlock+0xc>)
 800195c:	f7ff f960 	bl	8000c20 <__retarget_lock_release_recursive>
 8001960:	bd10      	pop	{r4, pc}
 8001962:	46c0      	nop			; (mov r8, r8)
 8001964:	200000d8 	.word	0x200000d8

08001968 <_read_r>:
 8001968:	b570      	push	{r4, r5, r6, lr}
 800196a:	0004      	movs	r4, r0
 800196c:	0008      	movs	r0, r1
 800196e:	0011      	movs	r1, r2
 8001970:	001a      	movs	r2, r3
 8001972:	2300      	movs	r3, #0
 8001974:	4d05      	ldr	r5, [pc, #20]	; (800198c <_read_r+0x24>)
 8001976:	602b      	str	r3, [r5, #0]
 8001978:	f7fe febc 	bl	80006f4 <_read>
 800197c:	1c43      	adds	r3, r0, #1
 800197e:	d103      	bne.n	8001988 <_read_r+0x20>
 8001980:	682b      	ldr	r3, [r5, #0]
 8001982:	2b00      	cmp	r3, #0
 8001984:	d000      	beq.n	8001988 <_read_r+0x20>
 8001986:	6023      	str	r3, [r4, #0]
 8001988:	bd70      	pop	{r4, r5, r6, pc}
 800198a:	46c0      	nop			; (mov r8, r8)
 800198c:	200000e0 	.word	0x200000e0

08001990 <_raise_r>:
 8001990:	b570      	push	{r4, r5, r6, lr}
 8001992:	0004      	movs	r4, r0
 8001994:	000d      	movs	r5, r1
 8001996:	291f      	cmp	r1, #31
 8001998:	d904      	bls.n	80019a4 <_raise_r+0x14>
 800199a:	2316      	movs	r3, #22
 800199c:	6003      	str	r3, [r0, #0]
 800199e:	2001      	movs	r0, #1
 80019a0:	4240      	negs	r0, r0
 80019a2:	bd70      	pop	{r4, r5, r6, pc}
 80019a4:	6c43      	ldr	r3, [r0, #68]	; 0x44
 80019a6:	2b00      	cmp	r3, #0
 80019a8:	d004      	beq.n	80019b4 <_raise_r+0x24>
 80019aa:	008a      	lsls	r2, r1, #2
 80019ac:	189b      	adds	r3, r3, r2
 80019ae:	681a      	ldr	r2, [r3, #0]
 80019b0:	2a00      	cmp	r2, #0
 80019b2:	d108      	bne.n	80019c6 <_raise_r+0x36>
 80019b4:	0020      	movs	r0, r4
 80019b6:	f000 f831 	bl	8001a1c <_getpid_r>
 80019ba:	002a      	movs	r2, r5
 80019bc:	0001      	movs	r1, r0
 80019be:	0020      	movs	r0, r4
 80019c0:	f000 f81a 	bl	80019f8 <_kill_r>
 80019c4:	e7ed      	b.n	80019a2 <_raise_r+0x12>
 80019c6:	2000      	movs	r0, #0
 80019c8:	2a01      	cmp	r2, #1
 80019ca:	d0ea      	beq.n	80019a2 <_raise_r+0x12>
 80019cc:	1c51      	adds	r1, r2, #1
 80019ce:	d103      	bne.n	80019d8 <_raise_r+0x48>
 80019d0:	2316      	movs	r3, #22
 80019d2:	3001      	adds	r0, #1
 80019d4:	6023      	str	r3, [r4, #0]
 80019d6:	e7e4      	b.n	80019a2 <_raise_r+0x12>
 80019d8:	2400      	movs	r4, #0
 80019da:	0028      	movs	r0, r5
 80019dc:	601c      	str	r4, [r3, #0]
 80019de:	4790      	blx	r2
 80019e0:	0020      	movs	r0, r4
 80019e2:	e7de      	b.n	80019a2 <_raise_r+0x12>

080019e4 <raise>:
 80019e4:	b510      	push	{r4, lr}
 80019e6:	4b03      	ldr	r3, [pc, #12]	; (80019f4 <raise+0x10>)
 80019e8:	0001      	movs	r1, r0
 80019ea:	6818      	ldr	r0, [r3, #0]
 80019ec:	f7ff ffd0 	bl	8001990 <_raise_r>
 80019f0:	bd10      	pop	{r4, pc}
 80019f2:	46c0      	nop			; (mov r8, r8)
 80019f4:	20000048 	.word	0x20000048

080019f8 <_kill_r>:
 80019f8:	2300      	movs	r3, #0
 80019fa:	b570      	push	{r4, r5, r6, lr}
 80019fc:	4d06      	ldr	r5, [pc, #24]	; (8001a18 <_kill_r+0x20>)
 80019fe:	0004      	movs	r4, r0
 8001a00:	0008      	movs	r0, r1
 8001a02:	0011      	movs	r1, r2
 8001a04:	602b      	str	r3, [r5, #0]
 8001a06:	f7fe fe59 	bl	80006bc <_kill>
 8001a0a:	1c43      	adds	r3, r0, #1
 8001a0c:	d103      	bne.n	8001a16 <_kill_r+0x1e>
 8001a0e:	682b      	ldr	r3, [r5, #0]
 8001a10:	2b00      	cmp	r3, #0
 8001a12:	d000      	beq.n	8001a16 <_kill_r+0x1e>
 8001a14:	6023      	str	r3, [r4, #0]
 8001a16:	bd70      	pop	{r4, r5, r6, pc}
 8001a18:	200000e0 	.word	0x200000e0

08001a1c <_getpid_r>:
 8001a1c:	b510      	push	{r4, lr}
 8001a1e:	f7fe fe47 	bl	80006b0 <_getpid>
 8001a22:	bd10      	pop	{r4, pc}

08001a24 <_fstat_r>:
 8001a24:	2300      	movs	r3, #0
 8001a26:	b570      	push	{r4, r5, r6, lr}
 8001a28:	4d06      	ldr	r5, [pc, #24]	; (8001a44 <_fstat_r+0x20>)
 8001a2a:	0004      	movs	r4, r0
 8001a2c:	0008      	movs	r0, r1
 8001a2e:	0011      	movs	r1, r2
 8001a30:	602b      	str	r3, [r5, #0]
 8001a32:	f7fe fea2 	bl	800077a <_fstat>
 8001a36:	1c43      	adds	r3, r0, #1
 8001a38:	d103      	bne.n	8001a42 <_fstat_r+0x1e>
 8001a3a:	682b      	ldr	r3, [r5, #0]
 8001a3c:	2b00      	cmp	r3, #0
 8001a3e:	d000      	beq.n	8001a42 <_fstat_r+0x1e>
 8001a40:	6023      	str	r3, [r4, #0]
 8001a42:	bd70      	pop	{r4, r5, r6, pc}
 8001a44:	200000e0 	.word	0x200000e0

08001a48 <_isatty_r>:
 8001a48:	2300      	movs	r3, #0
 8001a4a:	b570      	push	{r4, r5, r6, lr}
 8001a4c:	4d06      	ldr	r5, [pc, #24]	; (8001a68 <_isatty_r+0x20>)
 8001a4e:	0004      	movs	r4, r0
 8001a50:	0008      	movs	r0, r1
 8001a52:	602b      	str	r3, [r5, #0]
 8001a54:	f7fe fe9f 	bl	8000796 <_isatty>
 8001a58:	1c43      	adds	r3, r0, #1
 8001a5a:	d103      	bne.n	8001a64 <_isatty_r+0x1c>
 8001a5c:	682b      	ldr	r3, [r5, #0]
 8001a5e:	2b00      	cmp	r3, #0
 8001a60:	d000      	beq.n	8001a64 <_isatty_r+0x1c>
 8001a62:	6023      	str	r3, [r4, #0]
 8001a64:	bd70      	pop	{r4, r5, r6, pc}
 8001a66:	46c0      	nop			; (mov r8, r8)
 8001a68:	200000e0 	.word	0x200000e0

08001a6c <_init>:
 8001a6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001a6e:	46c0      	nop			; (mov r8, r8)
 8001a70:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001a72:	bc08      	pop	{r3}
 8001a74:	469e      	mov	lr, r3
 8001a76:	4770      	bx	lr

08001a78 <_fini>:
 8001a78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001a7a:	46c0      	nop			; (mov r8, r8)
 8001a7c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001a7e:	bc08      	pop	{r3}
 8001a80:	469e      	mov	lr, r3
 8001a82:	4770      	bx	lr
