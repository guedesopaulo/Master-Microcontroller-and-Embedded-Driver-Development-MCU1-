
002SampleApp.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001680  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000001a8  08001810  08001810  00011810  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080019b8  080019b8  000200ac  2**0
                  CONTENTS
  4 .ARM          00000000  080019b8  080019b8  000200ac  2**0
                  CONTENTS
  5 .preinit_array 00000000  080019b8  080019b8  000200ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080019b8  080019b8  000119b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080019bc  080019bc  000119bc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000ac  20000000  080019c0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000038  200000ac  08001a6c  000200ac  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200000e4  08001a6c  000200e4  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000200ac  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002517  00000000  00000000  000200dc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000069f  00000000  00000000  000225f3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000138  00000000  00000000  00022c98  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000100  00000000  00000000  00022dd0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002b31  00000000  00000000  00022ed0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000014b4  00000000  00000000  00025a01  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00009754  00000000  00000000  00026eb5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  00030609  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000eb0  00000000  00000000  0003065c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	200000ac 	.word	0x200000ac
 80001ac:	00000000 	.word	0x00000000
 80001b0:	080017f8 	.word	0x080017f8

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	200000b0 	.word	0x200000b0
 80001cc:	080017f8 	.word	0x080017f8

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <array_fill_numbers>:
int numbers[] = { 456,345,678,567,890,456,3456,123,765,456,896,456,678,987,000,145,90};

int  someData = 90;

void array_fill_numbers(int pNumbers[], unsigned int len)
{
 8000270:	b580      	push	{r7, lr}
 8000272:	b084      	sub	sp, #16
 8000274:	af00      	add	r7, sp, #0
 8000276:	6078      	str	r0, [r7, #4]
 8000278:	6039      	str	r1, [r7, #0]

    for ( unsigned int i = 0 ; i < len ; i++)
 800027a:	2300      	movs	r3, #0
 800027c:	60fb      	str	r3, [r7, #12]
 800027e:	e015      	b.n	80002ac <array_fill_numbers+0x3c>
    {
        pNumbers[i] = rand() % 1000;
 8000280:	f000 fa70 	bl	8000764 <rand>
 8000284:	4602      	mov	r2, r0
 8000286:	68fb      	ldr	r3, [r7, #12]
 8000288:	009b      	lsls	r3, r3, #2
 800028a:	6879      	ldr	r1, [r7, #4]
 800028c:	4419      	add	r1, r3
 800028e:	4b0c      	ldr	r3, [pc, #48]	; (80002c0 <array_fill_numbers+0x50>)
 8000290:	fb83 0302 	smull	r0, r3, r3, r2
 8000294:	1198      	asrs	r0, r3, #6
 8000296:	17d3      	asrs	r3, r2, #31
 8000298:	1ac3      	subs	r3, r0, r3
 800029a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800029e:	fb00 f303 	mul.w	r3, r0, r3
 80002a2:	1ad3      	subs	r3, r2, r3
 80002a4:	600b      	str	r3, [r1, #0]
    for ( unsigned int i = 0 ; i < len ; i++)
 80002a6:	68fb      	ldr	r3, [r7, #12]
 80002a8:	3301      	adds	r3, #1
 80002aa:	60fb      	str	r3, [r7, #12]
 80002ac:	68fa      	ldr	r2, [r7, #12]
 80002ae:	683b      	ldr	r3, [r7, #0]
 80002b0:	429a      	cmp	r2, r3
 80002b2:	d3e5      	bcc.n	8000280 <array_fill_numbers+0x10>
    }

}
 80002b4:	bf00      	nop
 80002b6:	bf00      	nop
 80002b8:	3710      	adds	r7, #16
 80002ba:	46bd      	mov	sp, r7
 80002bc:	bd80      	pop	{r7, pc}
 80002be:	bf00      	nop
 80002c0:	10624dd3 	.word	0x10624dd3

080002c4 <display_numbers>:

void display_numbers(int *pNumbers, unsigned int len, char *pMessage)
{
 80002c4:	b580      	push	{r7, lr}
 80002c6:	b086      	sub	sp, #24
 80002c8:	af00      	add	r7, sp, #0
 80002ca:	60f8      	str	r0, [r7, #12]
 80002cc:	60b9      	str	r1, [r7, #8]
 80002ce:	607a      	str	r2, [r7, #4]
    printf("%s",pMessage);
 80002d0:	6879      	ldr	r1, [r7, #4]
 80002d2:	480e      	ldr	r0, [pc, #56]	; (800030c <display_numbers+0x48>)
 80002d4:	f000 fa18 	bl	8000708 <iprintf>

    for (unsigned i = 0 ; i < len ; i++)
 80002d8:	2300      	movs	r3, #0
 80002da:	617b      	str	r3, [r7, #20]
 80002dc:	e00b      	b.n	80002f6 <display_numbers+0x32>
    {
        printf("%5d  ",pNumbers[i]);
 80002de:	697b      	ldr	r3, [r7, #20]
 80002e0:	009b      	lsls	r3, r3, #2
 80002e2:	68fa      	ldr	r2, [r7, #12]
 80002e4:	4413      	add	r3, r2
 80002e6:	681b      	ldr	r3, [r3, #0]
 80002e8:	4619      	mov	r1, r3
 80002ea:	4809      	ldr	r0, [pc, #36]	; (8000310 <display_numbers+0x4c>)
 80002ec:	f000 fa0c 	bl	8000708 <iprintf>
    for (unsigned i = 0 ; i < len ; i++)
 80002f0:	697b      	ldr	r3, [r7, #20]
 80002f2:	3301      	adds	r3, #1
 80002f4:	617b      	str	r3, [r7, #20]
 80002f6:	697a      	ldr	r2, [r7, #20]
 80002f8:	68bb      	ldr	r3, [r7, #8]
 80002fa:	429a      	cmp	r2, r3
 80002fc:	d3ef      	bcc.n	80002de <display_numbers+0x1a>
    }

    printf("\n");
 80002fe:	200a      	movs	r0, #10
 8000300:	f000 fa1a 	bl	8000738 <putchar>
}
 8000304:	bf00      	nop
 8000306:	3718      	adds	r7, #24
 8000308:	46bd      	mov	sp, r7
 800030a:	bd80      	pop	{r7, pc}
 800030c:	08001810 	.word	0x08001810
 8000310:	08001814 	.word	0x08001814

08000314 <swap_numbers>:


void swap_numbers(int *x,int *y)
{
 8000314:	b480      	push	{r7}
 8000316:	b085      	sub	sp, #20
 8000318:	af00      	add	r7, sp, #0
 800031a:	6078      	str	r0, [r7, #4]
 800031c:	6039      	str	r1, [r7, #0]
     int temp=*x;
 800031e:	687b      	ldr	r3, [r7, #4]
 8000320:	681b      	ldr	r3, [r3, #0]
 8000322:	60fb      	str	r3, [r7, #12]
     *x=*y;
 8000324:	683b      	ldr	r3, [r7, #0]
 8000326:	681a      	ldr	r2, [r3, #0]
 8000328:	687b      	ldr	r3, [r7, #4]
 800032a:	601a      	str	r2, [r3, #0]
     *y=temp;
 800032c:	683b      	ldr	r3, [r7, #0]
 800032e:	68fa      	ldr	r2, [r7, #12]
 8000330:	601a      	str	r2, [r3, #0]
     void (*jump_addr) (void);
     jump_addr = (void*)0x20000009;
     jump_addr();
#endif

     someData = 10;
 8000332:	4b04      	ldr	r3, [pc, #16]	; (8000344 <swap_numbers+0x30>)
 8000334:	220a      	movs	r2, #10
 8000336:	601a      	str	r2, [r3, #0]
}
 8000338:	bf00      	nop
 800033a:	3714      	adds	r7, #20
 800033c:	46bd      	mov	sp, r7
 800033e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000342:	4770      	bx	lr
 8000344:	20000044 	.word	0x20000044

08000348 <bubble_sort>:


void bubble_sort(int *pNumbers , unsigned int len)
{
 8000348:	b580      	push	{r7, lr}
 800034a:	b086      	sub	sp, #24
 800034c:	af00      	add	r7, sp, #0
 800034e:	6078      	str	r0, [r7, #4]
 8000350:	6039      	str	r1, [r7, #0]

    int i,j,flag=0;
 8000352:	2300      	movs	r3, #0
 8000354:	60fb      	str	r3, [r7, #12]

    for(i=0;i<len-1;i++)
 8000356:	2300      	movs	r3, #0
 8000358:	617b      	str	r3, [r7, #20]
 800035a:	e02f      	b.n	80003bc <bubble_sort+0x74>
    {
        flag=0;
 800035c:	2300      	movs	r3, #0
 800035e:	60fb      	str	r3, [r7, #12]

        for(j=0;j<len-1-i;j++)
 8000360:	2300      	movs	r3, #0
 8000362:	613b      	str	r3, [r7, #16]
 8000364:	e01d      	b.n	80003a2 <bubble_sort+0x5a>
        {
            if(pNumbers[j] > pNumbers[j+1])
 8000366:	693b      	ldr	r3, [r7, #16]
 8000368:	009b      	lsls	r3, r3, #2
 800036a:	687a      	ldr	r2, [r7, #4]
 800036c:	4413      	add	r3, r2
 800036e:	681a      	ldr	r2, [r3, #0]
 8000370:	693b      	ldr	r3, [r7, #16]
 8000372:	3301      	adds	r3, #1
 8000374:	009b      	lsls	r3, r3, #2
 8000376:	6879      	ldr	r1, [r7, #4]
 8000378:	440b      	add	r3, r1
 800037a:	681b      	ldr	r3, [r3, #0]
 800037c:	429a      	cmp	r2, r3
 800037e:	dd0d      	ble.n	800039c <bubble_sort+0x54>
            {
                swap_numbers(&pNumbers[j],&pNumbers[j+1]);
 8000380:	693b      	ldr	r3, [r7, #16]
 8000382:	009b      	lsls	r3, r3, #2
 8000384:	687a      	ldr	r2, [r7, #4]
 8000386:	18d0      	adds	r0, r2, r3
 8000388:	693b      	ldr	r3, [r7, #16]
 800038a:	3301      	adds	r3, #1
 800038c:	009b      	lsls	r3, r3, #2
 800038e:	687a      	ldr	r2, [r7, #4]
 8000390:	4413      	add	r3, r2
 8000392:	4619      	mov	r1, r3
 8000394:	f7ff ffbe 	bl	8000314 <swap_numbers>
                flag=1;
 8000398:	2301      	movs	r3, #1
 800039a:	60fb      	str	r3, [r7, #12]
        for(j=0;j<len-1-i;j++)
 800039c:	693b      	ldr	r3, [r7, #16]
 800039e:	3301      	adds	r3, #1
 80003a0:	613b      	str	r3, [r7, #16]
 80003a2:	697b      	ldr	r3, [r7, #20]
 80003a4:	683a      	ldr	r2, [r7, #0]
 80003a6:	1ad3      	subs	r3, r2, r3
 80003a8:	1e5a      	subs	r2, r3, #1
 80003aa:	693b      	ldr	r3, [r7, #16]
 80003ac:	429a      	cmp	r2, r3
 80003ae:	d8da      	bhi.n	8000366 <bubble_sort+0x1e>
            }
        }

        if(flag==0)
 80003b0:	68fb      	ldr	r3, [r7, #12]
 80003b2:	2b00      	cmp	r3, #0
 80003b4:	d008      	beq.n	80003c8 <bubble_sort+0x80>
    for(i=0;i<len-1;i++)
 80003b6:	697b      	ldr	r3, [r7, #20]
 80003b8:	3301      	adds	r3, #1
 80003ba:	617b      	str	r3, [r7, #20]
 80003bc:	683b      	ldr	r3, [r7, #0]
 80003be:	1e5a      	subs	r2, r3, #1
 80003c0:	697b      	ldr	r3, [r7, #20]
 80003c2:	429a      	cmp	r2, r3
 80003c4:	d8ca      	bhi.n	800035c <bubble_sort+0x14>
            break;
    }
}
 80003c6:	e000      	b.n	80003ca <bubble_sort+0x82>
            break;
 80003c8:	bf00      	nop
}
 80003ca:	bf00      	nop
 80003cc:	3718      	adds	r7, #24
 80003ce:	46bd      	mov	sp, r7
 80003d0:	bd80      	pop	{r7, pc}

080003d2 <insertion_sort>:

void insertion_sort(int *pNumbers , unsigned int len)
{
 80003d2:	b480      	push	{r7}
 80003d4:	b087      	sub	sp, #28
 80003d6:	af00      	add	r7, sp, #0
 80003d8:	6078      	str	r0, [r7, #4]
 80003da:	6039      	str	r1, [r7, #0]

     int i,j,num;

     for(i=1 ; i<len ; i++)
 80003dc:	2301      	movs	r3, #1
 80003de:	617b      	str	r3, [r7, #20]
 80003e0:	e02c      	b.n	800043c <insertion_sort+0x6a>
     {
         j=i-1;
 80003e2:	697b      	ldr	r3, [r7, #20]
 80003e4:	3b01      	subs	r3, #1
 80003e6:	613b      	str	r3, [r7, #16]

         num = pNumbers[i];
 80003e8:	697b      	ldr	r3, [r7, #20]
 80003ea:	009b      	lsls	r3, r3, #2
 80003ec:	687a      	ldr	r2, [r7, #4]
 80003ee:	4413      	add	r3, r2
 80003f0:	681b      	ldr	r3, [r3, #0]
 80003f2:	60fb      	str	r3, [r7, #12]

         while( (j>-1) && (pNumbers[j] > num) )
 80003f4:	e00d      	b.n	8000412 <insertion_sort+0x40>
         {
             pNumbers[j+1] = pNumbers[j];
 80003f6:	693b      	ldr	r3, [r7, #16]
 80003f8:	009b      	lsls	r3, r3, #2
 80003fa:	687a      	ldr	r2, [r7, #4]
 80003fc:	441a      	add	r2, r3
 80003fe:	693b      	ldr	r3, [r7, #16]
 8000400:	3301      	adds	r3, #1
 8000402:	009b      	lsls	r3, r3, #2
 8000404:	6879      	ldr	r1, [r7, #4]
 8000406:	440b      	add	r3, r1
 8000408:	6812      	ldr	r2, [r2, #0]
 800040a:	601a      	str	r2, [r3, #0]
             j--;
 800040c:	693b      	ldr	r3, [r7, #16]
 800040e:	3b01      	subs	r3, #1
 8000410:	613b      	str	r3, [r7, #16]
         while( (j>-1) && (pNumbers[j] > num) )
 8000412:	693b      	ldr	r3, [r7, #16]
 8000414:	2b00      	cmp	r3, #0
 8000416:	db07      	blt.n	8000428 <insertion_sort+0x56>
 8000418:	693b      	ldr	r3, [r7, #16]
 800041a:	009b      	lsls	r3, r3, #2
 800041c:	687a      	ldr	r2, [r7, #4]
 800041e:	4413      	add	r3, r2
 8000420:	681b      	ldr	r3, [r3, #0]
 8000422:	68fa      	ldr	r2, [r7, #12]
 8000424:	429a      	cmp	r2, r3
 8000426:	dbe6      	blt.n	80003f6 <insertion_sort+0x24>
         }

         pNumbers[j+1]=num;
 8000428:	693b      	ldr	r3, [r7, #16]
 800042a:	3301      	adds	r3, #1
 800042c:	009b      	lsls	r3, r3, #2
 800042e:	687a      	ldr	r2, [r7, #4]
 8000430:	4413      	add	r3, r2
 8000432:	68fa      	ldr	r2, [r7, #12]
 8000434:	601a      	str	r2, [r3, #0]
     for(i=1 ; i<len ; i++)
 8000436:	697b      	ldr	r3, [r7, #20]
 8000438:	3301      	adds	r3, #1
 800043a:	617b      	str	r3, [r7, #20]
 800043c:	697b      	ldr	r3, [r7, #20]
 800043e:	683a      	ldr	r2, [r7, #0]
 8000440:	429a      	cmp	r2, r3
 8000442:	d8ce      	bhi.n	80003e2 <insertion_sort+0x10>
     }


}
 8000444:	bf00      	nop
 8000446:	bf00      	nop
 8000448:	371c      	adds	r7, #28
 800044a:	46bd      	mov	sp, r7
 800044c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000450:	4770      	bx	lr
	...

08000454 <main>:



int main()
{
 8000454:	b580      	push	{r7, lr}
 8000456:	b082      	sub	sp, #8
 8000458:	af00      	add	r7, sp, #0

    unsigned int len = sizeof(numbers)/sizeof(int);
 800045a:	2311      	movs	r3, #17
 800045c:	607b      	str	r3, [r7, #4]

    array_fill_numbers(numbers,len);
 800045e:	6879      	ldr	r1, [r7, #4]
 8000460:	4813      	ldr	r0, [pc, #76]	; (80004b0 <main+0x5c>)
 8000462:	f7ff ff05 	bl	8000270 <array_fill_numbers>

    display_numbers(numbers,len,"B-unsorted array :");
 8000466:	4a13      	ldr	r2, [pc, #76]	; (80004b4 <main+0x60>)
 8000468:	6879      	ldr	r1, [r7, #4]
 800046a:	4811      	ldr	r0, [pc, #68]	; (80004b0 <main+0x5c>)
 800046c:	f7ff ff2a 	bl	80002c4 <display_numbers>

    bubble_sort(numbers,len);
 8000470:	6879      	ldr	r1, [r7, #4]
 8000472:	480f      	ldr	r0, [pc, #60]	; (80004b0 <main+0x5c>)
 8000474:	f7ff ff68 	bl	8000348 <bubble_sort>

    display_numbers(numbers,len,"B-sorted array   :");
 8000478:	4a0f      	ldr	r2, [pc, #60]	; (80004b8 <main+0x64>)
 800047a:	6879      	ldr	r1, [r7, #4]
 800047c:	480c      	ldr	r0, [pc, #48]	; (80004b0 <main+0x5c>)
 800047e:	f7ff ff21 	bl	80002c4 <display_numbers>

    array_fill_numbers(numbers,len);
 8000482:	6879      	ldr	r1, [r7, #4]
 8000484:	480a      	ldr	r0, [pc, #40]	; (80004b0 <main+0x5c>)
 8000486:	f7ff fef3 	bl	8000270 <array_fill_numbers>

    display_numbers(numbers,len,"I-unsorted array :");
 800048a:	4a0c      	ldr	r2, [pc, #48]	; (80004bc <main+0x68>)
 800048c:	6879      	ldr	r1, [r7, #4]
 800048e:	4808      	ldr	r0, [pc, #32]	; (80004b0 <main+0x5c>)
 8000490:	f7ff ff18 	bl	80002c4 <display_numbers>

    insertion_sort(numbers,len);
 8000494:	6879      	ldr	r1, [r7, #4]
 8000496:	4806      	ldr	r0, [pc, #24]	; (80004b0 <main+0x5c>)
 8000498:	f7ff ff9b 	bl	80003d2 <insertion_sort>

    display_numbers(numbers,len,"I-sorted array   :");
 800049c:	4a08      	ldr	r2, [pc, #32]	; (80004c0 <main+0x6c>)
 800049e:	6879      	ldr	r1, [r7, #4]
 80004a0:	4803      	ldr	r0, [pc, #12]	; (80004b0 <main+0x5c>)
 80004a2:	f7ff ff0f 	bl	80002c4 <display_numbers>



    return 0;
 80004a6:	2300      	movs	r3, #0
}
 80004a8:	4618      	mov	r0, r3
 80004aa:	3708      	adds	r7, #8
 80004ac:	46bd      	mov	sp, r7
 80004ae:	bd80      	pop	{r7, pc}
 80004b0:	20000000 	.word	0x20000000
 80004b4:	0800181c 	.word	0x0800181c
 80004b8:	08001830 	.word	0x08001830
 80004bc:	08001844 	.word	0x08001844
 80004c0:	08001858 	.word	0x08001858

080004c4 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80004c4:	b480      	push	{r7}
 80004c6:	af00      	add	r7, sp, #0
	return 1;
 80004c8:	2301      	movs	r3, #1
}
 80004ca:	4618      	mov	r0, r3
 80004cc:	46bd      	mov	sp, r7
 80004ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004d2:	4770      	bx	lr

080004d4 <_kill>:

int _kill(int pid, int sig)
{
 80004d4:	b580      	push	{r7, lr}
 80004d6:	b082      	sub	sp, #8
 80004d8:	af00      	add	r7, sp, #0
 80004da:	6078      	str	r0, [r7, #4]
 80004dc:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 80004de:	f000 f8e1 	bl	80006a4 <__errno>
 80004e2:	4603      	mov	r3, r0
 80004e4:	2216      	movs	r2, #22
 80004e6:	601a      	str	r2, [r3, #0]
	return -1;
 80004e8:	f04f 33ff 	mov.w	r3, #4294967295
}
 80004ec:	4618      	mov	r0, r3
 80004ee:	3708      	adds	r7, #8
 80004f0:	46bd      	mov	sp, r7
 80004f2:	bd80      	pop	{r7, pc}

080004f4 <_exit>:

void _exit (int status)
{
 80004f4:	b580      	push	{r7, lr}
 80004f6:	b082      	sub	sp, #8
 80004f8:	af00      	add	r7, sp, #0
 80004fa:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 80004fc:	f04f 31ff 	mov.w	r1, #4294967295
 8000500:	6878      	ldr	r0, [r7, #4]
 8000502:	f7ff ffe7 	bl	80004d4 <_kill>
	while (1) {}		/* Make sure we hang here */
 8000506:	e7fe      	b.n	8000506 <_exit+0x12>

08000508 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000508:	b580      	push	{r7, lr}
 800050a:	b086      	sub	sp, #24
 800050c:	af00      	add	r7, sp, #0
 800050e:	60f8      	str	r0, [r7, #12]
 8000510:	60b9      	str	r1, [r7, #8]
 8000512:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000514:	2300      	movs	r3, #0
 8000516:	617b      	str	r3, [r7, #20]
 8000518:	e00a      	b.n	8000530 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800051a:	f3af 8000 	nop.w
 800051e:	4601      	mov	r1, r0
 8000520:	68bb      	ldr	r3, [r7, #8]
 8000522:	1c5a      	adds	r2, r3, #1
 8000524:	60ba      	str	r2, [r7, #8]
 8000526:	b2ca      	uxtb	r2, r1
 8000528:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800052a:	697b      	ldr	r3, [r7, #20]
 800052c:	3301      	adds	r3, #1
 800052e:	617b      	str	r3, [r7, #20]
 8000530:	697a      	ldr	r2, [r7, #20]
 8000532:	687b      	ldr	r3, [r7, #4]
 8000534:	429a      	cmp	r2, r3
 8000536:	dbf0      	blt.n	800051a <_read+0x12>
	}

return len;
 8000538:	687b      	ldr	r3, [r7, #4]
}
 800053a:	4618      	mov	r0, r3
 800053c:	3718      	adds	r7, #24
 800053e:	46bd      	mov	sp, r7
 8000540:	bd80      	pop	{r7, pc}

08000542 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000542:	b580      	push	{r7, lr}
 8000544:	b086      	sub	sp, #24
 8000546:	af00      	add	r7, sp, #0
 8000548:	60f8      	str	r0, [r7, #12]
 800054a:	60b9      	str	r1, [r7, #8]
 800054c:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800054e:	2300      	movs	r3, #0
 8000550:	617b      	str	r3, [r7, #20]
 8000552:	e009      	b.n	8000568 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8000554:	68bb      	ldr	r3, [r7, #8]
 8000556:	1c5a      	adds	r2, r3, #1
 8000558:	60ba      	str	r2, [r7, #8]
 800055a:	781b      	ldrb	r3, [r3, #0]
 800055c:	4618      	mov	r0, r3
 800055e:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000562:	697b      	ldr	r3, [r7, #20]
 8000564:	3301      	adds	r3, #1
 8000566:	617b      	str	r3, [r7, #20]
 8000568:	697a      	ldr	r2, [r7, #20]
 800056a:	687b      	ldr	r3, [r7, #4]
 800056c:	429a      	cmp	r2, r3
 800056e:	dbf1      	blt.n	8000554 <_write+0x12>
	}
	return len;
 8000570:	687b      	ldr	r3, [r7, #4]
}
 8000572:	4618      	mov	r0, r3
 8000574:	3718      	adds	r7, #24
 8000576:	46bd      	mov	sp, r7
 8000578:	bd80      	pop	{r7, pc}

0800057a <_close>:

int _close(int file)
{
 800057a:	b480      	push	{r7}
 800057c:	b083      	sub	sp, #12
 800057e:	af00      	add	r7, sp, #0
 8000580:	6078      	str	r0, [r7, #4]
	return -1;
 8000582:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000586:	4618      	mov	r0, r3
 8000588:	370c      	adds	r7, #12
 800058a:	46bd      	mov	sp, r7
 800058c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000590:	4770      	bx	lr

08000592 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000592:	b480      	push	{r7}
 8000594:	b083      	sub	sp, #12
 8000596:	af00      	add	r7, sp, #0
 8000598:	6078      	str	r0, [r7, #4]
 800059a:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 800059c:	683b      	ldr	r3, [r7, #0]
 800059e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80005a2:	605a      	str	r2, [r3, #4]
	return 0;
 80005a4:	2300      	movs	r3, #0
}
 80005a6:	4618      	mov	r0, r3
 80005a8:	370c      	adds	r7, #12
 80005aa:	46bd      	mov	sp, r7
 80005ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005b0:	4770      	bx	lr

080005b2 <_isatty>:

int _isatty(int file)
{
 80005b2:	b480      	push	{r7}
 80005b4:	b083      	sub	sp, #12
 80005b6:	af00      	add	r7, sp, #0
 80005b8:	6078      	str	r0, [r7, #4]
	return 1;
 80005ba:	2301      	movs	r3, #1
}
 80005bc:	4618      	mov	r0, r3
 80005be:	370c      	adds	r7, #12
 80005c0:	46bd      	mov	sp, r7
 80005c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005c6:	4770      	bx	lr

080005c8 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80005c8:	b480      	push	{r7}
 80005ca:	b085      	sub	sp, #20
 80005cc:	af00      	add	r7, sp, #0
 80005ce:	60f8      	str	r0, [r7, #12]
 80005d0:	60b9      	str	r1, [r7, #8]
 80005d2:	607a      	str	r2, [r7, #4]
	return 0;
 80005d4:	2300      	movs	r3, #0
}
 80005d6:	4618      	mov	r0, r3
 80005d8:	3714      	adds	r7, #20
 80005da:	46bd      	mov	sp, r7
 80005dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005e0:	4770      	bx	lr
	...

080005e4 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80005e4:	b580      	push	{r7, lr}
 80005e6:	b086      	sub	sp, #24
 80005e8:	af00      	add	r7, sp, #0
 80005ea:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80005ec:	4a14      	ldr	r2, [pc, #80]	; (8000640 <_sbrk+0x5c>)
 80005ee:	4b15      	ldr	r3, [pc, #84]	; (8000644 <_sbrk+0x60>)
 80005f0:	1ad3      	subs	r3, r2, r3
 80005f2:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80005f4:	697b      	ldr	r3, [r7, #20]
 80005f6:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80005f8:	4b13      	ldr	r3, [pc, #76]	; (8000648 <_sbrk+0x64>)
 80005fa:	681b      	ldr	r3, [r3, #0]
 80005fc:	2b00      	cmp	r3, #0
 80005fe:	d102      	bne.n	8000606 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000600:	4b11      	ldr	r3, [pc, #68]	; (8000648 <_sbrk+0x64>)
 8000602:	4a12      	ldr	r2, [pc, #72]	; (800064c <_sbrk+0x68>)
 8000604:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000606:	4b10      	ldr	r3, [pc, #64]	; (8000648 <_sbrk+0x64>)
 8000608:	681a      	ldr	r2, [r3, #0]
 800060a:	687b      	ldr	r3, [r7, #4]
 800060c:	4413      	add	r3, r2
 800060e:	693a      	ldr	r2, [r7, #16]
 8000610:	429a      	cmp	r2, r3
 8000612:	d207      	bcs.n	8000624 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000614:	f000 f846 	bl	80006a4 <__errno>
 8000618:	4603      	mov	r3, r0
 800061a:	220c      	movs	r2, #12
 800061c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800061e:	f04f 33ff 	mov.w	r3, #4294967295
 8000622:	e009      	b.n	8000638 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000624:	4b08      	ldr	r3, [pc, #32]	; (8000648 <_sbrk+0x64>)
 8000626:	681b      	ldr	r3, [r3, #0]
 8000628:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800062a:	4b07      	ldr	r3, [pc, #28]	; (8000648 <_sbrk+0x64>)
 800062c:	681a      	ldr	r2, [r3, #0]
 800062e:	687b      	ldr	r3, [r7, #4]
 8000630:	4413      	add	r3, r2
 8000632:	4a05      	ldr	r2, [pc, #20]	; (8000648 <_sbrk+0x64>)
 8000634:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000636:	68fb      	ldr	r3, [r7, #12]
}
 8000638:	4618      	mov	r0, r3
 800063a:	3718      	adds	r7, #24
 800063c:	46bd      	mov	sp, r7
 800063e:	bd80      	pop	{r7, pc}
 8000640:	20004000 	.word	0x20004000
 8000644:	00000400 	.word	0x00000400
 8000648:	200000c8 	.word	0x200000c8
 800064c:	200000e8 	.word	0x200000e8

08000650 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000650:	480d      	ldr	r0, [pc, #52]	; (8000688 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000652:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000654:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000658:	480c      	ldr	r0, [pc, #48]	; (800068c <LoopForever+0x6>)
  ldr r1, =_edata
 800065a:	490d      	ldr	r1, [pc, #52]	; (8000690 <LoopForever+0xa>)
  ldr r2, =_sidata
 800065c:	4a0d      	ldr	r2, [pc, #52]	; (8000694 <LoopForever+0xe>)
  movs r3, #0
 800065e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000660:	e002      	b.n	8000668 <LoopCopyDataInit>

08000662 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000662:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000664:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000666:	3304      	adds	r3, #4

08000668 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000668:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800066a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800066c:	d3f9      	bcc.n	8000662 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800066e:	4a0a      	ldr	r2, [pc, #40]	; (8000698 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000670:	4c0a      	ldr	r4, [pc, #40]	; (800069c <LoopForever+0x16>)
  movs r3, #0
 8000672:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000674:	e001      	b.n	800067a <LoopFillZerobss>

08000676 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000676:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000678:	3204      	adds	r2, #4

0800067a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800067a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800067c:	d3fb      	bcc.n	8000676 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800067e:	f000 f817 	bl	80006b0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000682:	f7ff fee7 	bl	8000454 <main>

08000686 <LoopForever>:

LoopForever:
    b LoopForever
 8000686:	e7fe      	b.n	8000686 <LoopForever>
  ldr   r0, =_estack
 8000688:	20004000 	.word	0x20004000
  ldr r0, =_sdata
 800068c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000690:	200000ac 	.word	0x200000ac
  ldr r2, =_sidata
 8000694:	080019c0 	.word	0x080019c0
  ldr r2, =_sbss
 8000698:	200000ac 	.word	0x200000ac
  ldr r4, =_ebss
 800069c:	200000e4 	.word	0x200000e4

080006a0 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80006a0:	e7fe      	b.n	80006a0 <ADC1_2_IRQHandler>
	...

080006a4 <__errno>:
 80006a4:	4b01      	ldr	r3, [pc, #4]	; (80006ac <__errno+0x8>)
 80006a6:	6818      	ldr	r0, [r3, #0]
 80006a8:	4770      	bx	lr
 80006aa:	bf00      	nop
 80006ac:	20000048 	.word	0x20000048

080006b0 <__libc_init_array>:
 80006b0:	b570      	push	{r4, r5, r6, lr}
 80006b2:	4d0d      	ldr	r5, [pc, #52]	; (80006e8 <__libc_init_array+0x38>)
 80006b4:	4c0d      	ldr	r4, [pc, #52]	; (80006ec <__libc_init_array+0x3c>)
 80006b6:	1b64      	subs	r4, r4, r5
 80006b8:	10a4      	asrs	r4, r4, #2
 80006ba:	2600      	movs	r6, #0
 80006bc:	42a6      	cmp	r6, r4
 80006be:	d109      	bne.n	80006d4 <__libc_init_array+0x24>
 80006c0:	4d0b      	ldr	r5, [pc, #44]	; (80006f0 <__libc_init_array+0x40>)
 80006c2:	4c0c      	ldr	r4, [pc, #48]	; (80006f4 <__libc_init_array+0x44>)
 80006c4:	f001 f898 	bl	80017f8 <_init>
 80006c8:	1b64      	subs	r4, r4, r5
 80006ca:	10a4      	asrs	r4, r4, #2
 80006cc:	2600      	movs	r6, #0
 80006ce:	42a6      	cmp	r6, r4
 80006d0:	d105      	bne.n	80006de <__libc_init_array+0x2e>
 80006d2:	bd70      	pop	{r4, r5, r6, pc}
 80006d4:	f855 3b04 	ldr.w	r3, [r5], #4
 80006d8:	4798      	blx	r3
 80006da:	3601      	adds	r6, #1
 80006dc:	e7ee      	b.n	80006bc <__libc_init_array+0xc>
 80006de:	f855 3b04 	ldr.w	r3, [r5], #4
 80006e2:	4798      	blx	r3
 80006e4:	3601      	adds	r6, #1
 80006e6:	e7f2      	b.n	80006ce <__libc_init_array+0x1e>
 80006e8:	080019b8 	.word	0x080019b8
 80006ec:	080019b8 	.word	0x080019b8
 80006f0:	080019b8 	.word	0x080019b8
 80006f4:	080019bc 	.word	0x080019bc

080006f8 <memset>:
 80006f8:	4402      	add	r2, r0
 80006fa:	4603      	mov	r3, r0
 80006fc:	4293      	cmp	r3, r2
 80006fe:	d100      	bne.n	8000702 <memset+0xa>
 8000700:	4770      	bx	lr
 8000702:	f803 1b01 	strb.w	r1, [r3], #1
 8000706:	e7f9      	b.n	80006fc <memset+0x4>

08000708 <iprintf>:
 8000708:	b40f      	push	{r0, r1, r2, r3}
 800070a:	4b0a      	ldr	r3, [pc, #40]	; (8000734 <iprintf+0x2c>)
 800070c:	b513      	push	{r0, r1, r4, lr}
 800070e:	681c      	ldr	r4, [r3, #0]
 8000710:	b124      	cbz	r4, 800071c <iprintf+0x14>
 8000712:	69a3      	ldr	r3, [r4, #24]
 8000714:	b913      	cbnz	r3, 800071c <iprintf+0x14>
 8000716:	4620      	mov	r0, r4
 8000718:	f000 f8da 	bl	80008d0 <__sinit>
 800071c:	ab05      	add	r3, sp, #20
 800071e:	9a04      	ldr	r2, [sp, #16]
 8000720:	68a1      	ldr	r1, [r4, #8]
 8000722:	9301      	str	r3, [sp, #4]
 8000724:	4620      	mov	r0, r4
 8000726:	f000 fa61 	bl	8000bec <_vfiprintf_r>
 800072a:	b002      	add	sp, #8
 800072c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000730:	b004      	add	sp, #16
 8000732:	4770      	bx	lr
 8000734:	20000048 	.word	0x20000048

08000738 <putchar>:
 8000738:	4b09      	ldr	r3, [pc, #36]	; (8000760 <putchar+0x28>)
 800073a:	b513      	push	{r0, r1, r4, lr}
 800073c:	681c      	ldr	r4, [r3, #0]
 800073e:	4601      	mov	r1, r0
 8000740:	b134      	cbz	r4, 8000750 <putchar+0x18>
 8000742:	69a3      	ldr	r3, [r4, #24]
 8000744:	b923      	cbnz	r3, 8000750 <putchar+0x18>
 8000746:	9001      	str	r0, [sp, #4]
 8000748:	4620      	mov	r0, r4
 800074a:	f000 f8c1 	bl	80008d0 <__sinit>
 800074e:	9901      	ldr	r1, [sp, #4]
 8000750:	68a2      	ldr	r2, [r4, #8]
 8000752:	4620      	mov	r0, r4
 8000754:	b002      	add	sp, #8
 8000756:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800075a:	f000 bd0b 	b.w	8001174 <_putc_r>
 800075e:	bf00      	nop
 8000760:	20000048 	.word	0x20000048

08000764 <rand>:
 8000764:	4b17      	ldr	r3, [pc, #92]	; (80007c4 <rand+0x60>)
 8000766:	b510      	push	{r4, lr}
 8000768:	681c      	ldr	r4, [r3, #0]
 800076a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800076c:	b9b3      	cbnz	r3, 800079c <rand+0x38>
 800076e:	2018      	movs	r0, #24
 8000770:	f000 f960 	bl	8000a34 <malloc>
 8000774:	63a0      	str	r0, [r4, #56]	; 0x38
 8000776:	b928      	cbnz	r0, 8000784 <rand+0x20>
 8000778:	4602      	mov	r2, r0
 800077a:	4b13      	ldr	r3, [pc, #76]	; (80007c8 <rand+0x64>)
 800077c:	4813      	ldr	r0, [pc, #76]	; (80007cc <rand+0x68>)
 800077e:	214e      	movs	r1, #78	; 0x4e
 8000780:	f000 f830 	bl	80007e4 <__assert_func>
 8000784:	4a12      	ldr	r2, [pc, #72]	; (80007d0 <rand+0x6c>)
 8000786:	4b13      	ldr	r3, [pc, #76]	; (80007d4 <rand+0x70>)
 8000788:	e9c0 2300 	strd	r2, r3, [r0]
 800078c:	4b12      	ldr	r3, [pc, #72]	; (80007d8 <rand+0x74>)
 800078e:	6083      	str	r3, [r0, #8]
 8000790:	230b      	movs	r3, #11
 8000792:	8183      	strh	r3, [r0, #12]
 8000794:	2201      	movs	r2, #1
 8000796:	2300      	movs	r3, #0
 8000798:	e9c0 2304 	strd	r2, r3, [r0, #16]
 800079c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800079e:	480f      	ldr	r0, [pc, #60]	; (80007dc <rand+0x78>)
 80007a0:	690a      	ldr	r2, [r1, #16]
 80007a2:	694b      	ldr	r3, [r1, #20]
 80007a4:	4c0e      	ldr	r4, [pc, #56]	; (80007e0 <rand+0x7c>)
 80007a6:	4350      	muls	r0, r2
 80007a8:	fb04 0003 	mla	r0, r4, r3, r0
 80007ac:	fba2 3404 	umull	r3, r4, r2, r4
 80007b0:	1c5a      	adds	r2, r3, #1
 80007b2:	4404      	add	r4, r0
 80007b4:	f144 0000 	adc.w	r0, r4, #0
 80007b8:	e9c1 2004 	strd	r2, r0, [r1, #16]
 80007bc:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 80007c0:	bd10      	pop	{r4, pc}
 80007c2:	bf00      	nop
 80007c4:	20000048 	.word	0x20000048
 80007c8:	08001870 	.word	0x08001870
 80007cc:	08001887 	.word	0x08001887
 80007d0:	abcd330e 	.word	0xabcd330e
 80007d4:	e66d1234 	.word	0xe66d1234
 80007d8:	0005deec 	.word	0x0005deec
 80007dc:	5851f42d 	.word	0x5851f42d
 80007e0:	4c957f2d 	.word	0x4c957f2d

080007e4 <__assert_func>:
 80007e4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80007e6:	4614      	mov	r4, r2
 80007e8:	461a      	mov	r2, r3
 80007ea:	4b09      	ldr	r3, [pc, #36]	; (8000810 <__assert_func+0x2c>)
 80007ec:	681b      	ldr	r3, [r3, #0]
 80007ee:	4605      	mov	r5, r0
 80007f0:	68d8      	ldr	r0, [r3, #12]
 80007f2:	b14c      	cbz	r4, 8000808 <__assert_func+0x24>
 80007f4:	4b07      	ldr	r3, [pc, #28]	; (8000814 <__assert_func+0x30>)
 80007f6:	9100      	str	r1, [sp, #0]
 80007f8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80007fc:	4906      	ldr	r1, [pc, #24]	; (8000818 <__assert_func+0x34>)
 80007fe:	462b      	mov	r3, r5
 8000800:	f000 f8e4 	bl	80009cc <fiprintf>
 8000804:	f000 fe24 	bl	8001450 <abort>
 8000808:	4b04      	ldr	r3, [pc, #16]	; (800081c <__assert_func+0x38>)
 800080a:	461c      	mov	r4, r3
 800080c:	e7f3      	b.n	80007f6 <__assert_func+0x12>
 800080e:	bf00      	nop
 8000810:	20000048 	.word	0x20000048
 8000814:	080018e6 	.word	0x080018e6
 8000818:	080018f3 	.word	0x080018f3
 800081c:	08001921 	.word	0x08001921

08000820 <std>:
 8000820:	2300      	movs	r3, #0
 8000822:	b510      	push	{r4, lr}
 8000824:	4604      	mov	r4, r0
 8000826:	e9c0 3300 	strd	r3, r3, [r0]
 800082a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800082e:	6083      	str	r3, [r0, #8]
 8000830:	8181      	strh	r1, [r0, #12]
 8000832:	6643      	str	r3, [r0, #100]	; 0x64
 8000834:	81c2      	strh	r2, [r0, #14]
 8000836:	6183      	str	r3, [r0, #24]
 8000838:	4619      	mov	r1, r3
 800083a:	2208      	movs	r2, #8
 800083c:	305c      	adds	r0, #92	; 0x5c
 800083e:	f7ff ff5b 	bl	80006f8 <memset>
 8000842:	4b05      	ldr	r3, [pc, #20]	; (8000858 <std+0x38>)
 8000844:	6263      	str	r3, [r4, #36]	; 0x24
 8000846:	4b05      	ldr	r3, [pc, #20]	; (800085c <std+0x3c>)
 8000848:	62a3      	str	r3, [r4, #40]	; 0x28
 800084a:	4b05      	ldr	r3, [pc, #20]	; (8000860 <std+0x40>)
 800084c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800084e:	4b05      	ldr	r3, [pc, #20]	; (8000864 <std+0x44>)
 8000850:	6224      	str	r4, [r4, #32]
 8000852:	6323      	str	r3, [r4, #48]	; 0x30
 8000854:	bd10      	pop	{r4, pc}
 8000856:	bf00      	nop
 8000858:	08001225 	.word	0x08001225
 800085c:	08001247 	.word	0x08001247
 8000860:	0800127f 	.word	0x0800127f
 8000864:	080012a3 	.word	0x080012a3

08000868 <_cleanup_r>:
 8000868:	4901      	ldr	r1, [pc, #4]	; (8000870 <_cleanup_r+0x8>)
 800086a:	f000 b8c1 	b.w	80009f0 <_fwalk_reent>
 800086e:	bf00      	nop
 8000870:	0800158d 	.word	0x0800158d

08000874 <__sfmoreglue>:
 8000874:	b570      	push	{r4, r5, r6, lr}
 8000876:	1e4a      	subs	r2, r1, #1
 8000878:	2568      	movs	r5, #104	; 0x68
 800087a:	4355      	muls	r5, r2
 800087c:	460e      	mov	r6, r1
 800087e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000882:	f000 f92f 	bl	8000ae4 <_malloc_r>
 8000886:	4604      	mov	r4, r0
 8000888:	b140      	cbz	r0, 800089c <__sfmoreglue+0x28>
 800088a:	2100      	movs	r1, #0
 800088c:	e9c0 1600 	strd	r1, r6, [r0]
 8000890:	300c      	adds	r0, #12
 8000892:	60a0      	str	r0, [r4, #8]
 8000894:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000898:	f7ff ff2e 	bl	80006f8 <memset>
 800089c:	4620      	mov	r0, r4
 800089e:	bd70      	pop	{r4, r5, r6, pc}

080008a0 <__sfp_lock_acquire>:
 80008a0:	4801      	ldr	r0, [pc, #4]	; (80008a8 <__sfp_lock_acquire+0x8>)
 80008a2:	f000 b8c5 	b.w	8000a30 <__retarget_lock_acquire_recursive>
 80008a6:	bf00      	nop
 80008a8:	200000dc 	.word	0x200000dc

080008ac <__sfp_lock_release>:
 80008ac:	4801      	ldr	r0, [pc, #4]	; (80008b4 <__sfp_lock_release+0x8>)
 80008ae:	f000 b8c0 	b.w	8000a32 <__retarget_lock_release_recursive>
 80008b2:	bf00      	nop
 80008b4:	200000dc 	.word	0x200000dc

080008b8 <__sinit_lock_acquire>:
 80008b8:	4801      	ldr	r0, [pc, #4]	; (80008c0 <__sinit_lock_acquire+0x8>)
 80008ba:	f000 b8b9 	b.w	8000a30 <__retarget_lock_acquire_recursive>
 80008be:	bf00      	nop
 80008c0:	200000d7 	.word	0x200000d7

080008c4 <__sinit_lock_release>:
 80008c4:	4801      	ldr	r0, [pc, #4]	; (80008cc <__sinit_lock_release+0x8>)
 80008c6:	f000 b8b4 	b.w	8000a32 <__retarget_lock_release_recursive>
 80008ca:	bf00      	nop
 80008cc:	200000d7 	.word	0x200000d7

080008d0 <__sinit>:
 80008d0:	b510      	push	{r4, lr}
 80008d2:	4604      	mov	r4, r0
 80008d4:	f7ff fff0 	bl	80008b8 <__sinit_lock_acquire>
 80008d8:	69a3      	ldr	r3, [r4, #24]
 80008da:	b11b      	cbz	r3, 80008e4 <__sinit+0x14>
 80008dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80008e0:	f7ff bff0 	b.w	80008c4 <__sinit_lock_release>
 80008e4:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80008e8:	6523      	str	r3, [r4, #80]	; 0x50
 80008ea:	4b13      	ldr	r3, [pc, #76]	; (8000938 <__sinit+0x68>)
 80008ec:	4a13      	ldr	r2, [pc, #76]	; (800093c <__sinit+0x6c>)
 80008ee:	681b      	ldr	r3, [r3, #0]
 80008f0:	62a2      	str	r2, [r4, #40]	; 0x28
 80008f2:	42a3      	cmp	r3, r4
 80008f4:	bf04      	itt	eq
 80008f6:	2301      	moveq	r3, #1
 80008f8:	61a3      	streq	r3, [r4, #24]
 80008fa:	4620      	mov	r0, r4
 80008fc:	f000 f820 	bl	8000940 <__sfp>
 8000900:	6060      	str	r0, [r4, #4]
 8000902:	4620      	mov	r0, r4
 8000904:	f000 f81c 	bl	8000940 <__sfp>
 8000908:	60a0      	str	r0, [r4, #8]
 800090a:	4620      	mov	r0, r4
 800090c:	f000 f818 	bl	8000940 <__sfp>
 8000910:	2200      	movs	r2, #0
 8000912:	60e0      	str	r0, [r4, #12]
 8000914:	2104      	movs	r1, #4
 8000916:	6860      	ldr	r0, [r4, #4]
 8000918:	f7ff ff82 	bl	8000820 <std>
 800091c:	68a0      	ldr	r0, [r4, #8]
 800091e:	2201      	movs	r2, #1
 8000920:	2109      	movs	r1, #9
 8000922:	f7ff ff7d 	bl	8000820 <std>
 8000926:	68e0      	ldr	r0, [r4, #12]
 8000928:	2202      	movs	r2, #2
 800092a:	2112      	movs	r1, #18
 800092c:	f7ff ff78 	bl	8000820 <std>
 8000930:	2301      	movs	r3, #1
 8000932:	61a3      	str	r3, [r4, #24]
 8000934:	e7d2      	b.n	80008dc <__sinit+0xc>
 8000936:	bf00      	nop
 8000938:	0800186c 	.word	0x0800186c
 800093c:	08000869 	.word	0x08000869

08000940 <__sfp>:
 8000940:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000942:	4607      	mov	r7, r0
 8000944:	f7ff ffac 	bl	80008a0 <__sfp_lock_acquire>
 8000948:	4b1e      	ldr	r3, [pc, #120]	; (80009c4 <__sfp+0x84>)
 800094a:	681e      	ldr	r6, [r3, #0]
 800094c:	69b3      	ldr	r3, [r6, #24]
 800094e:	b913      	cbnz	r3, 8000956 <__sfp+0x16>
 8000950:	4630      	mov	r0, r6
 8000952:	f7ff ffbd 	bl	80008d0 <__sinit>
 8000956:	3648      	adds	r6, #72	; 0x48
 8000958:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800095c:	3b01      	subs	r3, #1
 800095e:	d503      	bpl.n	8000968 <__sfp+0x28>
 8000960:	6833      	ldr	r3, [r6, #0]
 8000962:	b30b      	cbz	r3, 80009a8 <__sfp+0x68>
 8000964:	6836      	ldr	r6, [r6, #0]
 8000966:	e7f7      	b.n	8000958 <__sfp+0x18>
 8000968:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800096c:	b9d5      	cbnz	r5, 80009a4 <__sfp+0x64>
 800096e:	4b16      	ldr	r3, [pc, #88]	; (80009c8 <__sfp+0x88>)
 8000970:	60e3      	str	r3, [r4, #12]
 8000972:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000976:	6665      	str	r5, [r4, #100]	; 0x64
 8000978:	f000 f859 	bl	8000a2e <__retarget_lock_init_recursive>
 800097c:	f7ff ff96 	bl	80008ac <__sfp_lock_release>
 8000980:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000984:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000988:	6025      	str	r5, [r4, #0]
 800098a:	61a5      	str	r5, [r4, #24]
 800098c:	2208      	movs	r2, #8
 800098e:	4629      	mov	r1, r5
 8000990:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000994:	f7ff feb0 	bl	80006f8 <memset>
 8000998:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800099c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80009a0:	4620      	mov	r0, r4
 80009a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80009a4:	3468      	adds	r4, #104	; 0x68
 80009a6:	e7d9      	b.n	800095c <__sfp+0x1c>
 80009a8:	2104      	movs	r1, #4
 80009aa:	4638      	mov	r0, r7
 80009ac:	f7ff ff62 	bl	8000874 <__sfmoreglue>
 80009b0:	4604      	mov	r4, r0
 80009b2:	6030      	str	r0, [r6, #0]
 80009b4:	2800      	cmp	r0, #0
 80009b6:	d1d5      	bne.n	8000964 <__sfp+0x24>
 80009b8:	f7ff ff78 	bl	80008ac <__sfp_lock_release>
 80009bc:	230c      	movs	r3, #12
 80009be:	603b      	str	r3, [r7, #0]
 80009c0:	e7ee      	b.n	80009a0 <__sfp+0x60>
 80009c2:	bf00      	nop
 80009c4:	0800186c 	.word	0x0800186c
 80009c8:	ffff0001 	.word	0xffff0001

080009cc <fiprintf>:
 80009cc:	b40e      	push	{r1, r2, r3}
 80009ce:	b503      	push	{r0, r1, lr}
 80009d0:	4601      	mov	r1, r0
 80009d2:	ab03      	add	r3, sp, #12
 80009d4:	4805      	ldr	r0, [pc, #20]	; (80009ec <fiprintf+0x20>)
 80009d6:	f853 2b04 	ldr.w	r2, [r3], #4
 80009da:	6800      	ldr	r0, [r0, #0]
 80009dc:	9301      	str	r3, [sp, #4]
 80009de:	f000 f905 	bl	8000bec <_vfiprintf_r>
 80009e2:	b002      	add	sp, #8
 80009e4:	f85d eb04 	ldr.w	lr, [sp], #4
 80009e8:	b003      	add	sp, #12
 80009ea:	4770      	bx	lr
 80009ec:	20000048 	.word	0x20000048

080009f0 <_fwalk_reent>:
 80009f0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80009f4:	4606      	mov	r6, r0
 80009f6:	4688      	mov	r8, r1
 80009f8:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80009fc:	2700      	movs	r7, #0
 80009fe:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000a02:	f1b9 0901 	subs.w	r9, r9, #1
 8000a06:	d505      	bpl.n	8000a14 <_fwalk_reent+0x24>
 8000a08:	6824      	ldr	r4, [r4, #0]
 8000a0a:	2c00      	cmp	r4, #0
 8000a0c:	d1f7      	bne.n	80009fe <_fwalk_reent+0xe>
 8000a0e:	4638      	mov	r0, r7
 8000a10:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000a14:	89ab      	ldrh	r3, [r5, #12]
 8000a16:	2b01      	cmp	r3, #1
 8000a18:	d907      	bls.n	8000a2a <_fwalk_reent+0x3a>
 8000a1a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000a1e:	3301      	adds	r3, #1
 8000a20:	d003      	beq.n	8000a2a <_fwalk_reent+0x3a>
 8000a22:	4629      	mov	r1, r5
 8000a24:	4630      	mov	r0, r6
 8000a26:	47c0      	blx	r8
 8000a28:	4307      	orrs	r7, r0
 8000a2a:	3568      	adds	r5, #104	; 0x68
 8000a2c:	e7e9      	b.n	8000a02 <_fwalk_reent+0x12>

08000a2e <__retarget_lock_init_recursive>:
 8000a2e:	4770      	bx	lr

08000a30 <__retarget_lock_acquire_recursive>:
 8000a30:	4770      	bx	lr

08000a32 <__retarget_lock_release_recursive>:
 8000a32:	4770      	bx	lr

08000a34 <malloc>:
 8000a34:	4b02      	ldr	r3, [pc, #8]	; (8000a40 <malloc+0xc>)
 8000a36:	4601      	mov	r1, r0
 8000a38:	6818      	ldr	r0, [r3, #0]
 8000a3a:	f000 b853 	b.w	8000ae4 <_malloc_r>
 8000a3e:	bf00      	nop
 8000a40:	20000048 	.word	0x20000048

08000a44 <_free_r>:
 8000a44:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000a46:	2900      	cmp	r1, #0
 8000a48:	d048      	beq.n	8000adc <_free_r+0x98>
 8000a4a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000a4e:	9001      	str	r0, [sp, #4]
 8000a50:	2b00      	cmp	r3, #0
 8000a52:	f1a1 0404 	sub.w	r4, r1, #4
 8000a56:	bfb8      	it	lt
 8000a58:	18e4      	addlt	r4, r4, r3
 8000a5a:	f000 fe49 	bl	80016f0 <__malloc_lock>
 8000a5e:	4a20      	ldr	r2, [pc, #128]	; (8000ae0 <_free_r+0x9c>)
 8000a60:	9801      	ldr	r0, [sp, #4]
 8000a62:	6813      	ldr	r3, [r2, #0]
 8000a64:	4615      	mov	r5, r2
 8000a66:	b933      	cbnz	r3, 8000a76 <_free_r+0x32>
 8000a68:	6063      	str	r3, [r4, #4]
 8000a6a:	6014      	str	r4, [r2, #0]
 8000a6c:	b003      	add	sp, #12
 8000a6e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000a72:	f000 be43 	b.w	80016fc <__malloc_unlock>
 8000a76:	42a3      	cmp	r3, r4
 8000a78:	d90b      	bls.n	8000a92 <_free_r+0x4e>
 8000a7a:	6821      	ldr	r1, [r4, #0]
 8000a7c:	1862      	adds	r2, r4, r1
 8000a7e:	4293      	cmp	r3, r2
 8000a80:	bf04      	itt	eq
 8000a82:	681a      	ldreq	r2, [r3, #0]
 8000a84:	685b      	ldreq	r3, [r3, #4]
 8000a86:	6063      	str	r3, [r4, #4]
 8000a88:	bf04      	itt	eq
 8000a8a:	1852      	addeq	r2, r2, r1
 8000a8c:	6022      	streq	r2, [r4, #0]
 8000a8e:	602c      	str	r4, [r5, #0]
 8000a90:	e7ec      	b.n	8000a6c <_free_r+0x28>
 8000a92:	461a      	mov	r2, r3
 8000a94:	685b      	ldr	r3, [r3, #4]
 8000a96:	b10b      	cbz	r3, 8000a9c <_free_r+0x58>
 8000a98:	42a3      	cmp	r3, r4
 8000a9a:	d9fa      	bls.n	8000a92 <_free_r+0x4e>
 8000a9c:	6811      	ldr	r1, [r2, #0]
 8000a9e:	1855      	adds	r5, r2, r1
 8000aa0:	42a5      	cmp	r5, r4
 8000aa2:	d10b      	bne.n	8000abc <_free_r+0x78>
 8000aa4:	6824      	ldr	r4, [r4, #0]
 8000aa6:	4421      	add	r1, r4
 8000aa8:	1854      	adds	r4, r2, r1
 8000aaa:	42a3      	cmp	r3, r4
 8000aac:	6011      	str	r1, [r2, #0]
 8000aae:	d1dd      	bne.n	8000a6c <_free_r+0x28>
 8000ab0:	681c      	ldr	r4, [r3, #0]
 8000ab2:	685b      	ldr	r3, [r3, #4]
 8000ab4:	6053      	str	r3, [r2, #4]
 8000ab6:	4421      	add	r1, r4
 8000ab8:	6011      	str	r1, [r2, #0]
 8000aba:	e7d7      	b.n	8000a6c <_free_r+0x28>
 8000abc:	d902      	bls.n	8000ac4 <_free_r+0x80>
 8000abe:	230c      	movs	r3, #12
 8000ac0:	6003      	str	r3, [r0, #0]
 8000ac2:	e7d3      	b.n	8000a6c <_free_r+0x28>
 8000ac4:	6825      	ldr	r5, [r4, #0]
 8000ac6:	1961      	adds	r1, r4, r5
 8000ac8:	428b      	cmp	r3, r1
 8000aca:	bf04      	itt	eq
 8000acc:	6819      	ldreq	r1, [r3, #0]
 8000ace:	685b      	ldreq	r3, [r3, #4]
 8000ad0:	6063      	str	r3, [r4, #4]
 8000ad2:	bf04      	itt	eq
 8000ad4:	1949      	addeq	r1, r1, r5
 8000ad6:	6021      	streq	r1, [r4, #0]
 8000ad8:	6054      	str	r4, [r2, #4]
 8000ada:	e7c7      	b.n	8000a6c <_free_r+0x28>
 8000adc:	b003      	add	sp, #12
 8000ade:	bd30      	pop	{r4, r5, pc}
 8000ae0:	200000cc 	.word	0x200000cc

08000ae4 <_malloc_r>:
 8000ae4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ae6:	1ccd      	adds	r5, r1, #3
 8000ae8:	f025 0503 	bic.w	r5, r5, #3
 8000aec:	3508      	adds	r5, #8
 8000aee:	2d0c      	cmp	r5, #12
 8000af0:	bf38      	it	cc
 8000af2:	250c      	movcc	r5, #12
 8000af4:	2d00      	cmp	r5, #0
 8000af6:	4606      	mov	r6, r0
 8000af8:	db01      	blt.n	8000afe <_malloc_r+0x1a>
 8000afa:	42a9      	cmp	r1, r5
 8000afc:	d903      	bls.n	8000b06 <_malloc_r+0x22>
 8000afe:	230c      	movs	r3, #12
 8000b00:	6033      	str	r3, [r6, #0]
 8000b02:	2000      	movs	r0, #0
 8000b04:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000b06:	f000 fdf3 	bl	80016f0 <__malloc_lock>
 8000b0a:	4921      	ldr	r1, [pc, #132]	; (8000b90 <_malloc_r+0xac>)
 8000b0c:	680a      	ldr	r2, [r1, #0]
 8000b0e:	4614      	mov	r4, r2
 8000b10:	b99c      	cbnz	r4, 8000b3a <_malloc_r+0x56>
 8000b12:	4f20      	ldr	r7, [pc, #128]	; (8000b94 <_malloc_r+0xb0>)
 8000b14:	683b      	ldr	r3, [r7, #0]
 8000b16:	b923      	cbnz	r3, 8000b22 <_malloc_r+0x3e>
 8000b18:	4621      	mov	r1, r4
 8000b1a:	4630      	mov	r0, r6
 8000b1c:	f000 fb72 	bl	8001204 <_sbrk_r>
 8000b20:	6038      	str	r0, [r7, #0]
 8000b22:	4629      	mov	r1, r5
 8000b24:	4630      	mov	r0, r6
 8000b26:	f000 fb6d 	bl	8001204 <_sbrk_r>
 8000b2a:	1c43      	adds	r3, r0, #1
 8000b2c:	d123      	bne.n	8000b76 <_malloc_r+0x92>
 8000b2e:	230c      	movs	r3, #12
 8000b30:	6033      	str	r3, [r6, #0]
 8000b32:	4630      	mov	r0, r6
 8000b34:	f000 fde2 	bl	80016fc <__malloc_unlock>
 8000b38:	e7e3      	b.n	8000b02 <_malloc_r+0x1e>
 8000b3a:	6823      	ldr	r3, [r4, #0]
 8000b3c:	1b5b      	subs	r3, r3, r5
 8000b3e:	d417      	bmi.n	8000b70 <_malloc_r+0x8c>
 8000b40:	2b0b      	cmp	r3, #11
 8000b42:	d903      	bls.n	8000b4c <_malloc_r+0x68>
 8000b44:	6023      	str	r3, [r4, #0]
 8000b46:	441c      	add	r4, r3
 8000b48:	6025      	str	r5, [r4, #0]
 8000b4a:	e004      	b.n	8000b56 <_malloc_r+0x72>
 8000b4c:	6863      	ldr	r3, [r4, #4]
 8000b4e:	42a2      	cmp	r2, r4
 8000b50:	bf0c      	ite	eq
 8000b52:	600b      	streq	r3, [r1, #0]
 8000b54:	6053      	strne	r3, [r2, #4]
 8000b56:	4630      	mov	r0, r6
 8000b58:	f000 fdd0 	bl	80016fc <__malloc_unlock>
 8000b5c:	f104 000b 	add.w	r0, r4, #11
 8000b60:	1d23      	adds	r3, r4, #4
 8000b62:	f020 0007 	bic.w	r0, r0, #7
 8000b66:	1ac2      	subs	r2, r0, r3
 8000b68:	d0cc      	beq.n	8000b04 <_malloc_r+0x20>
 8000b6a:	1a1b      	subs	r3, r3, r0
 8000b6c:	50a3      	str	r3, [r4, r2]
 8000b6e:	e7c9      	b.n	8000b04 <_malloc_r+0x20>
 8000b70:	4622      	mov	r2, r4
 8000b72:	6864      	ldr	r4, [r4, #4]
 8000b74:	e7cc      	b.n	8000b10 <_malloc_r+0x2c>
 8000b76:	1cc4      	adds	r4, r0, #3
 8000b78:	f024 0403 	bic.w	r4, r4, #3
 8000b7c:	42a0      	cmp	r0, r4
 8000b7e:	d0e3      	beq.n	8000b48 <_malloc_r+0x64>
 8000b80:	1a21      	subs	r1, r4, r0
 8000b82:	4630      	mov	r0, r6
 8000b84:	f000 fb3e 	bl	8001204 <_sbrk_r>
 8000b88:	3001      	adds	r0, #1
 8000b8a:	d1dd      	bne.n	8000b48 <_malloc_r+0x64>
 8000b8c:	e7cf      	b.n	8000b2e <_malloc_r+0x4a>
 8000b8e:	bf00      	nop
 8000b90:	200000cc 	.word	0x200000cc
 8000b94:	200000d0 	.word	0x200000d0

08000b98 <__sfputc_r>:
 8000b98:	6893      	ldr	r3, [r2, #8]
 8000b9a:	3b01      	subs	r3, #1
 8000b9c:	2b00      	cmp	r3, #0
 8000b9e:	b410      	push	{r4}
 8000ba0:	6093      	str	r3, [r2, #8]
 8000ba2:	da08      	bge.n	8000bb6 <__sfputc_r+0x1e>
 8000ba4:	6994      	ldr	r4, [r2, #24]
 8000ba6:	42a3      	cmp	r3, r4
 8000ba8:	db01      	blt.n	8000bae <__sfputc_r+0x16>
 8000baa:	290a      	cmp	r1, #10
 8000bac:	d103      	bne.n	8000bb6 <__sfputc_r+0x1e>
 8000bae:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000bb2:	f000 bb7b 	b.w	80012ac <__swbuf_r>
 8000bb6:	6813      	ldr	r3, [r2, #0]
 8000bb8:	1c58      	adds	r0, r3, #1
 8000bba:	6010      	str	r0, [r2, #0]
 8000bbc:	7019      	strb	r1, [r3, #0]
 8000bbe:	4608      	mov	r0, r1
 8000bc0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000bc4:	4770      	bx	lr

08000bc6 <__sfputs_r>:
 8000bc6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000bc8:	4606      	mov	r6, r0
 8000bca:	460f      	mov	r7, r1
 8000bcc:	4614      	mov	r4, r2
 8000bce:	18d5      	adds	r5, r2, r3
 8000bd0:	42ac      	cmp	r4, r5
 8000bd2:	d101      	bne.n	8000bd8 <__sfputs_r+0x12>
 8000bd4:	2000      	movs	r0, #0
 8000bd6:	e007      	b.n	8000be8 <__sfputs_r+0x22>
 8000bd8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000bdc:	463a      	mov	r2, r7
 8000bde:	4630      	mov	r0, r6
 8000be0:	f7ff ffda 	bl	8000b98 <__sfputc_r>
 8000be4:	1c43      	adds	r3, r0, #1
 8000be6:	d1f3      	bne.n	8000bd0 <__sfputs_r+0xa>
 8000be8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000bec <_vfiprintf_r>:
 8000bec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000bf0:	460d      	mov	r5, r1
 8000bf2:	b09d      	sub	sp, #116	; 0x74
 8000bf4:	4614      	mov	r4, r2
 8000bf6:	4698      	mov	r8, r3
 8000bf8:	4606      	mov	r6, r0
 8000bfa:	b118      	cbz	r0, 8000c04 <_vfiprintf_r+0x18>
 8000bfc:	6983      	ldr	r3, [r0, #24]
 8000bfe:	b90b      	cbnz	r3, 8000c04 <_vfiprintf_r+0x18>
 8000c00:	f7ff fe66 	bl	80008d0 <__sinit>
 8000c04:	4b89      	ldr	r3, [pc, #548]	; (8000e2c <_vfiprintf_r+0x240>)
 8000c06:	429d      	cmp	r5, r3
 8000c08:	d11b      	bne.n	8000c42 <_vfiprintf_r+0x56>
 8000c0a:	6875      	ldr	r5, [r6, #4]
 8000c0c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000c0e:	07d9      	lsls	r1, r3, #31
 8000c10:	d405      	bmi.n	8000c1e <_vfiprintf_r+0x32>
 8000c12:	89ab      	ldrh	r3, [r5, #12]
 8000c14:	059a      	lsls	r2, r3, #22
 8000c16:	d402      	bmi.n	8000c1e <_vfiprintf_r+0x32>
 8000c18:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000c1a:	f7ff ff09 	bl	8000a30 <__retarget_lock_acquire_recursive>
 8000c1e:	89ab      	ldrh	r3, [r5, #12]
 8000c20:	071b      	lsls	r3, r3, #28
 8000c22:	d501      	bpl.n	8000c28 <_vfiprintf_r+0x3c>
 8000c24:	692b      	ldr	r3, [r5, #16]
 8000c26:	b9eb      	cbnz	r3, 8000c64 <_vfiprintf_r+0x78>
 8000c28:	4629      	mov	r1, r5
 8000c2a:	4630      	mov	r0, r6
 8000c2c:	f000 fba2 	bl	8001374 <__swsetup_r>
 8000c30:	b1c0      	cbz	r0, 8000c64 <_vfiprintf_r+0x78>
 8000c32:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000c34:	07dc      	lsls	r4, r3, #31
 8000c36:	d50e      	bpl.n	8000c56 <_vfiprintf_r+0x6a>
 8000c38:	f04f 30ff 	mov.w	r0, #4294967295
 8000c3c:	b01d      	add	sp, #116	; 0x74
 8000c3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000c42:	4b7b      	ldr	r3, [pc, #492]	; (8000e30 <_vfiprintf_r+0x244>)
 8000c44:	429d      	cmp	r5, r3
 8000c46:	d101      	bne.n	8000c4c <_vfiprintf_r+0x60>
 8000c48:	68b5      	ldr	r5, [r6, #8]
 8000c4a:	e7df      	b.n	8000c0c <_vfiprintf_r+0x20>
 8000c4c:	4b79      	ldr	r3, [pc, #484]	; (8000e34 <_vfiprintf_r+0x248>)
 8000c4e:	429d      	cmp	r5, r3
 8000c50:	bf08      	it	eq
 8000c52:	68f5      	ldreq	r5, [r6, #12]
 8000c54:	e7da      	b.n	8000c0c <_vfiprintf_r+0x20>
 8000c56:	89ab      	ldrh	r3, [r5, #12]
 8000c58:	0598      	lsls	r0, r3, #22
 8000c5a:	d4ed      	bmi.n	8000c38 <_vfiprintf_r+0x4c>
 8000c5c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000c5e:	f7ff fee8 	bl	8000a32 <__retarget_lock_release_recursive>
 8000c62:	e7e9      	b.n	8000c38 <_vfiprintf_r+0x4c>
 8000c64:	2300      	movs	r3, #0
 8000c66:	9309      	str	r3, [sp, #36]	; 0x24
 8000c68:	2320      	movs	r3, #32
 8000c6a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000c6e:	f8cd 800c 	str.w	r8, [sp, #12]
 8000c72:	2330      	movs	r3, #48	; 0x30
 8000c74:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8000e38 <_vfiprintf_r+0x24c>
 8000c78:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000c7c:	f04f 0901 	mov.w	r9, #1
 8000c80:	4623      	mov	r3, r4
 8000c82:	469a      	mov	sl, r3
 8000c84:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000c88:	b10a      	cbz	r2, 8000c8e <_vfiprintf_r+0xa2>
 8000c8a:	2a25      	cmp	r2, #37	; 0x25
 8000c8c:	d1f9      	bne.n	8000c82 <_vfiprintf_r+0x96>
 8000c8e:	ebba 0b04 	subs.w	fp, sl, r4
 8000c92:	d00b      	beq.n	8000cac <_vfiprintf_r+0xc0>
 8000c94:	465b      	mov	r3, fp
 8000c96:	4622      	mov	r2, r4
 8000c98:	4629      	mov	r1, r5
 8000c9a:	4630      	mov	r0, r6
 8000c9c:	f7ff ff93 	bl	8000bc6 <__sfputs_r>
 8000ca0:	3001      	adds	r0, #1
 8000ca2:	f000 80aa 	beq.w	8000dfa <_vfiprintf_r+0x20e>
 8000ca6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000ca8:	445a      	add	r2, fp
 8000caa:	9209      	str	r2, [sp, #36]	; 0x24
 8000cac:	f89a 3000 	ldrb.w	r3, [sl]
 8000cb0:	2b00      	cmp	r3, #0
 8000cb2:	f000 80a2 	beq.w	8000dfa <_vfiprintf_r+0x20e>
 8000cb6:	2300      	movs	r3, #0
 8000cb8:	f04f 32ff 	mov.w	r2, #4294967295
 8000cbc:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000cc0:	f10a 0a01 	add.w	sl, sl, #1
 8000cc4:	9304      	str	r3, [sp, #16]
 8000cc6:	9307      	str	r3, [sp, #28]
 8000cc8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000ccc:	931a      	str	r3, [sp, #104]	; 0x68
 8000cce:	4654      	mov	r4, sl
 8000cd0:	2205      	movs	r2, #5
 8000cd2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000cd6:	4858      	ldr	r0, [pc, #352]	; (8000e38 <_vfiprintf_r+0x24c>)
 8000cd8:	f7ff fa7a 	bl	80001d0 <memchr>
 8000cdc:	9a04      	ldr	r2, [sp, #16]
 8000cde:	b9d8      	cbnz	r0, 8000d18 <_vfiprintf_r+0x12c>
 8000ce0:	06d1      	lsls	r1, r2, #27
 8000ce2:	bf44      	itt	mi
 8000ce4:	2320      	movmi	r3, #32
 8000ce6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000cea:	0713      	lsls	r3, r2, #28
 8000cec:	bf44      	itt	mi
 8000cee:	232b      	movmi	r3, #43	; 0x2b
 8000cf0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000cf4:	f89a 3000 	ldrb.w	r3, [sl]
 8000cf8:	2b2a      	cmp	r3, #42	; 0x2a
 8000cfa:	d015      	beq.n	8000d28 <_vfiprintf_r+0x13c>
 8000cfc:	9a07      	ldr	r2, [sp, #28]
 8000cfe:	4654      	mov	r4, sl
 8000d00:	2000      	movs	r0, #0
 8000d02:	f04f 0c0a 	mov.w	ip, #10
 8000d06:	4621      	mov	r1, r4
 8000d08:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000d0c:	3b30      	subs	r3, #48	; 0x30
 8000d0e:	2b09      	cmp	r3, #9
 8000d10:	d94e      	bls.n	8000db0 <_vfiprintf_r+0x1c4>
 8000d12:	b1b0      	cbz	r0, 8000d42 <_vfiprintf_r+0x156>
 8000d14:	9207      	str	r2, [sp, #28]
 8000d16:	e014      	b.n	8000d42 <_vfiprintf_r+0x156>
 8000d18:	eba0 0308 	sub.w	r3, r0, r8
 8000d1c:	fa09 f303 	lsl.w	r3, r9, r3
 8000d20:	4313      	orrs	r3, r2
 8000d22:	9304      	str	r3, [sp, #16]
 8000d24:	46a2      	mov	sl, r4
 8000d26:	e7d2      	b.n	8000cce <_vfiprintf_r+0xe2>
 8000d28:	9b03      	ldr	r3, [sp, #12]
 8000d2a:	1d19      	adds	r1, r3, #4
 8000d2c:	681b      	ldr	r3, [r3, #0]
 8000d2e:	9103      	str	r1, [sp, #12]
 8000d30:	2b00      	cmp	r3, #0
 8000d32:	bfbb      	ittet	lt
 8000d34:	425b      	neglt	r3, r3
 8000d36:	f042 0202 	orrlt.w	r2, r2, #2
 8000d3a:	9307      	strge	r3, [sp, #28]
 8000d3c:	9307      	strlt	r3, [sp, #28]
 8000d3e:	bfb8      	it	lt
 8000d40:	9204      	strlt	r2, [sp, #16]
 8000d42:	7823      	ldrb	r3, [r4, #0]
 8000d44:	2b2e      	cmp	r3, #46	; 0x2e
 8000d46:	d10c      	bne.n	8000d62 <_vfiprintf_r+0x176>
 8000d48:	7863      	ldrb	r3, [r4, #1]
 8000d4a:	2b2a      	cmp	r3, #42	; 0x2a
 8000d4c:	d135      	bne.n	8000dba <_vfiprintf_r+0x1ce>
 8000d4e:	9b03      	ldr	r3, [sp, #12]
 8000d50:	1d1a      	adds	r2, r3, #4
 8000d52:	681b      	ldr	r3, [r3, #0]
 8000d54:	9203      	str	r2, [sp, #12]
 8000d56:	2b00      	cmp	r3, #0
 8000d58:	bfb8      	it	lt
 8000d5a:	f04f 33ff 	movlt.w	r3, #4294967295
 8000d5e:	3402      	adds	r4, #2
 8000d60:	9305      	str	r3, [sp, #20]
 8000d62:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8000e48 <_vfiprintf_r+0x25c>
 8000d66:	7821      	ldrb	r1, [r4, #0]
 8000d68:	2203      	movs	r2, #3
 8000d6a:	4650      	mov	r0, sl
 8000d6c:	f7ff fa30 	bl	80001d0 <memchr>
 8000d70:	b140      	cbz	r0, 8000d84 <_vfiprintf_r+0x198>
 8000d72:	2340      	movs	r3, #64	; 0x40
 8000d74:	eba0 000a 	sub.w	r0, r0, sl
 8000d78:	fa03 f000 	lsl.w	r0, r3, r0
 8000d7c:	9b04      	ldr	r3, [sp, #16]
 8000d7e:	4303      	orrs	r3, r0
 8000d80:	3401      	adds	r4, #1
 8000d82:	9304      	str	r3, [sp, #16]
 8000d84:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000d88:	482c      	ldr	r0, [pc, #176]	; (8000e3c <_vfiprintf_r+0x250>)
 8000d8a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000d8e:	2206      	movs	r2, #6
 8000d90:	f7ff fa1e 	bl	80001d0 <memchr>
 8000d94:	2800      	cmp	r0, #0
 8000d96:	d03f      	beq.n	8000e18 <_vfiprintf_r+0x22c>
 8000d98:	4b29      	ldr	r3, [pc, #164]	; (8000e40 <_vfiprintf_r+0x254>)
 8000d9a:	bb1b      	cbnz	r3, 8000de4 <_vfiprintf_r+0x1f8>
 8000d9c:	9b03      	ldr	r3, [sp, #12]
 8000d9e:	3307      	adds	r3, #7
 8000da0:	f023 0307 	bic.w	r3, r3, #7
 8000da4:	3308      	adds	r3, #8
 8000da6:	9303      	str	r3, [sp, #12]
 8000da8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000daa:	443b      	add	r3, r7
 8000dac:	9309      	str	r3, [sp, #36]	; 0x24
 8000dae:	e767      	b.n	8000c80 <_vfiprintf_r+0x94>
 8000db0:	fb0c 3202 	mla	r2, ip, r2, r3
 8000db4:	460c      	mov	r4, r1
 8000db6:	2001      	movs	r0, #1
 8000db8:	e7a5      	b.n	8000d06 <_vfiprintf_r+0x11a>
 8000dba:	2300      	movs	r3, #0
 8000dbc:	3401      	adds	r4, #1
 8000dbe:	9305      	str	r3, [sp, #20]
 8000dc0:	4619      	mov	r1, r3
 8000dc2:	f04f 0c0a 	mov.w	ip, #10
 8000dc6:	4620      	mov	r0, r4
 8000dc8:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000dcc:	3a30      	subs	r2, #48	; 0x30
 8000dce:	2a09      	cmp	r2, #9
 8000dd0:	d903      	bls.n	8000dda <_vfiprintf_r+0x1ee>
 8000dd2:	2b00      	cmp	r3, #0
 8000dd4:	d0c5      	beq.n	8000d62 <_vfiprintf_r+0x176>
 8000dd6:	9105      	str	r1, [sp, #20]
 8000dd8:	e7c3      	b.n	8000d62 <_vfiprintf_r+0x176>
 8000dda:	fb0c 2101 	mla	r1, ip, r1, r2
 8000dde:	4604      	mov	r4, r0
 8000de0:	2301      	movs	r3, #1
 8000de2:	e7f0      	b.n	8000dc6 <_vfiprintf_r+0x1da>
 8000de4:	ab03      	add	r3, sp, #12
 8000de6:	9300      	str	r3, [sp, #0]
 8000de8:	462a      	mov	r2, r5
 8000dea:	4b16      	ldr	r3, [pc, #88]	; (8000e44 <_vfiprintf_r+0x258>)
 8000dec:	a904      	add	r1, sp, #16
 8000dee:	4630      	mov	r0, r6
 8000df0:	f3af 8000 	nop.w
 8000df4:	4607      	mov	r7, r0
 8000df6:	1c78      	adds	r0, r7, #1
 8000df8:	d1d6      	bne.n	8000da8 <_vfiprintf_r+0x1bc>
 8000dfa:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000dfc:	07d9      	lsls	r1, r3, #31
 8000dfe:	d405      	bmi.n	8000e0c <_vfiprintf_r+0x220>
 8000e00:	89ab      	ldrh	r3, [r5, #12]
 8000e02:	059a      	lsls	r2, r3, #22
 8000e04:	d402      	bmi.n	8000e0c <_vfiprintf_r+0x220>
 8000e06:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000e08:	f7ff fe13 	bl	8000a32 <__retarget_lock_release_recursive>
 8000e0c:	89ab      	ldrh	r3, [r5, #12]
 8000e0e:	065b      	lsls	r3, r3, #25
 8000e10:	f53f af12 	bmi.w	8000c38 <_vfiprintf_r+0x4c>
 8000e14:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000e16:	e711      	b.n	8000c3c <_vfiprintf_r+0x50>
 8000e18:	ab03      	add	r3, sp, #12
 8000e1a:	9300      	str	r3, [sp, #0]
 8000e1c:	462a      	mov	r2, r5
 8000e1e:	4b09      	ldr	r3, [pc, #36]	; (8000e44 <_vfiprintf_r+0x258>)
 8000e20:	a904      	add	r1, sp, #16
 8000e22:	4630      	mov	r0, r6
 8000e24:	f000 f880 	bl	8000f28 <_printf_i>
 8000e28:	e7e4      	b.n	8000df4 <_vfiprintf_r+0x208>
 8000e2a:	bf00      	nop
 8000e2c:	08001944 	.word	0x08001944
 8000e30:	08001964 	.word	0x08001964
 8000e34:	08001924 	.word	0x08001924
 8000e38:	08001984 	.word	0x08001984
 8000e3c:	0800198e 	.word	0x0800198e
 8000e40:	00000000 	.word	0x00000000
 8000e44:	08000bc7 	.word	0x08000bc7
 8000e48:	0800198a 	.word	0x0800198a

08000e4c <_printf_common>:
 8000e4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000e50:	4616      	mov	r6, r2
 8000e52:	4699      	mov	r9, r3
 8000e54:	688a      	ldr	r2, [r1, #8]
 8000e56:	690b      	ldr	r3, [r1, #16]
 8000e58:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000e5c:	4293      	cmp	r3, r2
 8000e5e:	bfb8      	it	lt
 8000e60:	4613      	movlt	r3, r2
 8000e62:	6033      	str	r3, [r6, #0]
 8000e64:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000e68:	4607      	mov	r7, r0
 8000e6a:	460c      	mov	r4, r1
 8000e6c:	b10a      	cbz	r2, 8000e72 <_printf_common+0x26>
 8000e6e:	3301      	adds	r3, #1
 8000e70:	6033      	str	r3, [r6, #0]
 8000e72:	6823      	ldr	r3, [r4, #0]
 8000e74:	0699      	lsls	r1, r3, #26
 8000e76:	bf42      	ittt	mi
 8000e78:	6833      	ldrmi	r3, [r6, #0]
 8000e7a:	3302      	addmi	r3, #2
 8000e7c:	6033      	strmi	r3, [r6, #0]
 8000e7e:	6825      	ldr	r5, [r4, #0]
 8000e80:	f015 0506 	ands.w	r5, r5, #6
 8000e84:	d106      	bne.n	8000e94 <_printf_common+0x48>
 8000e86:	f104 0a19 	add.w	sl, r4, #25
 8000e8a:	68e3      	ldr	r3, [r4, #12]
 8000e8c:	6832      	ldr	r2, [r6, #0]
 8000e8e:	1a9b      	subs	r3, r3, r2
 8000e90:	42ab      	cmp	r3, r5
 8000e92:	dc26      	bgt.n	8000ee2 <_printf_common+0x96>
 8000e94:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000e98:	1e13      	subs	r3, r2, #0
 8000e9a:	6822      	ldr	r2, [r4, #0]
 8000e9c:	bf18      	it	ne
 8000e9e:	2301      	movne	r3, #1
 8000ea0:	0692      	lsls	r2, r2, #26
 8000ea2:	d42b      	bmi.n	8000efc <_printf_common+0xb0>
 8000ea4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000ea8:	4649      	mov	r1, r9
 8000eaa:	4638      	mov	r0, r7
 8000eac:	47c0      	blx	r8
 8000eae:	3001      	adds	r0, #1
 8000eb0:	d01e      	beq.n	8000ef0 <_printf_common+0xa4>
 8000eb2:	6823      	ldr	r3, [r4, #0]
 8000eb4:	68e5      	ldr	r5, [r4, #12]
 8000eb6:	6832      	ldr	r2, [r6, #0]
 8000eb8:	f003 0306 	and.w	r3, r3, #6
 8000ebc:	2b04      	cmp	r3, #4
 8000ebe:	bf08      	it	eq
 8000ec0:	1aad      	subeq	r5, r5, r2
 8000ec2:	68a3      	ldr	r3, [r4, #8]
 8000ec4:	6922      	ldr	r2, [r4, #16]
 8000ec6:	bf0c      	ite	eq
 8000ec8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000ecc:	2500      	movne	r5, #0
 8000ece:	4293      	cmp	r3, r2
 8000ed0:	bfc4      	itt	gt
 8000ed2:	1a9b      	subgt	r3, r3, r2
 8000ed4:	18ed      	addgt	r5, r5, r3
 8000ed6:	2600      	movs	r6, #0
 8000ed8:	341a      	adds	r4, #26
 8000eda:	42b5      	cmp	r5, r6
 8000edc:	d11a      	bne.n	8000f14 <_printf_common+0xc8>
 8000ede:	2000      	movs	r0, #0
 8000ee0:	e008      	b.n	8000ef4 <_printf_common+0xa8>
 8000ee2:	2301      	movs	r3, #1
 8000ee4:	4652      	mov	r2, sl
 8000ee6:	4649      	mov	r1, r9
 8000ee8:	4638      	mov	r0, r7
 8000eea:	47c0      	blx	r8
 8000eec:	3001      	adds	r0, #1
 8000eee:	d103      	bne.n	8000ef8 <_printf_common+0xac>
 8000ef0:	f04f 30ff 	mov.w	r0, #4294967295
 8000ef4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ef8:	3501      	adds	r5, #1
 8000efa:	e7c6      	b.n	8000e8a <_printf_common+0x3e>
 8000efc:	18e1      	adds	r1, r4, r3
 8000efe:	1c5a      	adds	r2, r3, #1
 8000f00:	2030      	movs	r0, #48	; 0x30
 8000f02:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000f06:	4422      	add	r2, r4
 8000f08:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000f0c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000f10:	3302      	adds	r3, #2
 8000f12:	e7c7      	b.n	8000ea4 <_printf_common+0x58>
 8000f14:	2301      	movs	r3, #1
 8000f16:	4622      	mov	r2, r4
 8000f18:	4649      	mov	r1, r9
 8000f1a:	4638      	mov	r0, r7
 8000f1c:	47c0      	blx	r8
 8000f1e:	3001      	adds	r0, #1
 8000f20:	d0e6      	beq.n	8000ef0 <_printf_common+0xa4>
 8000f22:	3601      	adds	r6, #1
 8000f24:	e7d9      	b.n	8000eda <_printf_common+0x8e>
	...

08000f28 <_printf_i>:
 8000f28:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000f2c:	460c      	mov	r4, r1
 8000f2e:	4691      	mov	r9, r2
 8000f30:	7e27      	ldrb	r7, [r4, #24]
 8000f32:	990c      	ldr	r1, [sp, #48]	; 0x30
 8000f34:	2f78      	cmp	r7, #120	; 0x78
 8000f36:	4680      	mov	r8, r0
 8000f38:	469a      	mov	sl, r3
 8000f3a:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000f3e:	d807      	bhi.n	8000f50 <_printf_i+0x28>
 8000f40:	2f62      	cmp	r7, #98	; 0x62
 8000f42:	d80a      	bhi.n	8000f5a <_printf_i+0x32>
 8000f44:	2f00      	cmp	r7, #0
 8000f46:	f000 80d8 	beq.w	80010fa <_printf_i+0x1d2>
 8000f4a:	2f58      	cmp	r7, #88	; 0x58
 8000f4c:	f000 80a3 	beq.w	8001096 <_printf_i+0x16e>
 8000f50:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8000f54:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000f58:	e03a      	b.n	8000fd0 <_printf_i+0xa8>
 8000f5a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000f5e:	2b15      	cmp	r3, #21
 8000f60:	d8f6      	bhi.n	8000f50 <_printf_i+0x28>
 8000f62:	a001      	add	r0, pc, #4	; (adr r0, 8000f68 <_printf_i+0x40>)
 8000f64:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8000f68:	08000fc1 	.word	0x08000fc1
 8000f6c:	08000fd5 	.word	0x08000fd5
 8000f70:	08000f51 	.word	0x08000f51
 8000f74:	08000f51 	.word	0x08000f51
 8000f78:	08000f51 	.word	0x08000f51
 8000f7c:	08000f51 	.word	0x08000f51
 8000f80:	08000fd5 	.word	0x08000fd5
 8000f84:	08000f51 	.word	0x08000f51
 8000f88:	08000f51 	.word	0x08000f51
 8000f8c:	08000f51 	.word	0x08000f51
 8000f90:	08000f51 	.word	0x08000f51
 8000f94:	080010e1 	.word	0x080010e1
 8000f98:	08001005 	.word	0x08001005
 8000f9c:	080010c3 	.word	0x080010c3
 8000fa0:	08000f51 	.word	0x08000f51
 8000fa4:	08000f51 	.word	0x08000f51
 8000fa8:	08001103 	.word	0x08001103
 8000fac:	08000f51 	.word	0x08000f51
 8000fb0:	08001005 	.word	0x08001005
 8000fb4:	08000f51 	.word	0x08000f51
 8000fb8:	08000f51 	.word	0x08000f51
 8000fbc:	080010cb 	.word	0x080010cb
 8000fc0:	680b      	ldr	r3, [r1, #0]
 8000fc2:	1d1a      	adds	r2, r3, #4
 8000fc4:	681b      	ldr	r3, [r3, #0]
 8000fc6:	600a      	str	r2, [r1, #0]
 8000fc8:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8000fcc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000fd0:	2301      	movs	r3, #1
 8000fd2:	e0a3      	b.n	800111c <_printf_i+0x1f4>
 8000fd4:	6825      	ldr	r5, [r4, #0]
 8000fd6:	6808      	ldr	r0, [r1, #0]
 8000fd8:	062e      	lsls	r6, r5, #24
 8000fda:	f100 0304 	add.w	r3, r0, #4
 8000fde:	d50a      	bpl.n	8000ff6 <_printf_i+0xce>
 8000fe0:	6805      	ldr	r5, [r0, #0]
 8000fe2:	600b      	str	r3, [r1, #0]
 8000fe4:	2d00      	cmp	r5, #0
 8000fe6:	da03      	bge.n	8000ff0 <_printf_i+0xc8>
 8000fe8:	232d      	movs	r3, #45	; 0x2d
 8000fea:	426d      	negs	r5, r5
 8000fec:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000ff0:	485e      	ldr	r0, [pc, #376]	; (800116c <_printf_i+0x244>)
 8000ff2:	230a      	movs	r3, #10
 8000ff4:	e019      	b.n	800102a <_printf_i+0x102>
 8000ff6:	f015 0f40 	tst.w	r5, #64	; 0x40
 8000ffa:	6805      	ldr	r5, [r0, #0]
 8000ffc:	600b      	str	r3, [r1, #0]
 8000ffe:	bf18      	it	ne
 8001000:	b22d      	sxthne	r5, r5
 8001002:	e7ef      	b.n	8000fe4 <_printf_i+0xbc>
 8001004:	680b      	ldr	r3, [r1, #0]
 8001006:	6825      	ldr	r5, [r4, #0]
 8001008:	1d18      	adds	r0, r3, #4
 800100a:	6008      	str	r0, [r1, #0]
 800100c:	0628      	lsls	r0, r5, #24
 800100e:	d501      	bpl.n	8001014 <_printf_i+0xec>
 8001010:	681d      	ldr	r5, [r3, #0]
 8001012:	e002      	b.n	800101a <_printf_i+0xf2>
 8001014:	0669      	lsls	r1, r5, #25
 8001016:	d5fb      	bpl.n	8001010 <_printf_i+0xe8>
 8001018:	881d      	ldrh	r5, [r3, #0]
 800101a:	4854      	ldr	r0, [pc, #336]	; (800116c <_printf_i+0x244>)
 800101c:	2f6f      	cmp	r7, #111	; 0x6f
 800101e:	bf0c      	ite	eq
 8001020:	2308      	moveq	r3, #8
 8001022:	230a      	movne	r3, #10
 8001024:	2100      	movs	r1, #0
 8001026:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800102a:	6866      	ldr	r6, [r4, #4]
 800102c:	60a6      	str	r6, [r4, #8]
 800102e:	2e00      	cmp	r6, #0
 8001030:	bfa2      	ittt	ge
 8001032:	6821      	ldrge	r1, [r4, #0]
 8001034:	f021 0104 	bicge.w	r1, r1, #4
 8001038:	6021      	strge	r1, [r4, #0]
 800103a:	b90d      	cbnz	r5, 8001040 <_printf_i+0x118>
 800103c:	2e00      	cmp	r6, #0
 800103e:	d04d      	beq.n	80010dc <_printf_i+0x1b4>
 8001040:	4616      	mov	r6, r2
 8001042:	fbb5 f1f3 	udiv	r1, r5, r3
 8001046:	fb03 5711 	mls	r7, r3, r1, r5
 800104a:	5dc7      	ldrb	r7, [r0, r7]
 800104c:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8001050:	462f      	mov	r7, r5
 8001052:	42bb      	cmp	r3, r7
 8001054:	460d      	mov	r5, r1
 8001056:	d9f4      	bls.n	8001042 <_printf_i+0x11a>
 8001058:	2b08      	cmp	r3, #8
 800105a:	d10b      	bne.n	8001074 <_printf_i+0x14c>
 800105c:	6823      	ldr	r3, [r4, #0]
 800105e:	07df      	lsls	r7, r3, #31
 8001060:	d508      	bpl.n	8001074 <_printf_i+0x14c>
 8001062:	6923      	ldr	r3, [r4, #16]
 8001064:	6861      	ldr	r1, [r4, #4]
 8001066:	4299      	cmp	r1, r3
 8001068:	bfde      	ittt	le
 800106a:	2330      	movle	r3, #48	; 0x30
 800106c:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001070:	f106 36ff 	addle.w	r6, r6, #4294967295
 8001074:	1b92      	subs	r2, r2, r6
 8001076:	6122      	str	r2, [r4, #16]
 8001078:	f8cd a000 	str.w	sl, [sp]
 800107c:	464b      	mov	r3, r9
 800107e:	aa03      	add	r2, sp, #12
 8001080:	4621      	mov	r1, r4
 8001082:	4640      	mov	r0, r8
 8001084:	f7ff fee2 	bl	8000e4c <_printf_common>
 8001088:	3001      	adds	r0, #1
 800108a:	d14c      	bne.n	8001126 <_printf_i+0x1fe>
 800108c:	f04f 30ff 	mov.w	r0, #4294967295
 8001090:	b004      	add	sp, #16
 8001092:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001096:	4835      	ldr	r0, [pc, #212]	; (800116c <_printf_i+0x244>)
 8001098:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 800109c:	6823      	ldr	r3, [r4, #0]
 800109e:	680e      	ldr	r6, [r1, #0]
 80010a0:	061f      	lsls	r7, r3, #24
 80010a2:	f856 5b04 	ldr.w	r5, [r6], #4
 80010a6:	600e      	str	r6, [r1, #0]
 80010a8:	d514      	bpl.n	80010d4 <_printf_i+0x1ac>
 80010aa:	07d9      	lsls	r1, r3, #31
 80010ac:	bf44      	itt	mi
 80010ae:	f043 0320 	orrmi.w	r3, r3, #32
 80010b2:	6023      	strmi	r3, [r4, #0]
 80010b4:	b91d      	cbnz	r5, 80010be <_printf_i+0x196>
 80010b6:	6823      	ldr	r3, [r4, #0]
 80010b8:	f023 0320 	bic.w	r3, r3, #32
 80010bc:	6023      	str	r3, [r4, #0]
 80010be:	2310      	movs	r3, #16
 80010c0:	e7b0      	b.n	8001024 <_printf_i+0xfc>
 80010c2:	6823      	ldr	r3, [r4, #0]
 80010c4:	f043 0320 	orr.w	r3, r3, #32
 80010c8:	6023      	str	r3, [r4, #0]
 80010ca:	2378      	movs	r3, #120	; 0x78
 80010cc:	4828      	ldr	r0, [pc, #160]	; (8001170 <_printf_i+0x248>)
 80010ce:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80010d2:	e7e3      	b.n	800109c <_printf_i+0x174>
 80010d4:	065e      	lsls	r6, r3, #25
 80010d6:	bf48      	it	mi
 80010d8:	b2ad      	uxthmi	r5, r5
 80010da:	e7e6      	b.n	80010aa <_printf_i+0x182>
 80010dc:	4616      	mov	r6, r2
 80010de:	e7bb      	b.n	8001058 <_printf_i+0x130>
 80010e0:	680b      	ldr	r3, [r1, #0]
 80010e2:	6826      	ldr	r6, [r4, #0]
 80010e4:	6960      	ldr	r0, [r4, #20]
 80010e6:	1d1d      	adds	r5, r3, #4
 80010e8:	600d      	str	r5, [r1, #0]
 80010ea:	0635      	lsls	r5, r6, #24
 80010ec:	681b      	ldr	r3, [r3, #0]
 80010ee:	d501      	bpl.n	80010f4 <_printf_i+0x1cc>
 80010f0:	6018      	str	r0, [r3, #0]
 80010f2:	e002      	b.n	80010fa <_printf_i+0x1d2>
 80010f4:	0671      	lsls	r1, r6, #25
 80010f6:	d5fb      	bpl.n	80010f0 <_printf_i+0x1c8>
 80010f8:	8018      	strh	r0, [r3, #0]
 80010fa:	2300      	movs	r3, #0
 80010fc:	6123      	str	r3, [r4, #16]
 80010fe:	4616      	mov	r6, r2
 8001100:	e7ba      	b.n	8001078 <_printf_i+0x150>
 8001102:	680b      	ldr	r3, [r1, #0]
 8001104:	1d1a      	adds	r2, r3, #4
 8001106:	600a      	str	r2, [r1, #0]
 8001108:	681e      	ldr	r6, [r3, #0]
 800110a:	6862      	ldr	r2, [r4, #4]
 800110c:	2100      	movs	r1, #0
 800110e:	4630      	mov	r0, r6
 8001110:	f7ff f85e 	bl	80001d0 <memchr>
 8001114:	b108      	cbz	r0, 800111a <_printf_i+0x1f2>
 8001116:	1b80      	subs	r0, r0, r6
 8001118:	6060      	str	r0, [r4, #4]
 800111a:	6863      	ldr	r3, [r4, #4]
 800111c:	6123      	str	r3, [r4, #16]
 800111e:	2300      	movs	r3, #0
 8001120:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001124:	e7a8      	b.n	8001078 <_printf_i+0x150>
 8001126:	6923      	ldr	r3, [r4, #16]
 8001128:	4632      	mov	r2, r6
 800112a:	4649      	mov	r1, r9
 800112c:	4640      	mov	r0, r8
 800112e:	47d0      	blx	sl
 8001130:	3001      	adds	r0, #1
 8001132:	d0ab      	beq.n	800108c <_printf_i+0x164>
 8001134:	6823      	ldr	r3, [r4, #0]
 8001136:	079b      	lsls	r3, r3, #30
 8001138:	d413      	bmi.n	8001162 <_printf_i+0x23a>
 800113a:	68e0      	ldr	r0, [r4, #12]
 800113c:	9b03      	ldr	r3, [sp, #12]
 800113e:	4298      	cmp	r0, r3
 8001140:	bfb8      	it	lt
 8001142:	4618      	movlt	r0, r3
 8001144:	e7a4      	b.n	8001090 <_printf_i+0x168>
 8001146:	2301      	movs	r3, #1
 8001148:	4632      	mov	r2, r6
 800114a:	4649      	mov	r1, r9
 800114c:	4640      	mov	r0, r8
 800114e:	47d0      	blx	sl
 8001150:	3001      	adds	r0, #1
 8001152:	d09b      	beq.n	800108c <_printf_i+0x164>
 8001154:	3501      	adds	r5, #1
 8001156:	68e3      	ldr	r3, [r4, #12]
 8001158:	9903      	ldr	r1, [sp, #12]
 800115a:	1a5b      	subs	r3, r3, r1
 800115c:	42ab      	cmp	r3, r5
 800115e:	dcf2      	bgt.n	8001146 <_printf_i+0x21e>
 8001160:	e7eb      	b.n	800113a <_printf_i+0x212>
 8001162:	2500      	movs	r5, #0
 8001164:	f104 0619 	add.w	r6, r4, #25
 8001168:	e7f5      	b.n	8001156 <_printf_i+0x22e>
 800116a:	bf00      	nop
 800116c:	08001995 	.word	0x08001995
 8001170:	080019a6 	.word	0x080019a6

08001174 <_putc_r>:
 8001174:	b570      	push	{r4, r5, r6, lr}
 8001176:	460d      	mov	r5, r1
 8001178:	4614      	mov	r4, r2
 800117a:	4606      	mov	r6, r0
 800117c:	b118      	cbz	r0, 8001186 <_putc_r+0x12>
 800117e:	6983      	ldr	r3, [r0, #24]
 8001180:	b90b      	cbnz	r3, 8001186 <_putc_r+0x12>
 8001182:	f7ff fba5 	bl	80008d0 <__sinit>
 8001186:	4b1c      	ldr	r3, [pc, #112]	; (80011f8 <_putc_r+0x84>)
 8001188:	429c      	cmp	r4, r3
 800118a:	d124      	bne.n	80011d6 <_putc_r+0x62>
 800118c:	6874      	ldr	r4, [r6, #4]
 800118e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001190:	07d8      	lsls	r0, r3, #31
 8001192:	d405      	bmi.n	80011a0 <_putc_r+0x2c>
 8001194:	89a3      	ldrh	r3, [r4, #12]
 8001196:	0599      	lsls	r1, r3, #22
 8001198:	d402      	bmi.n	80011a0 <_putc_r+0x2c>
 800119a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800119c:	f7ff fc48 	bl	8000a30 <__retarget_lock_acquire_recursive>
 80011a0:	68a3      	ldr	r3, [r4, #8]
 80011a2:	3b01      	subs	r3, #1
 80011a4:	2b00      	cmp	r3, #0
 80011a6:	60a3      	str	r3, [r4, #8]
 80011a8:	da05      	bge.n	80011b6 <_putc_r+0x42>
 80011aa:	69a2      	ldr	r2, [r4, #24]
 80011ac:	4293      	cmp	r3, r2
 80011ae:	db1c      	blt.n	80011ea <_putc_r+0x76>
 80011b0:	b2eb      	uxtb	r3, r5
 80011b2:	2b0a      	cmp	r3, #10
 80011b4:	d019      	beq.n	80011ea <_putc_r+0x76>
 80011b6:	6823      	ldr	r3, [r4, #0]
 80011b8:	1c5a      	adds	r2, r3, #1
 80011ba:	6022      	str	r2, [r4, #0]
 80011bc:	701d      	strb	r5, [r3, #0]
 80011be:	b2ed      	uxtb	r5, r5
 80011c0:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80011c2:	07da      	lsls	r2, r3, #31
 80011c4:	d405      	bmi.n	80011d2 <_putc_r+0x5e>
 80011c6:	89a3      	ldrh	r3, [r4, #12]
 80011c8:	059b      	lsls	r3, r3, #22
 80011ca:	d402      	bmi.n	80011d2 <_putc_r+0x5e>
 80011cc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80011ce:	f7ff fc30 	bl	8000a32 <__retarget_lock_release_recursive>
 80011d2:	4628      	mov	r0, r5
 80011d4:	bd70      	pop	{r4, r5, r6, pc}
 80011d6:	4b09      	ldr	r3, [pc, #36]	; (80011fc <_putc_r+0x88>)
 80011d8:	429c      	cmp	r4, r3
 80011da:	d101      	bne.n	80011e0 <_putc_r+0x6c>
 80011dc:	68b4      	ldr	r4, [r6, #8]
 80011de:	e7d6      	b.n	800118e <_putc_r+0x1a>
 80011e0:	4b07      	ldr	r3, [pc, #28]	; (8001200 <_putc_r+0x8c>)
 80011e2:	429c      	cmp	r4, r3
 80011e4:	bf08      	it	eq
 80011e6:	68f4      	ldreq	r4, [r6, #12]
 80011e8:	e7d1      	b.n	800118e <_putc_r+0x1a>
 80011ea:	4629      	mov	r1, r5
 80011ec:	4622      	mov	r2, r4
 80011ee:	4630      	mov	r0, r6
 80011f0:	f000 f85c 	bl	80012ac <__swbuf_r>
 80011f4:	4605      	mov	r5, r0
 80011f6:	e7e3      	b.n	80011c0 <_putc_r+0x4c>
 80011f8:	08001944 	.word	0x08001944
 80011fc:	08001964 	.word	0x08001964
 8001200:	08001924 	.word	0x08001924

08001204 <_sbrk_r>:
 8001204:	b538      	push	{r3, r4, r5, lr}
 8001206:	4d06      	ldr	r5, [pc, #24]	; (8001220 <_sbrk_r+0x1c>)
 8001208:	2300      	movs	r3, #0
 800120a:	4604      	mov	r4, r0
 800120c:	4608      	mov	r0, r1
 800120e:	602b      	str	r3, [r5, #0]
 8001210:	f7ff f9e8 	bl	80005e4 <_sbrk>
 8001214:	1c43      	adds	r3, r0, #1
 8001216:	d102      	bne.n	800121e <_sbrk_r+0x1a>
 8001218:	682b      	ldr	r3, [r5, #0]
 800121a:	b103      	cbz	r3, 800121e <_sbrk_r+0x1a>
 800121c:	6023      	str	r3, [r4, #0]
 800121e:	bd38      	pop	{r3, r4, r5, pc}
 8001220:	200000e0 	.word	0x200000e0

08001224 <__sread>:
 8001224:	b510      	push	{r4, lr}
 8001226:	460c      	mov	r4, r1
 8001228:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800122c:	f000 fa6c 	bl	8001708 <_read_r>
 8001230:	2800      	cmp	r0, #0
 8001232:	bfab      	itete	ge
 8001234:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8001236:	89a3      	ldrhlt	r3, [r4, #12]
 8001238:	181b      	addge	r3, r3, r0
 800123a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800123e:	bfac      	ite	ge
 8001240:	6563      	strge	r3, [r4, #84]	; 0x54
 8001242:	81a3      	strhlt	r3, [r4, #12]
 8001244:	bd10      	pop	{r4, pc}

08001246 <__swrite>:
 8001246:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800124a:	461f      	mov	r7, r3
 800124c:	898b      	ldrh	r3, [r1, #12]
 800124e:	05db      	lsls	r3, r3, #23
 8001250:	4605      	mov	r5, r0
 8001252:	460c      	mov	r4, r1
 8001254:	4616      	mov	r6, r2
 8001256:	d505      	bpl.n	8001264 <__swrite+0x1e>
 8001258:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800125c:	2302      	movs	r3, #2
 800125e:	2200      	movs	r2, #0
 8001260:	f000 f9d0 	bl	8001604 <_lseek_r>
 8001264:	89a3      	ldrh	r3, [r4, #12]
 8001266:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800126a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800126e:	81a3      	strh	r3, [r4, #12]
 8001270:	4632      	mov	r2, r6
 8001272:	463b      	mov	r3, r7
 8001274:	4628      	mov	r0, r5
 8001276:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800127a:	f000 b869 	b.w	8001350 <_write_r>

0800127e <__sseek>:
 800127e:	b510      	push	{r4, lr}
 8001280:	460c      	mov	r4, r1
 8001282:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001286:	f000 f9bd 	bl	8001604 <_lseek_r>
 800128a:	1c43      	adds	r3, r0, #1
 800128c:	89a3      	ldrh	r3, [r4, #12]
 800128e:	bf15      	itete	ne
 8001290:	6560      	strne	r0, [r4, #84]	; 0x54
 8001292:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8001296:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800129a:	81a3      	strheq	r3, [r4, #12]
 800129c:	bf18      	it	ne
 800129e:	81a3      	strhne	r3, [r4, #12]
 80012a0:	bd10      	pop	{r4, pc}

080012a2 <__sclose>:
 80012a2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012a6:	f000 b8db 	b.w	8001460 <_close_r>
	...

080012ac <__swbuf_r>:
 80012ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80012ae:	460e      	mov	r6, r1
 80012b0:	4614      	mov	r4, r2
 80012b2:	4605      	mov	r5, r0
 80012b4:	b118      	cbz	r0, 80012be <__swbuf_r+0x12>
 80012b6:	6983      	ldr	r3, [r0, #24]
 80012b8:	b90b      	cbnz	r3, 80012be <__swbuf_r+0x12>
 80012ba:	f7ff fb09 	bl	80008d0 <__sinit>
 80012be:	4b21      	ldr	r3, [pc, #132]	; (8001344 <__swbuf_r+0x98>)
 80012c0:	429c      	cmp	r4, r3
 80012c2:	d12b      	bne.n	800131c <__swbuf_r+0x70>
 80012c4:	686c      	ldr	r4, [r5, #4]
 80012c6:	69a3      	ldr	r3, [r4, #24]
 80012c8:	60a3      	str	r3, [r4, #8]
 80012ca:	89a3      	ldrh	r3, [r4, #12]
 80012cc:	071a      	lsls	r2, r3, #28
 80012ce:	d52f      	bpl.n	8001330 <__swbuf_r+0x84>
 80012d0:	6923      	ldr	r3, [r4, #16]
 80012d2:	b36b      	cbz	r3, 8001330 <__swbuf_r+0x84>
 80012d4:	6923      	ldr	r3, [r4, #16]
 80012d6:	6820      	ldr	r0, [r4, #0]
 80012d8:	1ac0      	subs	r0, r0, r3
 80012da:	6963      	ldr	r3, [r4, #20]
 80012dc:	b2f6      	uxtb	r6, r6
 80012de:	4283      	cmp	r3, r0
 80012e0:	4637      	mov	r7, r6
 80012e2:	dc04      	bgt.n	80012ee <__swbuf_r+0x42>
 80012e4:	4621      	mov	r1, r4
 80012e6:	4628      	mov	r0, r5
 80012e8:	f000 f950 	bl	800158c <_fflush_r>
 80012ec:	bb30      	cbnz	r0, 800133c <__swbuf_r+0x90>
 80012ee:	68a3      	ldr	r3, [r4, #8]
 80012f0:	3b01      	subs	r3, #1
 80012f2:	60a3      	str	r3, [r4, #8]
 80012f4:	6823      	ldr	r3, [r4, #0]
 80012f6:	1c5a      	adds	r2, r3, #1
 80012f8:	6022      	str	r2, [r4, #0]
 80012fa:	701e      	strb	r6, [r3, #0]
 80012fc:	6963      	ldr	r3, [r4, #20]
 80012fe:	3001      	adds	r0, #1
 8001300:	4283      	cmp	r3, r0
 8001302:	d004      	beq.n	800130e <__swbuf_r+0x62>
 8001304:	89a3      	ldrh	r3, [r4, #12]
 8001306:	07db      	lsls	r3, r3, #31
 8001308:	d506      	bpl.n	8001318 <__swbuf_r+0x6c>
 800130a:	2e0a      	cmp	r6, #10
 800130c:	d104      	bne.n	8001318 <__swbuf_r+0x6c>
 800130e:	4621      	mov	r1, r4
 8001310:	4628      	mov	r0, r5
 8001312:	f000 f93b 	bl	800158c <_fflush_r>
 8001316:	b988      	cbnz	r0, 800133c <__swbuf_r+0x90>
 8001318:	4638      	mov	r0, r7
 800131a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800131c:	4b0a      	ldr	r3, [pc, #40]	; (8001348 <__swbuf_r+0x9c>)
 800131e:	429c      	cmp	r4, r3
 8001320:	d101      	bne.n	8001326 <__swbuf_r+0x7a>
 8001322:	68ac      	ldr	r4, [r5, #8]
 8001324:	e7cf      	b.n	80012c6 <__swbuf_r+0x1a>
 8001326:	4b09      	ldr	r3, [pc, #36]	; (800134c <__swbuf_r+0xa0>)
 8001328:	429c      	cmp	r4, r3
 800132a:	bf08      	it	eq
 800132c:	68ec      	ldreq	r4, [r5, #12]
 800132e:	e7ca      	b.n	80012c6 <__swbuf_r+0x1a>
 8001330:	4621      	mov	r1, r4
 8001332:	4628      	mov	r0, r5
 8001334:	f000 f81e 	bl	8001374 <__swsetup_r>
 8001338:	2800      	cmp	r0, #0
 800133a:	d0cb      	beq.n	80012d4 <__swbuf_r+0x28>
 800133c:	f04f 37ff 	mov.w	r7, #4294967295
 8001340:	e7ea      	b.n	8001318 <__swbuf_r+0x6c>
 8001342:	bf00      	nop
 8001344:	08001944 	.word	0x08001944
 8001348:	08001964 	.word	0x08001964
 800134c:	08001924 	.word	0x08001924

08001350 <_write_r>:
 8001350:	b538      	push	{r3, r4, r5, lr}
 8001352:	4d07      	ldr	r5, [pc, #28]	; (8001370 <_write_r+0x20>)
 8001354:	4604      	mov	r4, r0
 8001356:	4608      	mov	r0, r1
 8001358:	4611      	mov	r1, r2
 800135a:	2200      	movs	r2, #0
 800135c:	602a      	str	r2, [r5, #0]
 800135e:	461a      	mov	r2, r3
 8001360:	f7ff f8ef 	bl	8000542 <_write>
 8001364:	1c43      	adds	r3, r0, #1
 8001366:	d102      	bne.n	800136e <_write_r+0x1e>
 8001368:	682b      	ldr	r3, [r5, #0]
 800136a:	b103      	cbz	r3, 800136e <_write_r+0x1e>
 800136c:	6023      	str	r3, [r4, #0]
 800136e:	bd38      	pop	{r3, r4, r5, pc}
 8001370:	200000e0 	.word	0x200000e0

08001374 <__swsetup_r>:
 8001374:	4b32      	ldr	r3, [pc, #200]	; (8001440 <__swsetup_r+0xcc>)
 8001376:	b570      	push	{r4, r5, r6, lr}
 8001378:	681d      	ldr	r5, [r3, #0]
 800137a:	4606      	mov	r6, r0
 800137c:	460c      	mov	r4, r1
 800137e:	b125      	cbz	r5, 800138a <__swsetup_r+0x16>
 8001380:	69ab      	ldr	r3, [r5, #24]
 8001382:	b913      	cbnz	r3, 800138a <__swsetup_r+0x16>
 8001384:	4628      	mov	r0, r5
 8001386:	f7ff faa3 	bl	80008d0 <__sinit>
 800138a:	4b2e      	ldr	r3, [pc, #184]	; (8001444 <__swsetup_r+0xd0>)
 800138c:	429c      	cmp	r4, r3
 800138e:	d10f      	bne.n	80013b0 <__swsetup_r+0x3c>
 8001390:	686c      	ldr	r4, [r5, #4]
 8001392:	89a3      	ldrh	r3, [r4, #12]
 8001394:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001398:	0719      	lsls	r1, r3, #28
 800139a:	d42c      	bmi.n	80013f6 <__swsetup_r+0x82>
 800139c:	06dd      	lsls	r5, r3, #27
 800139e:	d411      	bmi.n	80013c4 <__swsetup_r+0x50>
 80013a0:	2309      	movs	r3, #9
 80013a2:	6033      	str	r3, [r6, #0]
 80013a4:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80013a8:	81a3      	strh	r3, [r4, #12]
 80013aa:	f04f 30ff 	mov.w	r0, #4294967295
 80013ae:	e03e      	b.n	800142e <__swsetup_r+0xba>
 80013b0:	4b25      	ldr	r3, [pc, #148]	; (8001448 <__swsetup_r+0xd4>)
 80013b2:	429c      	cmp	r4, r3
 80013b4:	d101      	bne.n	80013ba <__swsetup_r+0x46>
 80013b6:	68ac      	ldr	r4, [r5, #8]
 80013b8:	e7eb      	b.n	8001392 <__swsetup_r+0x1e>
 80013ba:	4b24      	ldr	r3, [pc, #144]	; (800144c <__swsetup_r+0xd8>)
 80013bc:	429c      	cmp	r4, r3
 80013be:	bf08      	it	eq
 80013c0:	68ec      	ldreq	r4, [r5, #12]
 80013c2:	e7e6      	b.n	8001392 <__swsetup_r+0x1e>
 80013c4:	0758      	lsls	r0, r3, #29
 80013c6:	d512      	bpl.n	80013ee <__swsetup_r+0x7a>
 80013c8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80013ca:	b141      	cbz	r1, 80013de <__swsetup_r+0x6a>
 80013cc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80013d0:	4299      	cmp	r1, r3
 80013d2:	d002      	beq.n	80013da <__swsetup_r+0x66>
 80013d4:	4630      	mov	r0, r6
 80013d6:	f7ff fb35 	bl	8000a44 <_free_r>
 80013da:	2300      	movs	r3, #0
 80013dc:	6363      	str	r3, [r4, #52]	; 0x34
 80013de:	89a3      	ldrh	r3, [r4, #12]
 80013e0:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80013e4:	81a3      	strh	r3, [r4, #12]
 80013e6:	2300      	movs	r3, #0
 80013e8:	6063      	str	r3, [r4, #4]
 80013ea:	6923      	ldr	r3, [r4, #16]
 80013ec:	6023      	str	r3, [r4, #0]
 80013ee:	89a3      	ldrh	r3, [r4, #12]
 80013f0:	f043 0308 	orr.w	r3, r3, #8
 80013f4:	81a3      	strh	r3, [r4, #12]
 80013f6:	6923      	ldr	r3, [r4, #16]
 80013f8:	b94b      	cbnz	r3, 800140e <__swsetup_r+0x9a>
 80013fa:	89a3      	ldrh	r3, [r4, #12]
 80013fc:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001400:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001404:	d003      	beq.n	800140e <__swsetup_r+0x9a>
 8001406:	4621      	mov	r1, r4
 8001408:	4630      	mov	r0, r6
 800140a:	f000 f931 	bl	8001670 <__smakebuf_r>
 800140e:	89a0      	ldrh	r0, [r4, #12]
 8001410:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001414:	f010 0301 	ands.w	r3, r0, #1
 8001418:	d00a      	beq.n	8001430 <__swsetup_r+0xbc>
 800141a:	2300      	movs	r3, #0
 800141c:	60a3      	str	r3, [r4, #8]
 800141e:	6963      	ldr	r3, [r4, #20]
 8001420:	425b      	negs	r3, r3
 8001422:	61a3      	str	r3, [r4, #24]
 8001424:	6923      	ldr	r3, [r4, #16]
 8001426:	b943      	cbnz	r3, 800143a <__swsetup_r+0xc6>
 8001428:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800142c:	d1ba      	bne.n	80013a4 <__swsetup_r+0x30>
 800142e:	bd70      	pop	{r4, r5, r6, pc}
 8001430:	0781      	lsls	r1, r0, #30
 8001432:	bf58      	it	pl
 8001434:	6963      	ldrpl	r3, [r4, #20]
 8001436:	60a3      	str	r3, [r4, #8]
 8001438:	e7f4      	b.n	8001424 <__swsetup_r+0xb0>
 800143a:	2000      	movs	r0, #0
 800143c:	e7f7      	b.n	800142e <__swsetup_r+0xba>
 800143e:	bf00      	nop
 8001440:	20000048 	.word	0x20000048
 8001444:	08001944 	.word	0x08001944
 8001448:	08001964 	.word	0x08001964
 800144c:	08001924 	.word	0x08001924

08001450 <abort>:
 8001450:	b508      	push	{r3, lr}
 8001452:	2006      	movs	r0, #6
 8001454:	f000 f992 	bl	800177c <raise>
 8001458:	2001      	movs	r0, #1
 800145a:	f7ff f84b 	bl	80004f4 <_exit>
	...

08001460 <_close_r>:
 8001460:	b538      	push	{r3, r4, r5, lr}
 8001462:	4d06      	ldr	r5, [pc, #24]	; (800147c <_close_r+0x1c>)
 8001464:	2300      	movs	r3, #0
 8001466:	4604      	mov	r4, r0
 8001468:	4608      	mov	r0, r1
 800146a:	602b      	str	r3, [r5, #0]
 800146c:	f7ff f885 	bl	800057a <_close>
 8001470:	1c43      	adds	r3, r0, #1
 8001472:	d102      	bne.n	800147a <_close_r+0x1a>
 8001474:	682b      	ldr	r3, [r5, #0]
 8001476:	b103      	cbz	r3, 800147a <_close_r+0x1a>
 8001478:	6023      	str	r3, [r4, #0]
 800147a:	bd38      	pop	{r3, r4, r5, pc}
 800147c:	200000e0 	.word	0x200000e0

08001480 <__sflush_r>:
 8001480:	898a      	ldrh	r2, [r1, #12]
 8001482:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001486:	4605      	mov	r5, r0
 8001488:	0710      	lsls	r0, r2, #28
 800148a:	460c      	mov	r4, r1
 800148c:	d458      	bmi.n	8001540 <__sflush_r+0xc0>
 800148e:	684b      	ldr	r3, [r1, #4]
 8001490:	2b00      	cmp	r3, #0
 8001492:	dc05      	bgt.n	80014a0 <__sflush_r+0x20>
 8001494:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8001496:	2b00      	cmp	r3, #0
 8001498:	dc02      	bgt.n	80014a0 <__sflush_r+0x20>
 800149a:	2000      	movs	r0, #0
 800149c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80014a0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80014a2:	2e00      	cmp	r6, #0
 80014a4:	d0f9      	beq.n	800149a <__sflush_r+0x1a>
 80014a6:	2300      	movs	r3, #0
 80014a8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80014ac:	682f      	ldr	r7, [r5, #0]
 80014ae:	602b      	str	r3, [r5, #0]
 80014b0:	d032      	beq.n	8001518 <__sflush_r+0x98>
 80014b2:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80014b4:	89a3      	ldrh	r3, [r4, #12]
 80014b6:	075a      	lsls	r2, r3, #29
 80014b8:	d505      	bpl.n	80014c6 <__sflush_r+0x46>
 80014ba:	6863      	ldr	r3, [r4, #4]
 80014bc:	1ac0      	subs	r0, r0, r3
 80014be:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80014c0:	b10b      	cbz	r3, 80014c6 <__sflush_r+0x46>
 80014c2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80014c4:	1ac0      	subs	r0, r0, r3
 80014c6:	2300      	movs	r3, #0
 80014c8:	4602      	mov	r2, r0
 80014ca:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80014cc:	6a21      	ldr	r1, [r4, #32]
 80014ce:	4628      	mov	r0, r5
 80014d0:	47b0      	blx	r6
 80014d2:	1c43      	adds	r3, r0, #1
 80014d4:	89a3      	ldrh	r3, [r4, #12]
 80014d6:	d106      	bne.n	80014e6 <__sflush_r+0x66>
 80014d8:	6829      	ldr	r1, [r5, #0]
 80014da:	291d      	cmp	r1, #29
 80014dc:	d82c      	bhi.n	8001538 <__sflush_r+0xb8>
 80014de:	4a2a      	ldr	r2, [pc, #168]	; (8001588 <__sflush_r+0x108>)
 80014e0:	40ca      	lsrs	r2, r1
 80014e2:	07d6      	lsls	r6, r2, #31
 80014e4:	d528      	bpl.n	8001538 <__sflush_r+0xb8>
 80014e6:	2200      	movs	r2, #0
 80014e8:	6062      	str	r2, [r4, #4]
 80014ea:	04d9      	lsls	r1, r3, #19
 80014ec:	6922      	ldr	r2, [r4, #16]
 80014ee:	6022      	str	r2, [r4, #0]
 80014f0:	d504      	bpl.n	80014fc <__sflush_r+0x7c>
 80014f2:	1c42      	adds	r2, r0, #1
 80014f4:	d101      	bne.n	80014fa <__sflush_r+0x7a>
 80014f6:	682b      	ldr	r3, [r5, #0]
 80014f8:	b903      	cbnz	r3, 80014fc <__sflush_r+0x7c>
 80014fa:	6560      	str	r0, [r4, #84]	; 0x54
 80014fc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80014fe:	602f      	str	r7, [r5, #0]
 8001500:	2900      	cmp	r1, #0
 8001502:	d0ca      	beq.n	800149a <__sflush_r+0x1a>
 8001504:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001508:	4299      	cmp	r1, r3
 800150a:	d002      	beq.n	8001512 <__sflush_r+0x92>
 800150c:	4628      	mov	r0, r5
 800150e:	f7ff fa99 	bl	8000a44 <_free_r>
 8001512:	2000      	movs	r0, #0
 8001514:	6360      	str	r0, [r4, #52]	; 0x34
 8001516:	e7c1      	b.n	800149c <__sflush_r+0x1c>
 8001518:	6a21      	ldr	r1, [r4, #32]
 800151a:	2301      	movs	r3, #1
 800151c:	4628      	mov	r0, r5
 800151e:	47b0      	blx	r6
 8001520:	1c41      	adds	r1, r0, #1
 8001522:	d1c7      	bne.n	80014b4 <__sflush_r+0x34>
 8001524:	682b      	ldr	r3, [r5, #0]
 8001526:	2b00      	cmp	r3, #0
 8001528:	d0c4      	beq.n	80014b4 <__sflush_r+0x34>
 800152a:	2b1d      	cmp	r3, #29
 800152c:	d001      	beq.n	8001532 <__sflush_r+0xb2>
 800152e:	2b16      	cmp	r3, #22
 8001530:	d101      	bne.n	8001536 <__sflush_r+0xb6>
 8001532:	602f      	str	r7, [r5, #0]
 8001534:	e7b1      	b.n	800149a <__sflush_r+0x1a>
 8001536:	89a3      	ldrh	r3, [r4, #12]
 8001538:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800153c:	81a3      	strh	r3, [r4, #12]
 800153e:	e7ad      	b.n	800149c <__sflush_r+0x1c>
 8001540:	690f      	ldr	r7, [r1, #16]
 8001542:	2f00      	cmp	r7, #0
 8001544:	d0a9      	beq.n	800149a <__sflush_r+0x1a>
 8001546:	0793      	lsls	r3, r2, #30
 8001548:	680e      	ldr	r6, [r1, #0]
 800154a:	bf08      	it	eq
 800154c:	694b      	ldreq	r3, [r1, #20]
 800154e:	600f      	str	r7, [r1, #0]
 8001550:	bf18      	it	ne
 8001552:	2300      	movne	r3, #0
 8001554:	eba6 0807 	sub.w	r8, r6, r7
 8001558:	608b      	str	r3, [r1, #8]
 800155a:	f1b8 0f00 	cmp.w	r8, #0
 800155e:	dd9c      	ble.n	800149a <__sflush_r+0x1a>
 8001560:	6a21      	ldr	r1, [r4, #32]
 8001562:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8001564:	4643      	mov	r3, r8
 8001566:	463a      	mov	r2, r7
 8001568:	4628      	mov	r0, r5
 800156a:	47b0      	blx	r6
 800156c:	2800      	cmp	r0, #0
 800156e:	dc06      	bgt.n	800157e <__sflush_r+0xfe>
 8001570:	89a3      	ldrh	r3, [r4, #12]
 8001572:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001576:	81a3      	strh	r3, [r4, #12]
 8001578:	f04f 30ff 	mov.w	r0, #4294967295
 800157c:	e78e      	b.n	800149c <__sflush_r+0x1c>
 800157e:	4407      	add	r7, r0
 8001580:	eba8 0800 	sub.w	r8, r8, r0
 8001584:	e7e9      	b.n	800155a <__sflush_r+0xda>
 8001586:	bf00      	nop
 8001588:	20400001 	.word	0x20400001

0800158c <_fflush_r>:
 800158c:	b538      	push	{r3, r4, r5, lr}
 800158e:	690b      	ldr	r3, [r1, #16]
 8001590:	4605      	mov	r5, r0
 8001592:	460c      	mov	r4, r1
 8001594:	b913      	cbnz	r3, 800159c <_fflush_r+0x10>
 8001596:	2500      	movs	r5, #0
 8001598:	4628      	mov	r0, r5
 800159a:	bd38      	pop	{r3, r4, r5, pc}
 800159c:	b118      	cbz	r0, 80015a6 <_fflush_r+0x1a>
 800159e:	6983      	ldr	r3, [r0, #24]
 80015a0:	b90b      	cbnz	r3, 80015a6 <_fflush_r+0x1a>
 80015a2:	f7ff f995 	bl	80008d0 <__sinit>
 80015a6:	4b14      	ldr	r3, [pc, #80]	; (80015f8 <_fflush_r+0x6c>)
 80015a8:	429c      	cmp	r4, r3
 80015aa:	d11b      	bne.n	80015e4 <_fflush_r+0x58>
 80015ac:	686c      	ldr	r4, [r5, #4]
 80015ae:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80015b2:	2b00      	cmp	r3, #0
 80015b4:	d0ef      	beq.n	8001596 <_fflush_r+0xa>
 80015b6:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80015b8:	07d0      	lsls	r0, r2, #31
 80015ba:	d404      	bmi.n	80015c6 <_fflush_r+0x3a>
 80015bc:	0599      	lsls	r1, r3, #22
 80015be:	d402      	bmi.n	80015c6 <_fflush_r+0x3a>
 80015c0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80015c2:	f7ff fa35 	bl	8000a30 <__retarget_lock_acquire_recursive>
 80015c6:	4628      	mov	r0, r5
 80015c8:	4621      	mov	r1, r4
 80015ca:	f7ff ff59 	bl	8001480 <__sflush_r>
 80015ce:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80015d0:	07da      	lsls	r2, r3, #31
 80015d2:	4605      	mov	r5, r0
 80015d4:	d4e0      	bmi.n	8001598 <_fflush_r+0xc>
 80015d6:	89a3      	ldrh	r3, [r4, #12]
 80015d8:	059b      	lsls	r3, r3, #22
 80015da:	d4dd      	bmi.n	8001598 <_fflush_r+0xc>
 80015dc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80015de:	f7ff fa28 	bl	8000a32 <__retarget_lock_release_recursive>
 80015e2:	e7d9      	b.n	8001598 <_fflush_r+0xc>
 80015e4:	4b05      	ldr	r3, [pc, #20]	; (80015fc <_fflush_r+0x70>)
 80015e6:	429c      	cmp	r4, r3
 80015e8:	d101      	bne.n	80015ee <_fflush_r+0x62>
 80015ea:	68ac      	ldr	r4, [r5, #8]
 80015ec:	e7df      	b.n	80015ae <_fflush_r+0x22>
 80015ee:	4b04      	ldr	r3, [pc, #16]	; (8001600 <_fflush_r+0x74>)
 80015f0:	429c      	cmp	r4, r3
 80015f2:	bf08      	it	eq
 80015f4:	68ec      	ldreq	r4, [r5, #12]
 80015f6:	e7da      	b.n	80015ae <_fflush_r+0x22>
 80015f8:	08001944 	.word	0x08001944
 80015fc:	08001964 	.word	0x08001964
 8001600:	08001924 	.word	0x08001924

08001604 <_lseek_r>:
 8001604:	b538      	push	{r3, r4, r5, lr}
 8001606:	4d07      	ldr	r5, [pc, #28]	; (8001624 <_lseek_r+0x20>)
 8001608:	4604      	mov	r4, r0
 800160a:	4608      	mov	r0, r1
 800160c:	4611      	mov	r1, r2
 800160e:	2200      	movs	r2, #0
 8001610:	602a      	str	r2, [r5, #0]
 8001612:	461a      	mov	r2, r3
 8001614:	f7fe ffd8 	bl	80005c8 <_lseek>
 8001618:	1c43      	adds	r3, r0, #1
 800161a:	d102      	bne.n	8001622 <_lseek_r+0x1e>
 800161c:	682b      	ldr	r3, [r5, #0]
 800161e:	b103      	cbz	r3, 8001622 <_lseek_r+0x1e>
 8001620:	6023      	str	r3, [r4, #0]
 8001622:	bd38      	pop	{r3, r4, r5, pc}
 8001624:	200000e0 	.word	0x200000e0

08001628 <__swhatbuf_r>:
 8001628:	b570      	push	{r4, r5, r6, lr}
 800162a:	460e      	mov	r6, r1
 800162c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001630:	2900      	cmp	r1, #0
 8001632:	b096      	sub	sp, #88	; 0x58
 8001634:	4614      	mov	r4, r2
 8001636:	461d      	mov	r5, r3
 8001638:	da07      	bge.n	800164a <__swhatbuf_r+0x22>
 800163a:	2300      	movs	r3, #0
 800163c:	602b      	str	r3, [r5, #0]
 800163e:	89b3      	ldrh	r3, [r6, #12]
 8001640:	061a      	lsls	r2, r3, #24
 8001642:	d410      	bmi.n	8001666 <__swhatbuf_r+0x3e>
 8001644:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001648:	e00e      	b.n	8001668 <__swhatbuf_r+0x40>
 800164a:	466a      	mov	r2, sp
 800164c:	f000 f8b2 	bl	80017b4 <_fstat_r>
 8001650:	2800      	cmp	r0, #0
 8001652:	dbf2      	blt.n	800163a <__swhatbuf_r+0x12>
 8001654:	9a01      	ldr	r2, [sp, #4]
 8001656:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800165a:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800165e:	425a      	negs	r2, r3
 8001660:	415a      	adcs	r2, r3
 8001662:	602a      	str	r2, [r5, #0]
 8001664:	e7ee      	b.n	8001644 <__swhatbuf_r+0x1c>
 8001666:	2340      	movs	r3, #64	; 0x40
 8001668:	2000      	movs	r0, #0
 800166a:	6023      	str	r3, [r4, #0]
 800166c:	b016      	add	sp, #88	; 0x58
 800166e:	bd70      	pop	{r4, r5, r6, pc}

08001670 <__smakebuf_r>:
 8001670:	898b      	ldrh	r3, [r1, #12]
 8001672:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001674:	079d      	lsls	r5, r3, #30
 8001676:	4606      	mov	r6, r0
 8001678:	460c      	mov	r4, r1
 800167a:	d507      	bpl.n	800168c <__smakebuf_r+0x1c>
 800167c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001680:	6023      	str	r3, [r4, #0]
 8001682:	6123      	str	r3, [r4, #16]
 8001684:	2301      	movs	r3, #1
 8001686:	6163      	str	r3, [r4, #20]
 8001688:	b002      	add	sp, #8
 800168a:	bd70      	pop	{r4, r5, r6, pc}
 800168c:	ab01      	add	r3, sp, #4
 800168e:	466a      	mov	r2, sp
 8001690:	f7ff ffca 	bl	8001628 <__swhatbuf_r>
 8001694:	9900      	ldr	r1, [sp, #0]
 8001696:	4605      	mov	r5, r0
 8001698:	4630      	mov	r0, r6
 800169a:	f7ff fa23 	bl	8000ae4 <_malloc_r>
 800169e:	b948      	cbnz	r0, 80016b4 <__smakebuf_r+0x44>
 80016a0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80016a4:	059a      	lsls	r2, r3, #22
 80016a6:	d4ef      	bmi.n	8001688 <__smakebuf_r+0x18>
 80016a8:	f023 0303 	bic.w	r3, r3, #3
 80016ac:	f043 0302 	orr.w	r3, r3, #2
 80016b0:	81a3      	strh	r3, [r4, #12]
 80016b2:	e7e3      	b.n	800167c <__smakebuf_r+0xc>
 80016b4:	4b0d      	ldr	r3, [pc, #52]	; (80016ec <__smakebuf_r+0x7c>)
 80016b6:	62b3      	str	r3, [r6, #40]	; 0x28
 80016b8:	89a3      	ldrh	r3, [r4, #12]
 80016ba:	6020      	str	r0, [r4, #0]
 80016bc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80016c0:	81a3      	strh	r3, [r4, #12]
 80016c2:	9b00      	ldr	r3, [sp, #0]
 80016c4:	6163      	str	r3, [r4, #20]
 80016c6:	9b01      	ldr	r3, [sp, #4]
 80016c8:	6120      	str	r0, [r4, #16]
 80016ca:	b15b      	cbz	r3, 80016e4 <__smakebuf_r+0x74>
 80016cc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80016d0:	4630      	mov	r0, r6
 80016d2:	f000 f881 	bl	80017d8 <_isatty_r>
 80016d6:	b128      	cbz	r0, 80016e4 <__smakebuf_r+0x74>
 80016d8:	89a3      	ldrh	r3, [r4, #12]
 80016da:	f023 0303 	bic.w	r3, r3, #3
 80016de:	f043 0301 	orr.w	r3, r3, #1
 80016e2:	81a3      	strh	r3, [r4, #12]
 80016e4:	89a0      	ldrh	r0, [r4, #12]
 80016e6:	4305      	orrs	r5, r0
 80016e8:	81a5      	strh	r5, [r4, #12]
 80016ea:	e7cd      	b.n	8001688 <__smakebuf_r+0x18>
 80016ec:	08000869 	.word	0x08000869

080016f0 <__malloc_lock>:
 80016f0:	4801      	ldr	r0, [pc, #4]	; (80016f8 <__malloc_lock+0x8>)
 80016f2:	f7ff b99d 	b.w	8000a30 <__retarget_lock_acquire_recursive>
 80016f6:	bf00      	nop
 80016f8:	200000d8 	.word	0x200000d8

080016fc <__malloc_unlock>:
 80016fc:	4801      	ldr	r0, [pc, #4]	; (8001704 <__malloc_unlock+0x8>)
 80016fe:	f7ff b998 	b.w	8000a32 <__retarget_lock_release_recursive>
 8001702:	bf00      	nop
 8001704:	200000d8 	.word	0x200000d8

08001708 <_read_r>:
 8001708:	b538      	push	{r3, r4, r5, lr}
 800170a:	4d07      	ldr	r5, [pc, #28]	; (8001728 <_read_r+0x20>)
 800170c:	4604      	mov	r4, r0
 800170e:	4608      	mov	r0, r1
 8001710:	4611      	mov	r1, r2
 8001712:	2200      	movs	r2, #0
 8001714:	602a      	str	r2, [r5, #0]
 8001716:	461a      	mov	r2, r3
 8001718:	f7fe fef6 	bl	8000508 <_read>
 800171c:	1c43      	adds	r3, r0, #1
 800171e:	d102      	bne.n	8001726 <_read_r+0x1e>
 8001720:	682b      	ldr	r3, [r5, #0]
 8001722:	b103      	cbz	r3, 8001726 <_read_r+0x1e>
 8001724:	6023      	str	r3, [r4, #0]
 8001726:	bd38      	pop	{r3, r4, r5, pc}
 8001728:	200000e0 	.word	0x200000e0

0800172c <_raise_r>:
 800172c:	291f      	cmp	r1, #31
 800172e:	b538      	push	{r3, r4, r5, lr}
 8001730:	4604      	mov	r4, r0
 8001732:	460d      	mov	r5, r1
 8001734:	d904      	bls.n	8001740 <_raise_r+0x14>
 8001736:	2316      	movs	r3, #22
 8001738:	6003      	str	r3, [r0, #0]
 800173a:	f04f 30ff 	mov.w	r0, #4294967295
 800173e:	bd38      	pop	{r3, r4, r5, pc}
 8001740:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8001742:	b112      	cbz	r2, 800174a <_raise_r+0x1e>
 8001744:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8001748:	b94b      	cbnz	r3, 800175e <_raise_r+0x32>
 800174a:	4620      	mov	r0, r4
 800174c:	f000 f830 	bl	80017b0 <_getpid_r>
 8001750:	462a      	mov	r2, r5
 8001752:	4601      	mov	r1, r0
 8001754:	4620      	mov	r0, r4
 8001756:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800175a:	f000 b817 	b.w	800178c <_kill_r>
 800175e:	2b01      	cmp	r3, #1
 8001760:	d00a      	beq.n	8001778 <_raise_r+0x4c>
 8001762:	1c59      	adds	r1, r3, #1
 8001764:	d103      	bne.n	800176e <_raise_r+0x42>
 8001766:	2316      	movs	r3, #22
 8001768:	6003      	str	r3, [r0, #0]
 800176a:	2001      	movs	r0, #1
 800176c:	e7e7      	b.n	800173e <_raise_r+0x12>
 800176e:	2400      	movs	r4, #0
 8001770:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8001774:	4628      	mov	r0, r5
 8001776:	4798      	blx	r3
 8001778:	2000      	movs	r0, #0
 800177a:	e7e0      	b.n	800173e <_raise_r+0x12>

0800177c <raise>:
 800177c:	4b02      	ldr	r3, [pc, #8]	; (8001788 <raise+0xc>)
 800177e:	4601      	mov	r1, r0
 8001780:	6818      	ldr	r0, [r3, #0]
 8001782:	f7ff bfd3 	b.w	800172c <_raise_r>
 8001786:	bf00      	nop
 8001788:	20000048 	.word	0x20000048

0800178c <_kill_r>:
 800178c:	b538      	push	{r3, r4, r5, lr}
 800178e:	4d07      	ldr	r5, [pc, #28]	; (80017ac <_kill_r+0x20>)
 8001790:	2300      	movs	r3, #0
 8001792:	4604      	mov	r4, r0
 8001794:	4608      	mov	r0, r1
 8001796:	4611      	mov	r1, r2
 8001798:	602b      	str	r3, [r5, #0]
 800179a:	f7fe fe9b 	bl	80004d4 <_kill>
 800179e:	1c43      	adds	r3, r0, #1
 80017a0:	d102      	bne.n	80017a8 <_kill_r+0x1c>
 80017a2:	682b      	ldr	r3, [r5, #0]
 80017a4:	b103      	cbz	r3, 80017a8 <_kill_r+0x1c>
 80017a6:	6023      	str	r3, [r4, #0]
 80017a8:	bd38      	pop	{r3, r4, r5, pc}
 80017aa:	bf00      	nop
 80017ac:	200000e0 	.word	0x200000e0

080017b0 <_getpid_r>:
 80017b0:	f7fe be88 	b.w	80004c4 <_getpid>

080017b4 <_fstat_r>:
 80017b4:	b538      	push	{r3, r4, r5, lr}
 80017b6:	4d07      	ldr	r5, [pc, #28]	; (80017d4 <_fstat_r+0x20>)
 80017b8:	2300      	movs	r3, #0
 80017ba:	4604      	mov	r4, r0
 80017bc:	4608      	mov	r0, r1
 80017be:	4611      	mov	r1, r2
 80017c0:	602b      	str	r3, [r5, #0]
 80017c2:	f7fe fee6 	bl	8000592 <_fstat>
 80017c6:	1c43      	adds	r3, r0, #1
 80017c8:	d102      	bne.n	80017d0 <_fstat_r+0x1c>
 80017ca:	682b      	ldr	r3, [r5, #0]
 80017cc:	b103      	cbz	r3, 80017d0 <_fstat_r+0x1c>
 80017ce:	6023      	str	r3, [r4, #0]
 80017d0:	bd38      	pop	{r3, r4, r5, pc}
 80017d2:	bf00      	nop
 80017d4:	200000e0 	.word	0x200000e0

080017d8 <_isatty_r>:
 80017d8:	b538      	push	{r3, r4, r5, lr}
 80017da:	4d06      	ldr	r5, [pc, #24]	; (80017f4 <_isatty_r+0x1c>)
 80017dc:	2300      	movs	r3, #0
 80017de:	4604      	mov	r4, r0
 80017e0:	4608      	mov	r0, r1
 80017e2:	602b      	str	r3, [r5, #0]
 80017e4:	f7fe fee5 	bl	80005b2 <_isatty>
 80017e8:	1c43      	adds	r3, r0, #1
 80017ea:	d102      	bne.n	80017f2 <_isatty_r+0x1a>
 80017ec:	682b      	ldr	r3, [r5, #0]
 80017ee:	b103      	cbz	r3, 80017f2 <_isatty_r+0x1a>
 80017f0:	6023      	str	r3, [r4, #0]
 80017f2:	bd38      	pop	{r3, r4, r5, pc}
 80017f4:	200000e0 	.word	0x200000e0

080017f8 <_init>:
 80017f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80017fa:	bf00      	nop
 80017fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80017fe:	bc08      	pop	{r3}
 8001800:	469e      	mov	lr, r3
 8001802:	4770      	bx	lr

08001804 <_fini>:
 8001804:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001806:	bf00      	nop
 8001808:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800180a:	bc08      	pop	{r3}
 800180c:	469e      	mov	lr, r3
 800180e:	4770      	bx	lr
