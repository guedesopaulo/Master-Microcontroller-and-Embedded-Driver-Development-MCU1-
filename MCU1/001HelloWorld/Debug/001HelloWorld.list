
001HelloWorld.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000c34  08000188  08000188  00010188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000070  08000dbc  08000dbc  00010dbc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000e2c  08000e2c  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08000e2c  08000e2c  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000e2c  08000e2c  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000e2c  08000e2c  00010e2c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000e30  08000e30  00010e30  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08000e34  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000038  20000064  08000e98  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000009c  08000e98  0002009c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002363  00000000  00000000  0002008e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000005f4  00000000  00000000  000223f1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000118  00000000  00000000  000229e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000e0  00000000  00000000  00022b00  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002bf6  00000000  00000000  00022be0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000131c  00000000  00000000  000257d6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000096e1  00000000  00000000  00026af2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000301d3  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000009fc  00000000  00000000  00030228  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	; (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	; (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	; (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000064 	.word	0x20000064
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08000da4 	.word	0x08000da4

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	; (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	; (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	; (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000068 	.word	0x20000068
 80001c4:	08000da4 	.word	0x08000da4

080001c8 <main>:
#endif

#include <stdio.h>

int main(void)
{
 80001c8:	b580      	push	{r7, lr}
 80001ca:	af00      	add	r7, sp, #0
	printf("Hello World\n");
 80001cc:	4801      	ldr	r0, [pc, #4]	; (80001d4 <main+0xc>)
 80001ce:	f000 f993 	bl	80004f8 <puts>
    /* Loop forever */
	for(;;);
 80001d2:	e7fe      	b.n	80001d2 <main+0xa>
 80001d4:	08000dbc 	.word	0x08000dbc

080001d8 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80001d8:	b480      	push	{r7}
 80001da:	b083      	sub	sp, #12
 80001dc:	af00      	add	r7, sp, #0
 80001de:	4603      	mov	r3, r0
 80001e0:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80001e2:	4b0e      	ldr	r3, [pc, #56]	; (800021c <ITM_SendChar+0x44>)
 80001e4:	681b      	ldr	r3, [r3, #0]
 80001e6:	4a0d      	ldr	r2, [pc, #52]	; (800021c <ITM_SendChar+0x44>)
 80001e8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80001ec:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80001ee:	4b0c      	ldr	r3, [pc, #48]	; (8000220 <ITM_SendChar+0x48>)
 80001f0:	681b      	ldr	r3, [r3, #0]
 80001f2:	4a0b      	ldr	r2, [pc, #44]	; (8000220 <ITM_SendChar+0x48>)
 80001f4:	f043 0301 	orr.w	r3, r3, #1
 80001f8:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80001fa:	bf00      	nop
 80001fc:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000200:	681b      	ldr	r3, [r3, #0]
 8000202:	f003 0301 	and.w	r3, r3, #1
 8000206:	2b00      	cmp	r3, #0
 8000208:	d0f8      	beq.n	80001fc <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 800020a:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 800020e:	79fb      	ldrb	r3, [r7, #7]
 8000210:	6013      	str	r3, [r2, #0]
}
 8000212:	bf00      	nop
 8000214:	370c      	adds	r7, #12
 8000216:	46bd      	mov	sp, r7
 8000218:	bc80      	pop	{r7}
 800021a:	4770      	bx	lr
 800021c:	e000edfc 	.word	0xe000edfc
 8000220:	e0000e00 	.word	0xe0000e00

08000224 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000224:	b580      	push	{r7, lr}
 8000226:	b086      	sub	sp, #24
 8000228:	af00      	add	r7, sp, #0
 800022a:	60f8      	str	r0, [r7, #12]
 800022c:	60b9      	str	r1, [r7, #8]
 800022e:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000230:	2300      	movs	r3, #0
 8000232:	617b      	str	r3, [r7, #20]
 8000234:	e00a      	b.n	800024c <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8000236:	f3af 8000 	nop.w
 800023a:	4601      	mov	r1, r0
 800023c:	68bb      	ldr	r3, [r7, #8]
 800023e:	1c5a      	adds	r2, r3, #1
 8000240:	60ba      	str	r2, [r7, #8]
 8000242:	b2ca      	uxtb	r2, r1
 8000244:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000246:	697b      	ldr	r3, [r7, #20]
 8000248:	3301      	adds	r3, #1
 800024a:	617b      	str	r3, [r7, #20]
 800024c:	697a      	ldr	r2, [r7, #20]
 800024e:	687b      	ldr	r3, [r7, #4]
 8000250:	429a      	cmp	r2, r3
 8000252:	dbf0      	blt.n	8000236 <_read+0x12>
	}

return len;
 8000254:	687b      	ldr	r3, [r7, #4]
}
 8000256:	4618      	mov	r0, r3
 8000258:	3718      	adds	r7, #24
 800025a:	46bd      	mov	sp, r7
 800025c:	bd80      	pop	{r7, pc}

0800025e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800025e:	b580      	push	{r7, lr}
 8000260:	b086      	sub	sp, #24
 8000262:	af00      	add	r7, sp, #0
 8000264:	60f8      	str	r0, [r7, #12]
 8000266:	60b9      	str	r1, [r7, #8]
 8000268:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800026a:	2300      	movs	r3, #0
 800026c:	617b      	str	r3, [r7, #20]
 800026e:	e009      	b.n	8000284 <_write+0x26>
	{
		//__io_putchar(*ptr++);
		ITM_SendChar(*ptr++);
 8000270:	68bb      	ldr	r3, [r7, #8]
 8000272:	1c5a      	adds	r2, r3, #1
 8000274:	60ba      	str	r2, [r7, #8]
 8000276:	781b      	ldrb	r3, [r3, #0]
 8000278:	4618      	mov	r0, r3
 800027a:	f7ff ffad 	bl	80001d8 <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800027e:	697b      	ldr	r3, [r7, #20]
 8000280:	3301      	adds	r3, #1
 8000282:	617b      	str	r3, [r7, #20]
 8000284:	697a      	ldr	r2, [r7, #20]
 8000286:	687b      	ldr	r3, [r7, #4]
 8000288:	429a      	cmp	r2, r3
 800028a:	dbf1      	blt.n	8000270 <_write+0x12>
	}
	return len;
 800028c:	687b      	ldr	r3, [r7, #4]
}
 800028e:	4618      	mov	r0, r3
 8000290:	3718      	adds	r7, #24
 8000292:	46bd      	mov	sp, r7
 8000294:	bd80      	pop	{r7, pc}

08000296 <_close>:

int _close(int file)
{
 8000296:	b480      	push	{r7}
 8000298:	b083      	sub	sp, #12
 800029a:	af00      	add	r7, sp, #0
 800029c:	6078      	str	r0, [r7, #4]
	return -1;
 800029e:	f04f 33ff 	mov.w	r3, #4294967295
}
 80002a2:	4618      	mov	r0, r3
 80002a4:	370c      	adds	r7, #12
 80002a6:	46bd      	mov	sp, r7
 80002a8:	bc80      	pop	{r7}
 80002aa:	4770      	bx	lr

080002ac <_fstat>:


int _fstat(int file, struct stat *st)
{
 80002ac:	b480      	push	{r7}
 80002ae:	b083      	sub	sp, #12
 80002b0:	af00      	add	r7, sp, #0
 80002b2:	6078      	str	r0, [r7, #4]
 80002b4:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80002b6:	683b      	ldr	r3, [r7, #0]
 80002b8:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80002bc:	605a      	str	r2, [r3, #4]
	return 0;
 80002be:	2300      	movs	r3, #0
}
 80002c0:	4618      	mov	r0, r3
 80002c2:	370c      	adds	r7, #12
 80002c4:	46bd      	mov	sp, r7
 80002c6:	bc80      	pop	{r7}
 80002c8:	4770      	bx	lr

080002ca <_isatty>:

int _isatty(int file)
{
 80002ca:	b480      	push	{r7}
 80002cc:	b083      	sub	sp, #12
 80002ce:	af00      	add	r7, sp, #0
 80002d0:	6078      	str	r0, [r7, #4]
	return 1;
 80002d2:	2301      	movs	r3, #1
}
 80002d4:	4618      	mov	r0, r3
 80002d6:	370c      	adds	r7, #12
 80002d8:	46bd      	mov	sp, r7
 80002da:	bc80      	pop	{r7}
 80002dc:	4770      	bx	lr

080002de <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80002de:	b480      	push	{r7}
 80002e0:	b085      	sub	sp, #20
 80002e2:	af00      	add	r7, sp, #0
 80002e4:	60f8      	str	r0, [r7, #12]
 80002e6:	60b9      	str	r1, [r7, #8]
 80002e8:	607a      	str	r2, [r7, #4]
	return 0;
 80002ea:	2300      	movs	r3, #0
}
 80002ec:	4618      	mov	r0, r3
 80002ee:	3714      	adds	r7, #20
 80002f0:	46bd      	mov	sp, r7
 80002f2:	bc80      	pop	{r7}
 80002f4:	4770      	bx	lr
	...

080002f8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80002f8:	b580      	push	{r7, lr}
 80002fa:	b086      	sub	sp, #24
 80002fc:	af00      	add	r7, sp, #0
 80002fe:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000300:	4a14      	ldr	r2, [pc, #80]	; (8000354 <_sbrk+0x5c>)
 8000302:	4b15      	ldr	r3, [pc, #84]	; (8000358 <_sbrk+0x60>)
 8000304:	1ad3      	subs	r3, r2, r3
 8000306:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000308:	697b      	ldr	r3, [r7, #20]
 800030a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800030c:	4b13      	ldr	r3, [pc, #76]	; (800035c <_sbrk+0x64>)
 800030e:	681b      	ldr	r3, [r3, #0]
 8000310:	2b00      	cmp	r3, #0
 8000312:	d102      	bne.n	800031a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000314:	4b11      	ldr	r3, [pc, #68]	; (800035c <_sbrk+0x64>)
 8000316:	4a12      	ldr	r2, [pc, #72]	; (8000360 <_sbrk+0x68>)
 8000318:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800031a:	4b10      	ldr	r3, [pc, #64]	; (800035c <_sbrk+0x64>)
 800031c:	681a      	ldr	r2, [r3, #0]
 800031e:	687b      	ldr	r3, [r7, #4]
 8000320:	4413      	add	r3, r2
 8000322:	693a      	ldr	r2, [r7, #16]
 8000324:	429a      	cmp	r2, r3
 8000326:	d207      	bcs.n	8000338 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000328:	f000 f846 	bl	80003b8 <__errno>
 800032c:	4603      	mov	r3, r0
 800032e:	220c      	movs	r2, #12
 8000330:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000332:	f04f 33ff 	mov.w	r3, #4294967295
 8000336:	e009      	b.n	800034c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000338:	4b08      	ldr	r3, [pc, #32]	; (800035c <_sbrk+0x64>)
 800033a:	681b      	ldr	r3, [r3, #0]
 800033c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800033e:	4b07      	ldr	r3, [pc, #28]	; (800035c <_sbrk+0x64>)
 8000340:	681a      	ldr	r2, [r3, #0]
 8000342:	687b      	ldr	r3, [r7, #4]
 8000344:	4413      	add	r3, r2
 8000346:	4a05      	ldr	r2, [pc, #20]	; (800035c <_sbrk+0x64>)
 8000348:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800034a:	68fb      	ldr	r3, [r7, #12]
}
 800034c:	4618      	mov	r0, r3
 800034e:	3718      	adds	r7, #24
 8000350:	46bd      	mov	sp, r7
 8000352:	bd80      	pop	{r7, pc}
 8000354:	20004000 	.word	0x20004000
 8000358:	00000400 	.word	0x00000400
 800035c:	20000080 	.word	0x20000080
 8000360:	200000a0 	.word	0x200000a0

08000364 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000364:	480d      	ldr	r0, [pc, #52]	; (800039c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000366:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000368:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800036c:	480c      	ldr	r0, [pc, #48]	; (80003a0 <LoopForever+0x6>)
  ldr r1, =_edata
 800036e:	490d      	ldr	r1, [pc, #52]	; (80003a4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000370:	4a0d      	ldr	r2, [pc, #52]	; (80003a8 <LoopForever+0xe>)
  movs r3, #0
 8000372:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000374:	e002      	b.n	800037c <LoopCopyDataInit>

08000376 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000376:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000378:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800037a:	3304      	adds	r3, #4

0800037c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800037c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800037e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000380:	d3f9      	bcc.n	8000376 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000382:	4a0a      	ldr	r2, [pc, #40]	; (80003ac <LoopForever+0x12>)
  ldr r4, =_ebss
 8000384:	4c0a      	ldr	r4, [pc, #40]	; (80003b0 <LoopForever+0x16>)
  movs r3, #0
 8000386:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000388:	e001      	b.n	800038e <LoopFillZerobss>

0800038a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800038a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800038c:	3204      	adds	r2, #4

0800038e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800038e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000390:	d3fb      	bcc.n	800038a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000392:	f000 f817 	bl	80003c4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000396:	f7ff ff17 	bl	80001c8 <main>

0800039a <LoopForever>:

LoopForever:
    b LoopForever
 800039a:	e7fe      	b.n	800039a <LoopForever>
  ldr   r0, =_estack
 800039c:	20004000 	.word	0x20004000
  ldr r0, =_sdata
 80003a0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80003a4:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 80003a8:	08000e34 	.word	0x08000e34
  ldr r2, =_sbss
 80003ac:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 80003b0:	2000009c 	.word	0x2000009c

080003b4 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80003b4:	e7fe      	b.n	80003b4 <ADC1_2_IRQHandler>
	...

080003b8 <__errno>:
 80003b8:	4b01      	ldr	r3, [pc, #4]	; (80003c0 <__errno+0x8>)
 80003ba:	6818      	ldr	r0, [r3, #0]
 80003bc:	4770      	bx	lr
 80003be:	bf00      	nop
 80003c0:	20000000 	.word	0x20000000

080003c4 <__libc_init_array>:
 80003c4:	b570      	push	{r4, r5, r6, lr}
 80003c6:	4d0d      	ldr	r5, [pc, #52]	; (80003fc <__libc_init_array+0x38>)
 80003c8:	4c0d      	ldr	r4, [pc, #52]	; (8000400 <__libc_init_array+0x3c>)
 80003ca:	1b64      	subs	r4, r4, r5
 80003cc:	10a4      	asrs	r4, r4, #2
 80003ce:	2600      	movs	r6, #0
 80003d0:	42a6      	cmp	r6, r4
 80003d2:	d109      	bne.n	80003e8 <__libc_init_array+0x24>
 80003d4:	4d0b      	ldr	r5, [pc, #44]	; (8000404 <__libc_init_array+0x40>)
 80003d6:	4c0c      	ldr	r4, [pc, #48]	; (8000408 <__libc_init_array+0x44>)
 80003d8:	f000 fce4 	bl	8000da4 <_init>
 80003dc:	1b64      	subs	r4, r4, r5
 80003de:	10a4      	asrs	r4, r4, #2
 80003e0:	2600      	movs	r6, #0
 80003e2:	42a6      	cmp	r6, r4
 80003e4:	d105      	bne.n	80003f2 <__libc_init_array+0x2e>
 80003e6:	bd70      	pop	{r4, r5, r6, pc}
 80003e8:	f855 3b04 	ldr.w	r3, [r5], #4
 80003ec:	4798      	blx	r3
 80003ee:	3601      	adds	r6, #1
 80003f0:	e7ee      	b.n	80003d0 <__libc_init_array+0xc>
 80003f2:	f855 3b04 	ldr.w	r3, [r5], #4
 80003f6:	4798      	blx	r3
 80003f8:	3601      	adds	r6, #1
 80003fa:	e7f2      	b.n	80003e2 <__libc_init_array+0x1e>
 80003fc:	08000e2c 	.word	0x08000e2c
 8000400:	08000e2c 	.word	0x08000e2c
 8000404:	08000e2c 	.word	0x08000e2c
 8000408:	08000e30 	.word	0x08000e30

0800040c <memset>:
 800040c:	4402      	add	r2, r0
 800040e:	4603      	mov	r3, r0
 8000410:	4293      	cmp	r3, r2
 8000412:	d100      	bne.n	8000416 <memset+0xa>
 8000414:	4770      	bx	lr
 8000416:	f803 1b01 	strb.w	r1, [r3], #1
 800041a:	e7f9      	b.n	8000410 <memset+0x4>

0800041c <_puts_r>:
 800041c:	b570      	push	{r4, r5, r6, lr}
 800041e:	460e      	mov	r6, r1
 8000420:	4605      	mov	r5, r0
 8000422:	b118      	cbz	r0, 800042c <_puts_r+0x10>
 8000424:	6983      	ldr	r3, [r0, #24]
 8000426:	b90b      	cbnz	r3, 800042c <_puts_r+0x10>
 8000428:	f000 fa48 	bl	80008bc <__sinit>
 800042c:	69ab      	ldr	r3, [r5, #24]
 800042e:	68ac      	ldr	r4, [r5, #8]
 8000430:	b913      	cbnz	r3, 8000438 <_puts_r+0x1c>
 8000432:	4628      	mov	r0, r5
 8000434:	f000 fa42 	bl	80008bc <__sinit>
 8000438:	4b2c      	ldr	r3, [pc, #176]	; (80004ec <_puts_r+0xd0>)
 800043a:	429c      	cmp	r4, r3
 800043c:	d120      	bne.n	8000480 <_puts_r+0x64>
 800043e:	686c      	ldr	r4, [r5, #4]
 8000440:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000442:	07db      	lsls	r3, r3, #31
 8000444:	d405      	bmi.n	8000452 <_puts_r+0x36>
 8000446:	89a3      	ldrh	r3, [r4, #12]
 8000448:	0598      	lsls	r0, r3, #22
 800044a:	d402      	bmi.n	8000452 <_puts_r+0x36>
 800044c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800044e:	f000 fad3 	bl	80009f8 <__retarget_lock_acquire_recursive>
 8000452:	89a3      	ldrh	r3, [r4, #12]
 8000454:	0719      	lsls	r1, r3, #28
 8000456:	d51d      	bpl.n	8000494 <_puts_r+0x78>
 8000458:	6923      	ldr	r3, [r4, #16]
 800045a:	b1db      	cbz	r3, 8000494 <_puts_r+0x78>
 800045c:	3e01      	subs	r6, #1
 800045e:	68a3      	ldr	r3, [r4, #8]
 8000460:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000464:	3b01      	subs	r3, #1
 8000466:	60a3      	str	r3, [r4, #8]
 8000468:	bb39      	cbnz	r1, 80004ba <_puts_r+0x9e>
 800046a:	2b00      	cmp	r3, #0
 800046c:	da38      	bge.n	80004e0 <_puts_r+0xc4>
 800046e:	4622      	mov	r2, r4
 8000470:	210a      	movs	r1, #10
 8000472:	4628      	mov	r0, r5
 8000474:	f000 f848 	bl	8000508 <__swbuf_r>
 8000478:	3001      	adds	r0, #1
 800047a:	d011      	beq.n	80004a0 <_puts_r+0x84>
 800047c:	250a      	movs	r5, #10
 800047e:	e011      	b.n	80004a4 <_puts_r+0x88>
 8000480:	4b1b      	ldr	r3, [pc, #108]	; (80004f0 <_puts_r+0xd4>)
 8000482:	429c      	cmp	r4, r3
 8000484:	d101      	bne.n	800048a <_puts_r+0x6e>
 8000486:	68ac      	ldr	r4, [r5, #8]
 8000488:	e7da      	b.n	8000440 <_puts_r+0x24>
 800048a:	4b1a      	ldr	r3, [pc, #104]	; (80004f4 <_puts_r+0xd8>)
 800048c:	429c      	cmp	r4, r3
 800048e:	bf08      	it	eq
 8000490:	68ec      	ldreq	r4, [r5, #12]
 8000492:	e7d5      	b.n	8000440 <_puts_r+0x24>
 8000494:	4621      	mov	r1, r4
 8000496:	4628      	mov	r0, r5
 8000498:	f000 f888 	bl	80005ac <__swsetup_r>
 800049c:	2800      	cmp	r0, #0
 800049e:	d0dd      	beq.n	800045c <_puts_r+0x40>
 80004a0:	f04f 35ff 	mov.w	r5, #4294967295
 80004a4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80004a6:	07da      	lsls	r2, r3, #31
 80004a8:	d405      	bmi.n	80004b6 <_puts_r+0x9a>
 80004aa:	89a3      	ldrh	r3, [r4, #12]
 80004ac:	059b      	lsls	r3, r3, #22
 80004ae:	d402      	bmi.n	80004b6 <_puts_r+0x9a>
 80004b0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80004b2:	f000 faa2 	bl	80009fa <__retarget_lock_release_recursive>
 80004b6:	4628      	mov	r0, r5
 80004b8:	bd70      	pop	{r4, r5, r6, pc}
 80004ba:	2b00      	cmp	r3, #0
 80004bc:	da04      	bge.n	80004c8 <_puts_r+0xac>
 80004be:	69a2      	ldr	r2, [r4, #24]
 80004c0:	429a      	cmp	r2, r3
 80004c2:	dc06      	bgt.n	80004d2 <_puts_r+0xb6>
 80004c4:	290a      	cmp	r1, #10
 80004c6:	d004      	beq.n	80004d2 <_puts_r+0xb6>
 80004c8:	6823      	ldr	r3, [r4, #0]
 80004ca:	1c5a      	adds	r2, r3, #1
 80004cc:	6022      	str	r2, [r4, #0]
 80004ce:	7019      	strb	r1, [r3, #0]
 80004d0:	e7c5      	b.n	800045e <_puts_r+0x42>
 80004d2:	4622      	mov	r2, r4
 80004d4:	4628      	mov	r0, r5
 80004d6:	f000 f817 	bl	8000508 <__swbuf_r>
 80004da:	3001      	adds	r0, #1
 80004dc:	d1bf      	bne.n	800045e <_puts_r+0x42>
 80004de:	e7df      	b.n	80004a0 <_puts_r+0x84>
 80004e0:	6823      	ldr	r3, [r4, #0]
 80004e2:	250a      	movs	r5, #10
 80004e4:	1c5a      	adds	r2, r3, #1
 80004e6:	6022      	str	r2, [r4, #0]
 80004e8:	701d      	strb	r5, [r3, #0]
 80004ea:	e7db      	b.n	80004a4 <_puts_r+0x88>
 80004ec:	08000dec 	.word	0x08000dec
 80004f0:	08000e0c 	.word	0x08000e0c
 80004f4:	08000dcc 	.word	0x08000dcc

080004f8 <puts>:
 80004f8:	4b02      	ldr	r3, [pc, #8]	; (8000504 <puts+0xc>)
 80004fa:	4601      	mov	r1, r0
 80004fc:	6818      	ldr	r0, [r3, #0]
 80004fe:	f7ff bf8d 	b.w	800041c <_puts_r>
 8000502:	bf00      	nop
 8000504:	20000000 	.word	0x20000000

08000508 <__swbuf_r>:
 8000508:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800050a:	460e      	mov	r6, r1
 800050c:	4614      	mov	r4, r2
 800050e:	4605      	mov	r5, r0
 8000510:	b118      	cbz	r0, 800051a <__swbuf_r+0x12>
 8000512:	6983      	ldr	r3, [r0, #24]
 8000514:	b90b      	cbnz	r3, 800051a <__swbuf_r+0x12>
 8000516:	f000 f9d1 	bl	80008bc <__sinit>
 800051a:	4b21      	ldr	r3, [pc, #132]	; (80005a0 <__swbuf_r+0x98>)
 800051c:	429c      	cmp	r4, r3
 800051e:	d12b      	bne.n	8000578 <__swbuf_r+0x70>
 8000520:	686c      	ldr	r4, [r5, #4]
 8000522:	69a3      	ldr	r3, [r4, #24]
 8000524:	60a3      	str	r3, [r4, #8]
 8000526:	89a3      	ldrh	r3, [r4, #12]
 8000528:	071a      	lsls	r2, r3, #28
 800052a:	d52f      	bpl.n	800058c <__swbuf_r+0x84>
 800052c:	6923      	ldr	r3, [r4, #16]
 800052e:	b36b      	cbz	r3, 800058c <__swbuf_r+0x84>
 8000530:	6923      	ldr	r3, [r4, #16]
 8000532:	6820      	ldr	r0, [r4, #0]
 8000534:	1ac0      	subs	r0, r0, r3
 8000536:	6963      	ldr	r3, [r4, #20]
 8000538:	b2f6      	uxtb	r6, r6
 800053a:	4283      	cmp	r3, r0
 800053c:	4637      	mov	r7, r6
 800053e:	dc04      	bgt.n	800054a <__swbuf_r+0x42>
 8000540:	4621      	mov	r1, r4
 8000542:	4628      	mov	r0, r5
 8000544:	f000 f926 	bl	8000794 <_fflush_r>
 8000548:	bb30      	cbnz	r0, 8000598 <__swbuf_r+0x90>
 800054a:	68a3      	ldr	r3, [r4, #8]
 800054c:	3b01      	subs	r3, #1
 800054e:	60a3      	str	r3, [r4, #8]
 8000550:	6823      	ldr	r3, [r4, #0]
 8000552:	1c5a      	adds	r2, r3, #1
 8000554:	6022      	str	r2, [r4, #0]
 8000556:	701e      	strb	r6, [r3, #0]
 8000558:	6963      	ldr	r3, [r4, #20]
 800055a:	3001      	adds	r0, #1
 800055c:	4283      	cmp	r3, r0
 800055e:	d004      	beq.n	800056a <__swbuf_r+0x62>
 8000560:	89a3      	ldrh	r3, [r4, #12]
 8000562:	07db      	lsls	r3, r3, #31
 8000564:	d506      	bpl.n	8000574 <__swbuf_r+0x6c>
 8000566:	2e0a      	cmp	r6, #10
 8000568:	d104      	bne.n	8000574 <__swbuf_r+0x6c>
 800056a:	4621      	mov	r1, r4
 800056c:	4628      	mov	r0, r5
 800056e:	f000 f911 	bl	8000794 <_fflush_r>
 8000572:	b988      	cbnz	r0, 8000598 <__swbuf_r+0x90>
 8000574:	4638      	mov	r0, r7
 8000576:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000578:	4b0a      	ldr	r3, [pc, #40]	; (80005a4 <__swbuf_r+0x9c>)
 800057a:	429c      	cmp	r4, r3
 800057c:	d101      	bne.n	8000582 <__swbuf_r+0x7a>
 800057e:	68ac      	ldr	r4, [r5, #8]
 8000580:	e7cf      	b.n	8000522 <__swbuf_r+0x1a>
 8000582:	4b09      	ldr	r3, [pc, #36]	; (80005a8 <__swbuf_r+0xa0>)
 8000584:	429c      	cmp	r4, r3
 8000586:	bf08      	it	eq
 8000588:	68ec      	ldreq	r4, [r5, #12]
 800058a:	e7ca      	b.n	8000522 <__swbuf_r+0x1a>
 800058c:	4621      	mov	r1, r4
 800058e:	4628      	mov	r0, r5
 8000590:	f000 f80c 	bl	80005ac <__swsetup_r>
 8000594:	2800      	cmp	r0, #0
 8000596:	d0cb      	beq.n	8000530 <__swbuf_r+0x28>
 8000598:	f04f 37ff 	mov.w	r7, #4294967295
 800059c:	e7ea      	b.n	8000574 <__swbuf_r+0x6c>
 800059e:	bf00      	nop
 80005a0:	08000dec 	.word	0x08000dec
 80005a4:	08000e0c 	.word	0x08000e0c
 80005a8:	08000dcc 	.word	0x08000dcc

080005ac <__swsetup_r>:
 80005ac:	4b32      	ldr	r3, [pc, #200]	; (8000678 <__swsetup_r+0xcc>)
 80005ae:	b570      	push	{r4, r5, r6, lr}
 80005b0:	681d      	ldr	r5, [r3, #0]
 80005b2:	4606      	mov	r6, r0
 80005b4:	460c      	mov	r4, r1
 80005b6:	b125      	cbz	r5, 80005c2 <__swsetup_r+0x16>
 80005b8:	69ab      	ldr	r3, [r5, #24]
 80005ba:	b913      	cbnz	r3, 80005c2 <__swsetup_r+0x16>
 80005bc:	4628      	mov	r0, r5
 80005be:	f000 f97d 	bl	80008bc <__sinit>
 80005c2:	4b2e      	ldr	r3, [pc, #184]	; (800067c <__swsetup_r+0xd0>)
 80005c4:	429c      	cmp	r4, r3
 80005c6:	d10f      	bne.n	80005e8 <__swsetup_r+0x3c>
 80005c8:	686c      	ldr	r4, [r5, #4]
 80005ca:	89a3      	ldrh	r3, [r4, #12]
 80005cc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80005d0:	0719      	lsls	r1, r3, #28
 80005d2:	d42c      	bmi.n	800062e <__swsetup_r+0x82>
 80005d4:	06dd      	lsls	r5, r3, #27
 80005d6:	d411      	bmi.n	80005fc <__swsetup_r+0x50>
 80005d8:	2309      	movs	r3, #9
 80005da:	6033      	str	r3, [r6, #0]
 80005dc:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80005e0:	81a3      	strh	r3, [r4, #12]
 80005e2:	f04f 30ff 	mov.w	r0, #4294967295
 80005e6:	e03e      	b.n	8000666 <__swsetup_r+0xba>
 80005e8:	4b25      	ldr	r3, [pc, #148]	; (8000680 <__swsetup_r+0xd4>)
 80005ea:	429c      	cmp	r4, r3
 80005ec:	d101      	bne.n	80005f2 <__swsetup_r+0x46>
 80005ee:	68ac      	ldr	r4, [r5, #8]
 80005f0:	e7eb      	b.n	80005ca <__swsetup_r+0x1e>
 80005f2:	4b24      	ldr	r3, [pc, #144]	; (8000684 <__swsetup_r+0xd8>)
 80005f4:	429c      	cmp	r4, r3
 80005f6:	bf08      	it	eq
 80005f8:	68ec      	ldreq	r4, [r5, #12]
 80005fa:	e7e6      	b.n	80005ca <__swsetup_r+0x1e>
 80005fc:	0758      	lsls	r0, r3, #29
 80005fe:	d512      	bpl.n	8000626 <__swsetup_r+0x7a>
 8000600:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000602:	b141      	cbz	r1, 8000616 <__swsetup_r+0x6a>
 8000604:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000608:	4299      	cmp	r1, r3
 800060a:	d002      	beq.n	8000612 <__swsetup_r+0x66>
 800060c:	4630      	mov	r0, r6
 800060e:	f000 fa59 	bl	8000ac4 <_free_r>
 8000612:	2300      	movs	r3, #0
 8000614:	6363      	str	r3, [r4, #52]	; 0x34
 8000616:	89a3      	ldrh	r3, [r4, #12]
 8000618:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800061c:	81a3      	strh	r3, [r4, #12]
 800061e:	2300      	movs	r3, #0
 8000620:	6063      	str	r3, [r4, #4]
 8000622:	6923      	ldr	r3, [r4, #16]
 8000624:	6023      	str	r3, [r4, #0]
 8000626:	89a3      	ldrh	r3, [r4, #12]
 8000628:	f043 0308 	orr.w	r3, r3, #8
 800062c:	81a3      	strh	r3, [r4, #12]
 800062e:	6923      	ldr	r3, [r4, #16]
 8000630:	b94b      	cbnz	r3, 8000646 <__swsetup_r+0x9a>
 8000632:	89a3      	ldrh	r3, [r4, #12]
 8000634:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000638:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800063c:	d003      	beq.n	8000646 <__swsetup_r+0x9a>
 800063e:	4621      	mov	r1, r4
 8000640:	4630      	mov	r0, r6
 8000642:	f000 f9ff 	bl	8000a44 <__smakebuf_r>
 8000646:	89a0      	ldrh	r0, [r4, #12]
 8000648:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800064c:	f010 0301 	ands.w	r3, r0, #1
 8000650:	d00a      	beq.n	8000668 <__swsetup_r+0xbc>
 8000652:	2300      	movs	r3, #0
 8000654:	60a3      	str	r3, [r4, #8]
 8000656:	6963      	ldr	r3, [r4, #20]
 8000658:	425b      	negs	r3, r3
 800065a:	61a3      	str	r3, [r4, #24]
 800065c:	6923      	ldr	r3, [r4, #16]
 800065e:	b943      	cbnz	r3, 8000672 <__swsetup_r+0xc6>
 8000660:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000664:	d1ba      	bne.n	80005dc <__swsetup_r+0x30>
 8000666:	bd70      	pop	{r4, r5, r6, pc}
 8000668:	0781      	lsls	r1, r0, #30
 800066a:	bf58      	it	pl
 800066c:	6963      	ldrpl	r3, [r4, #20]
 800066e:	60a3      	str	r3, [r4, #8]
 8000670:	e7f4      	b.n	800065c <__swsetup_r+0xb0>
 8000672:	2000      	movs	r0, #0
 8000674:	e7f7      	b.n	8000666 <__swsetup_r+0xba>
 8000676:	bf00      	nop
 8000678:	20000000 	.word	0x20000000
 800067c:	08000dec 	.word	0x08000dec
 8000680:	08000e0c 	.word	0x08000e0c
 8000684:	08000dcc 	.word	0x08000dcc

08000688 <__sflush_r>:
 8000688:	898a      	ldrh	r2, [r1, #12]
 800068a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800068e:	4605      	mov	r5, r0
 8000690:	0710      	lsls	r0, r2, #28
 8000692:	460c      	mov	r4, r1
 8000694:	d458      	bmi.n	8000748 <__sflush_r+0xc0>
 8000696:	684b      	ldr	r3, [r1, #4]
 8000698:	2b00      	cmp	r3, #0
 800069a:	dc05      	bgt.n	80006a8 <__sflush_r+0x20>
 800069c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800069e:	2b00      	cmp	r3, #0
 80006a0:	dc02      	bgt.n	80006a8 <__sflush_r+0x20>
 80006a2:	2000      	movs	r0, #0
 80006a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80006a8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80006aa:	2e00      	cmp	r6, #0
 80006ac:	d0f9      	beq.n	80006a2 <__sflush_r+0x1a>
 80006ae:	2300      	movs	r3, #0
 80006b0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80006b4:	682f      	ldr	r7, [r5, #0]
 80006b6:	602b      	str	r3, [r5, #0]
 80006b8:	d032      	beq.n	8000720 <__sflush_r+0x98>
 80006ba:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80006bc:	89a3      	ldrh	r3, [r4, #12]
 80006be:	075a      	lsls	r2, r3, #29
 80006c0:	d505      	bpl.n	80006ce <__sflush_r+0x46>
 80006c2:	6863      	ldr	r3, [r4, #4]
 80006c4:	1ac0      	subs	r0, r0, r3
 80006c6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80006c8:	b10b      	cbz	r3, 80006ce <__sflush_r+0x46>
 80006ca:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80006cc:	1ac0      	subs	r0, r0, r3
 80006ce:	2300      	movs	r3, #0
 80006d0:	4602      	mov	r2, r0
 80006d2:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80006d4:	6a21      	ldr	r1, [r4, #32]
 80006d6:	4628      	mov	r0, r5
 80006d8:	47b0      	blx	r6
 80006da:	1c43      	adds	r3, r0, #1
 80006dc:	89a3      	ldrh	r3, [r4, #12]
 80006de:	d106      	bne.n	80006ee <__sflush_r+0x66>
 80006e0:	6829      	ldr	r1, [r5, #0]
 80006e2:	291d      	cmp	r1, #29
 80006e4:	d82c      	bhi.n	8000740 <__sflush_r+0xb8>
 80006e6:	4a2a      	ldr	r2, [pc, #168]	; (8000790 <__sflush_r+0x108>)
 80006e8:	40ca      	lsrs	r2, r1
 80006ea:	07d6      	lsls	r6, r2, #31
 80006ec:	d528      	bpl.n	8000740 <__sflush_r+0xb8>
 80006ee:	2200      	movs	r2, #0
 80006f0:	6062      	str	r2, [r4, #4]
 80006f2:	04d9      	lsls	r1, r3, #19
 80006f4:	6922      	ldr	r2, [r4, #16]
 80006f6:	6022      	str	r2, [r4, #0]
 80006f8:	d504      	bpl.n	8000704 <__sflush_r+0x7c>
 80006fa:	1c42      	adds	r2, r0, #1
 80006fc:	d101      	bne.n	8000702 <__sflush_r+0x7a>
 80006fe:	682b      	ldr	r3, [r5, #0]
 8000700:	b903      	cbnz	r3, 8000704 <__sflush_r+0x7c>
 8000702:	6560      	str	r0, [r4, #84]	; 0x54
 8000704:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000706:	602f      	str	r7, [r5, #0]
 8000708:	2900      	cmp	r1, #0
 800070a:	d0ca      	beq.n	80006a2 <__sflush_r+0x1a>
 800070c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000710:	4299      	cmp	r1, r3
 8000712:	d002      	beq.n	800071a <__sflush_r+0x92>
 8000714:	4628      	mov	r0, r5
 8000716:	f000 f9d5 	bl	8000ac4 <_free_r>
 800071a:	2000      	movs	r0, #0
 800071c:	6360      	str	r0, [r4, #52]	; 0x34
 800071e:	e7c1      	b.n	80006a4 <__sflush_r+0x1c>
 8000720:	6a21      	ldr	r1, [r4, #32]
 8000722:	2301      	movs	r3, #1
 8000724:	4628      	mov	r0, r5
 8000726:	47b0      	blx	r6
 8000728:	1c41      	adds	r1, r0, #1
 800072a:	d1c7      	bne.n	80006bc <__sflush_r+0x34>
 800072c:	682b      	ldr	r3, [r5, #0]
 800072e:	2b00      	cmp	r3, #0
 8000730:	d0c4      	beq.n	80006bc <__sflush_r+0x34>
 8000732:	2b1d      	cmp	r3, #29
 8000734:	d001      	beq.n	800073a <__sflush_r+0xb2>
 8000736:	2b16      	cmp	r3, #22
 8000738:	d101      	bne.n	800073e <__sflush_r+0xb6>
 800073a:	602f      	str	r7, [r5, #0]
 800073c:	e7b1      	b.n	80006a2 <__sflush_r+0x1a>
 800073e:	89a3      	ldrh	r3, [r4, #12]
 8000740:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000744:	81a3      	strh	r3, [r4, #12]
 8000746:	e7ad      	b.n	80006a4 <__sflush_r+0x1c>
 8000748:	690f      	ldr	r7, [r1, #16]
 800074a:	2f00      	cmp	r7, #0
 800074c:	d0a9      	beq.n	80006a2 <__sflush_r+0x1a>
 800074e:	0793      	lsls	r3, r2, #30
 8000750:	680e      	ldr	r6, [r1, #0]
 8000752:	bf08      	it	eq
 8000754:	694b      	ldreq	r3, [r1, #20]
 8000756:	600f      	str	r7, [r1, #0]
 8000758:	bf18      	it	ne
 800075a:	2300      	movne	r3, #0
 800075c:	eba6 0807 	sub.w	r8, r6, r7
 8000760:	608b      	str	r3, [r1, #8]
 8000762:	f1b8 0f00 	cmp.w	r8, #0
 8000766:	dd9c      	ble.n	80006a2 <__sflush_r+0x1a>
 8000768:	6a21      	ldr	r1, [r4, #32]
 800076a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800076c:	4643      	mov	r3, r8
 800076e:	463a      	mov	r2, r7
 8000770:	4628      	mov	r0, r5
 8000772:	47b0      	blx	r6
 8000774:	2800      	cmp	r0, #0
 8000776:	dc06      	bgt.n	8000786 <__sflush_r+0xfe>
 8000778:	89a3      	ldrh	r3, [r4, #12]
 800077a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800077e:	81a3      	strh	r3, [r4, #12]
 8000780:	f04f 30ff 	mov.w	r0, #4294967295
 8000784:	e78e      	b.n	80006a4 <__sflush_r+0x1c>
 8000786:	4407      	add	r7, r0
 8000788:	eba8 0800 	sub.w	r8, r8, r0
 800078c:	e7e9      	b.n	8000762 <__sflush_r+0xda>
 800078e:	bf00      	nop
 8000790:	20400001 	.word	0x20400001

08000794 <_fflush_r>:
 8000794:	b538      	push	{r3, r4, r5, lr}
 8000796:	690b      	ldr	r3, [r1, #16]
 8000798:	4605      	mov	r5, r0
 800079a:	460c      	mov	r4, r1
 800079c:	b913      	cbnz	r3, 80007a4 <_fflush_r+0x10>
 800079e:	2500      	movs	r5, #0
 80007a0:	4628      	mov	r0, r5
 80007a2:	bd38      	pop	{r3, r4, r5, pc}
 80007a4:	b118      	cbz	r0, 80007ae <_fflush_r+0x1a>
 80007a6:	6983      	ldr	r3, [r0, #24]
 80007a8:	b90b      	cbnz	r3, 80007ae <_fflush_r+0x1a>
 80007aa:	f000 f887 	bl	80008bc <__sinit>
 80007ae:	4b14      	ldr	r3, [pc, #80]	; (8000800 <_fflush_r+0x6c>)
 80007b0:	429c      	cmp	r4, r3
 80007b2:	d11b      	bne.n	80007ec <_fflush_r+0x58>
 80007b4:	686c      	ldr	r4, [r5, #4]
 80007b6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80007ba:	2b00      	cmp	r3, #0
 80007bc:	d0ef      	beq.n	800079e <_fflush_r+0xa>
 80007be:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80007c0:	07d0      	lsls	r0, r2, #31
 80007c2:	d404      	bmi.n	80007ce <_fflush_r+0x3a>
 80007c4:	0599      	lsls	r1, r3, #22
 80007c6:	d402      	bmi.n	80007ce <_fflush_r+0x3a>
 80007c8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80007ca:	f000 f915 	bl	80009f8 <__retarget_lock_acquire_recursive>
 80007ce:	4628      	mov	r0, r5
 80007d0:	4621      	mov	r1, r4
 80007d2:	f7ff ff59 	bl	8000688 <__sflush_r>
 80007d6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80007d8:	07da      	lsls	r2, r3, #31
 80007da:	4605      	mov	r5, r0
 80007dc:	d4e0      	bmi.n	80007a0 <_fflush_r+0xc>
 80007de:	89a3      	ldrh	r3, [r4, #12]
 80007e0:	059b      	lsls	r3, r3, #22
 80007e2:	d4dd      	bmi.n	80007a0 <_fflush_r+0xc>
 80007e4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80007e6:	f000 f908 	bl	80009fa <__retarget_lock_release_recursive>
 80007ea:	e7d9      	b.n	80007a0 <_fflush_r+0xc>
 80007ec:	4b05      	ldr	r3, [pc, #20]	; (8000804 <_fflush_r+0x70>)
 80007ee:	429c      	cmp	r4, r3
 80007f0:	d101      	bne.n	80007f6 <_fflush_r+0x62>
 80007f2:	68ac      	ldr	r4, [r5, #8]
 80007f4:	e7df      	b.n	80007b6 <_fflush_r+0x22>
 80007f6:	4b04      	ldr	r3, [pc, #16]	; (8000808 <_fflush_r+0x74>)
 80007f8:	429c      	cmp	r4, r3
 80007fa:	bf08      	it	eq
 80007fc:	68ec      	ldreq	r4, [r5, #12]
 80007fe:	e7da      	b.n	80007b6 <_fflush_r+0x22>
 8000800:	08000dec 	.word	0x08000dec
 8000804:	08000e0c 	.word	0x08000e0c
 8000808:	08000dcc 	.word	0x08000dcc

0800080c <std>:
 800080c:	2300      	movs	r3, #0
 800080e:	b510      	push	{r4, lr}
 8000810:	4604      	mov	r4, r0
 8000812:	e9c0 3300 	strd	r3, r3, [r0]
 8000816:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800081a:	6083      	str	r3, [r0, #8]
 800081c:	8181      	strh	r1, [r0, #12]
 800081e:	6643      	str	r3, [r0, #100]	; 0x64
 8000820:	81c2      	strh	r2, [r0, #14]
 8000822:	6183      	str	r3, [r0, #24]
 8000824:	4619      	mov	r1, r3
 8000826:	2208      	movs	r2, #8
 8000828:	305c      	adds	r0, #92	; 0x5c
 800082a:	f7ff fdef 	bl	800040c <memset>
 800082e:	4b05      	ldr	r3, [pc, #20]	; (8000844 <std+0x38>)
 8000830:	6263      	str	r3, [r4, #36]	; 0x24
 8000832:	4b05      	ldr	r3, [pc, #20]	; (8000848 <std+0x3c>)
 8000834:	62a3      	str	r3, [r4, #40]	; 0x28
 8000836:	4b05      	ldr	r3, [pc, #20]	; (800084c <std+0x40>)
 8000838:	62e3      	str	r3, [r4, #44]	; 0x2c
 800083a:	4b05      	ldr	r3, [pc, #20]	; (8000850 <std+0x44>)
 800083c:	6224      	str	r4, [r4, #32]
 800083e:	6323      	str	r3, [r4, #48]	; 0x30
 8000840:	bd10      	pop	{r4, pc}
 8000842:	bf00      	nop
 8000844:	08000c35 	.word	0x08000c35
 8000848:	08000c57 	.word	0x08000c57
 800084c:	08000c8f 	.word	0x08000c8f
 8000850:	08000cb3 	.word	0x08000cb3

08000854 <_cleanup_r>:
 8000854:	4901      	ldr	r1, [pc, #4]	; (800085c <_cleanup_r+0x8>)
 8000856:	f000 b8af 	b.w	80009b8 <_fwalk_reent>
 800085a:	bf00      	nop
 800085c:	08000795 	.word	0x08000795

08000860 <__sfmoreglue>:
 8000860:	b570      	push	{r4, r5, r6, lr}
 8000862:	1e4a      	subs	r2, r1, #1
 8000864:	2568      	movs	r5, #104	; 0x68
 8000866:	4355      	muls	r5, r2
 8000868:	460e      	mov	r6, r1
 800086a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800086e:	f000 f977 	bl	8000b60 <_malloc_r>
 8000872:	4604      	mov	r4, r0
 8000874:	b140      	cbz	r0, 8000888 <__sfmoreglue+0x28>
 8000876:	2100      	movs	r1, #0
 8000878:	e9c0 1600 	strd	r1, r6, [r0]
 800087c:	300c      	adds	r0, #12
 800087e:	60a0      	str	r0, [r4, #8]
 8000880:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000884:	f7ff fdc2 	bl	800040c <memset>
 8000888:	4620      	mov	r0, r4
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__sfp_lock_acquire>:
 800088c:	4801      	ldr	r0, [pc, #4]	; (8000894 <__sfp_lock_acquire+0x8>)
 800088e:	f000 b8b3 	b.w	80009f8 <__retarget_lock_acquire_recursive>
 8000892:	bf00      	nop
 8000894:	20000094 	.word	0x20000094

08000898 <__sfp_lock_release>:
 8000898:	4801      	ldr	r0, [pc, #4]	; (80008a0 <__sfp_lock_release+0x8>)
 800089a:	f000 b8ae 	b.w	80009fa <__retarget_lock_release_recursive>
 800089e:	bf00      	nop
 80008a0:	20000094 	.word	0x20000094

080008a4 <__sinit_lock_acquire>:
 80008a4:	4801      	ldr	r0, [pc, #4]	; (80008ac <__sinit_lock_acquire+0x8>)
 80008a6:	f000 b8a7 	b.w	80009f8 <__retarget_lock_acquire_recursive>
 80008aa:	bf00      	nop
 80008ac:	2000008f 	.word	0x2000008f

080008b0 <__sinit_lock_release>:
 80008b0:	4801      	ldr	r0, [pc, #4]	; (80008b8 <__sinit_lock_release+0x8>)
 80008b2:	f000 b8a2 	b.w	80009fa <__retarget_lock_release_recursive>
 80008b6:	bf00      	nop
 80008b8:	2000008f 	.word	0x2000008f

080008bc <__sinit>:
 80008bc:	b510      	push	{r4, lr}
 80008be:	4604      	mov	r4, r0
 80008c0:	f7ff fff0 	bl	80008a4 <__sinit_lock_acquire>
 80008c4:	69a3      	ldr	r3, [r4, #24]
 80008c6:	b11b      	cbz	r3, 80008d0 <__sinit+0x14>
 80008c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80008cc:	f7ff bff0 	b.w	80008b0 <__sinit_lock_release>
 80008d0:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80008d4:	6523      	str	r3, [r4, #80]	; 0x50
 80008d6:	4b13      	ldr	r3, [pc, #76]	; (8000924 <__sinit+0x68>)
 80008d8:	4a13      	ldr	r2, [pc, #76]	; (8000928 <__sinit+0x6c>)
 80008da:	681b      	ldr	r3, [r3, #0]
 80008dc:	62a2      	str	r2, [r4, #40]	; 0x28
 80008de:	42a3      	cmp	r3, r4
 80008e0:	bf04      	itt	eq
 80008e2:	2301      	moveq	r3, #1
 80008e4:	61a3      	streq	r3, [r4, #24]
 80008e6:	4620      	mov	r0, r4
 80008e8:	f000 f820 	bl	800092c <__sfp>
 80008ec:	6060      	str	r0, [r4, #4]
 80008ee:	4620      	mov	r0, r4
 80008f0:	f000 f81c 	bl	800092c <__sfp>
 80008f4:	60a0      	str	r0, [r4, #8]
 80008f6:	4620      	mov	r0, r4
 80008f8:	f000 f818 	bl	800092c <__sfp>
 80008fc:	2200      	movs	r2, #0
 80008fe:	60e0      	str	r0, [r4, #12]
 8000900:	2104      	movs	r1, #4
 8000902:	6860      	ldr	r0, [r4, #4]
 8000904:	f7ff ff82 	bl	800080c <std>
 8000908:	68a0      	ldr	r0, [r4, #8]
 800090a:	2201      	movs	r2, #1
 800090c:	2109      	movs	r1, #9
 800090e:	f7ff ff7d 	bl	800080c <std>
 8000912:	68e0      	ldr	r0, [r4, #12]
 8000914:	2202      	movs	r2, #2
 8000916:	2112      	movs	r1, #18
 8000918:	f7ff ff78 	bl	800080c <std>
 800091c:	2301      	movs	r3, #1
 800091e:	61a3      	str	r3, [r4, #24]
 8000920:	e7d2      	b.n	80008c8 <__sinit+0xc>
 8000922:	bf00      	nop
 8000924:	08000dc8 	.word	0x08000dc8
 8000928:	08000855 	.word	0x08000855

0800092c <__sfp>:
 800092c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800092e:	4607      	mov	r7, r0
 8000930:	f7ff ffac 	bl	800088c <__sfp_lock_acquire>
 8000934:	4b1e      	ldr	r3, [pc, #120]	; (80009b0 <__sfp+0x84>)
 8000936:	681e      	ldr	r6, [r3, #0]
 8000938:	69b3      	ldr	r3, [r6, #24]
 800093a:	b913      	cbnz	r3, 8000942 <__sfp+0x16>
 800093c:	4630      	mov	r0, r6
 800093e:	f7ff ffbd 	bl	80008bc <__sinit>
 8000942:	3648      	adds	r6, #72	; 0x48
 8000944:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000948:	3b01      	subs	r3, #1
 800094a:	d503      	bpl.n	8000954 <__sfp+0x28>
 800094c:	6833      	ldr	r3, [r6, #0]
 800094e:	b30b      	cbz	r3, 8000994 <__sfp+0x68>
 8000950:	6836      	ldr	r6, [r6, #0]
 8000952:	e7f7      	b.n	8000944 <__sfp+0x18>
 8000954:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000958:	b9d5      	cbnz	r5, 8000990 <__sfp+0x64>
 800095a:	4b16      	ldr	r3, [pc, #88]	; (80009b4 <__sfp+0x88>)
 800095c:	60e3      	str	r3, [r4, #12]
 800095e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000962:	6665      	str	r5, [r4, #100]	; 0x64
 8000964:	f000 f847 	bl	80009f6 <__retarget_lock_init_recursive>
 8000968:	f7ff ff96 	bl	8000898 <__sfp_lock_release>
 800096c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000970:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000974:	6025      	str	r5, [r4, #0]
 8000976:	61a5      	str	r5, [r4, #24]
 8000978:	2208      	movs	r2, #8
 800097a:	4629      	mov	r1, r5
 800097c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000980:	f7ff fd44 	bl	800040c <memset>
 8000984:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000988:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800098c:	4620      	mov	r0, r4
 800098e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000990:	3468      	adds	r4, #104	; 0x68
 8000992:	e7d9      	b.n	8000948 <__sfp+0x1c>
 8000994:	2104      	movs	r1, #4
 8000996:	4638      	mov	r0, r7
 8000998:	f7ff ff62 	bl	8000860 <__sfmoreglue>
 800099c:	4604      	mov	r4, r0
 800099e:	6030      	str	r0, [r6, #0]
 80009a0:	2800      	cmp	r0, #0
 80009a2:	d1d5      	bne.n	8000950 <__sfp+0x24>
 80009a4:	f7ff ff78 	bl	8000898 <__sfp_lock_release>
 80009a8:	230c      	movs	r3, #12
 80009aa:	603b      	str	r3, [r7, #0]
 80009ac:	e7ee      	b.n	800098c <__sfp+0x60>
 80009ae:	bf00      	nop
 80009b0:	08000dc8 	.word	0x08000dc8
 80009b4:	ffff0001 	.word	0xffff0001

080009b8 <_fwalk_reent>:
 80009b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80009bc:	4606      	mov	r6, r0
 80009be:	4688      	mov	r8, r1
 80009c0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80009c4:	2700      	movs	r7, #0
 80009c6:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80009ca:	f1b9 0901 	subs.w	r9, r9, #1
 80009ce:	d505      	bpl.n	80009dc <_fwalk_reent+0x24>
 80009d0:	6824      	ldr	r4, [r4, #0]
 80009d2:	2c00      	cmp	r4, #0
 80009d4:	d1f7      	bne.n	80009c6 <_fwalk_reent+0xe>
 80009d6:	4638      	mov	r0, r7
 80009d8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80009dc:	89ab      	ldrh	r3, [r5, #12]
 80009de:	2b01      	cmp	r3, #1
 80009e0:	d907      	bls.n	80009f2 <_fwalk_reent+0x3a>
 80009e2:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80009e6:	3301      	adds	r3, #1
 80009e8:	d003      	beq.n	80009f2 <_fwalk_reent+0x3a>
 80009ea:	4629      	mov	r1, r5
 80009ec:	4630      	mov	r0, r6
 80009ee:	47c0      	blx	r8
 80009f0:	4307      	orrs	r7, r0
 80009f2:	3568      	adds	r5, #104	; 0x68
 80009f4:	e7e9      	b.n	80009ca <_fwalk_reent+0x12>

080009f6 <__retarget_lock_init_recursive>:
 80009f6:	4770      	bx	lr

080009f8 <__retarget_lock_acquire_recursive>:
 80009f8:	4770      	bx	lr

080009fa <__retarget_lock_release_recursive>:
 80009fa:	4770      	bx	lr

080009fc <__swhatbuf_r>:
 80009fc:	b570      	push	{r4, r5, r6, lr}
 80009fe:	460e      	mov	r6, r1
 8000a00:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000a04:	2900      	cmp	r1, #0
 8000a06:	b096      	sub	sp, #88	; 0x58
 8000a08:	4614      	mov	r4, r2
 8000a0a:	461d      	mov	r5, r3
 8000a0c:	da07      	bge.n	8000a1e <__swhatbuf_r+0x22>
 8000a0e:	2300      	movs	r3, #0
 8000a10:	602b      	str	r3, [r5, #0]
 8000a12:	89b3      	ldrh	r3, [r6, #12]
 8000a14:	061a      	lsls	r2, r3, #24
 8000a16:	d410      	bmi.n	8000a3a <__swhatbuf_r+0x3e>
 8000a18:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000a1c:	e00e      	b.n	8000a3c <__swhatbuf_r+0x40>
 8000a1e:	466a      	mov	r2, sp
 8000a20:	f000 f96e 	bl	8000d00 <_fstat_r>
 8000a24:	2800      	cmp	r0, #0
 8000a26:	dbf2      	blt.n	8000a0e <__swhatbuf_r+0x12>
 8000a28:	9a01      	ldr	r2, [sp, #4]
 8000a2a:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000a2e:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000a32:	425a      	negs	r2, r3
 8000a34:	415a      	adcs	r2, r3
 8000a36:	602a      	str	r2, [r5, #0]
 8000a38:	e7ee      	b.n	8000a18 <__swhatbuf_r+0x1c>
 8000a3a:	2340      	movs	r3, #64	; 0x40
 8000a3c:	2000      	movs	r0, #0
 8000a3e:	6023      	str	r3, [r4, #0]
 8000a40:	b016      	add	sp, #88	; 0x58
 8000a42:	bd70      	pop	{r4, r5, r6, pc}

08000a44 <__smakebuf_r>:
 8000a44:	898b      	ldrh	r3, [r1, #12]
 8000a46:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000a48:	079d      	lsls	r5, r3, #30
 8000a4a:	4606      	mov	r6, r0
 8000a4c:	460c      	mov	r4, r1
 8000a4e:	d507      	bpl.n	8000a60 <__smakebuf_r+0x1c>
 8000a50:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000a54:	6023      	str	r3, [r4, #0]
 8000a56:	6123      	str	r3, [r4, #16]
 8000a58:	2301      	movs	r3, #1
 8000a5a:	6163      	str	r3, [r4, #20]
 8000a5c:	b002      	add	sp, #8
 8000a5e:	bd70      	pop	{r4, r5, r6, pc}
 8000a60:	ab01      	add	r3, sp, #4
 8000a62:	466a      	mov	r2, sp
 8000a64:	f7ff ffca 	bl	80009fc <__swhatbuf_r>
 8000a68:	9900      	ldr	r1, [sp, #0]
 8000a6a:	4605      	mov	r5, r0
 8000a6c:	4630      	mov	r0, r6
 8000a6e:	f000 f877 	bl	8000b60 <_malloc_r>
 8000a72:	b948      	cbnz	r0, 8000a88 <__smakebuf_r+0x44>
 8000a74:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000a78:	059a      	lsls	r2, r3, #22
 8000a7a:	d4ef      	bmi.n	8000a5c <__smakebuf_r+0x18>
 8000a7c:	f023 0303 	bic.w	r3, r3, #3
 8000a80:	f043 0302 	orr.w	r3, r3, #2
 8000a84:	81a3      	strh	r3, [r4, #12]
 8000a86:	e7e3      	b.n	8000a50 <__smakebuf_r+0xc>
 8000a88:	4b0d      	ldr	r3, [pc, #52]	; (8000ac0 <__smakebuf_r+0x7c>)
 8000a8a:	62b3      	str	r3, [r6, #40]	; 0x28
 8000a8c:	89a3      	ldrh	r3, [r4, #12]
 8000a8e:	6020      	str	r0, [r4, #0]
 8000a90:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000a94:	81a3      	strh	r3, [r4, #12]
 8000a96:	9b00      	ldr	r3, [sp, #0]
 8000a98:	6163      	str	r3, [r4, #20]
 8000a9a:	9b01      	ldr	r3, [sp, #4]
 8000a9c:	6120      	str	r0, [r4, #16]
 8000a9e:	b15b      	cbz	r3, 8000ab8 <__smakebuf_r+0x74>
 8000aa0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000aa4:	4630      	mov	r0, r6
 8000aa6:	f000 f93d 	bl	8000d24 <_isatty_r>
 8000aaa:	b128      	cbz	r0, 8000ab8 <__smakebuf_r+0x74>
 8000aac:	89a3      	ldrh	r3, [r4, #12]
 8000aae:	f023 0303 	bic.w	r3, r3, #3
 8000ab2:	f043 0301 	orr.w	r3, r3, #1
 8000ab6:	81a3      	strh	r3, [r4, #12]
 8000ab8:	89a0      	ldrh	r0, [r4, #12]
 8000aba:	4305      	orrs	r5, r0
 8000abc:	81a5      	strh	r5, [r4, #12]
 8000abe:	e7cd      	b.n	8000a5c <__smakebuf_r+0x18>
 8000ac0:	08000855 	.word	0x08000855

08000ac4 <_free_r>:
 8000ac4:	b538      	push	{r3, r4, r5, lr}
 8000ac6:	4605      	mov	r5, r0
 8000ac8:	2900      	cmp	r1, #0
 8000aca:	d045      	beq.n	8000b58 <_free_r+0x94>
 8000acc:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000ad0:	1f0c      	subs	r4, r1, #4
 8000ad2:	2b00      	cmp	r3, #0
 8000ad4:	bfb8      	it	lt
 8000ad6:	18e4      	addlt	r4, r4, r3
 8000ad8:	f000 f946 	bl	8000d68 <__malloc_lock>
 8000adc:	4a1f      	ldr	r2, [pc, #124]	; (8000b5c <_free_r+0x98>)
 8000ade:	6813      	ldr	r3, [r2, #0]
 8000ae0:	4610      	mov	r0, r2
 8000ae2:	b933      	cbnz	r3, 8000af2 <_free_r+0x2e>
 8000ae4:	6063      	str	r3, [r4, #4]
 8000ae6:	6014      	str	r4, [r2, #0]
 8000ae8:	4628      	mov	r0, r5
 8000aea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000aee:	f000 b941 	b.w	8000d74 <__malloc_unlock>
 8000af2:	42a3      	cmp	r3, r4
 8000af4:	d90b      	bls.n	8000b0e <_free_r+0x4a>
 8000af6:	6821      	ldr	r1, [r4, #0]
 8000af8:	1862      	adds	r2, r4, r1
 8000afa:	4293      	cmp	r3, r2
 8000afc:	bf04      	itt	eq
 8000afe:	681a      	ldreq	r2, [r3, #0]
 8000b00:	685b      	ldreq	r3, [r3, #4]
 8000b02:	6063      	str	r3, [r4, #4]
 8000b04:	bf04      	itt	eq
 8000b06:	1852      	addeq	r2, r2, r1
 8000b08:	6022      	streq	r2, [r4, #0]
 8000b0a:	6004      	str	r4, [r0, #0]
 8000b0c:	e7ec      	b.n	8000ae8 <_free_r+0x24>
 8000b0e:	461a      	mov	r2, r3
 8000b10:	685b      	ldr	r3, [r3, #4]
 8000b12:	b10b      	cbz	r3, 8000b18 <_free_r+0x54>
 8000b14:	42a3      	cmp	r3, r4
 8000b16:	d9fa      	bls.n	8000b0e <_free_r+0x4a>
 8000b18:	6811      	ldr	r1, [r2, #0]
 8000b1a:	1850      	adds	r0, r2, r1
 8000b1c:	42a0      	cmp	r0, r4
 8000b1e:	d10b      	bne.n	8000b38 <_free_r+0x74>
 8000b20:	6820      	ldr	r0, [r4, #0]
 8000b22:	4401      	add	r1, r0
 8000b24:	1850      	adds	r0, r2, r1
 8000b26:	4283      	cmp	r3, r0
 8000b28:	6011      	str	r1, [r2, #0]
 8000b2a:	d1dd      	bne.n	8000ae8 <_free_r+0x24>
 8000b2c:	6818      	ldr	r0, [r3, #0]
 8000b2e:	685b      	ldr	r3, [r3, #4]
 8000b30:	6053      	str	r3, [r2, #4]
 8000b32:	4401      	add	r1, r0
 8000b34:	6011      	str	r1, [r2, #0]
 8000b36:	e7d7      	b.n	8000ae8 <_free_r+0x24>
 8000b38:	d902      	bls.n	8000b40 <_free_r+0x7c>
 8000b3a:	230c      	movs	r3, #12
 8000b3c:	602b      	str	r3, [r5, #0]
 8000b3e:	e7d3      	b.n	8000ae8 <_free_r+0x24>
 8000b40:	6820      	ldr	r0, [r4, #0]
 8000b42:	1821      	adds	r1, r4, r0
 8000b44:	428b      	cmp	r3, r1
 8000b46:	bf04      	itt	eq
 8000b48:	6819      	ldreq	r1, [r3, #0]
 8000b4a:	685b      	ldreq	r3, [r3, #4]
 8000b4c:	6063      	str	r3, [r4, #4]
 8000b4e:	bf04      	itt	eq
 8000b50:	1809      	addeq	r1, r1, r0
 8000b52:	6021      	streq	r1, [r4, #0]
 8000b54:	6054      	str	r4, [r2, #4]
 8000b56:	e7c7      	b.n	8000ae8 <_free_r+0x24>
 8000b58:	bd38      	pop	{r3, r4, r5, pc}
 8000b5a:	bf00      	nop
 8000b5c:	20000084 	.word	0x20000084

08000b60 <_malloc_r>:
 8000b60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b62:	1ccd      	adds	r5, r1, #3
 8000b64:	f025 0503 	bic.w	r5, r5, #3
 8000b68:	3508      	adds	r5, #8
 8000b6a:	2d0c      	cmp	r5, #12
 8000b6c:	bf38      	it	cc
 8000b6e:	250c      	movcc	r5, #12
 8000b70:	2d00      	cmp	r5, #0
 8000b72:	4606      	mov	r6, r0
 8000b74:	db01      	blt.n	8000b7a <_malloc_r+0x1a>
 8000b76:	42a9      	cmp	r1, r5
 8000b78:	d903      	bls.n	8000b82 <_malloc_r+0x22>
 8000b7a:	230c      	movs	r3, #12
 8000b7c:	6033      	str	r3, [r6, #0]
 8000b7e:	2000      	movs	r0, #0
 8000b80:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000b82:	f000 f8f1 	bl	8000d68 <__malloc_lock>
 8000b86:	4921      	ldr	r1, [pc, #132]	; (8000c0c <_malloc_r+0xac>)
 8000b88:	680a      	ldr	r2, [r1, #0]
 8000b8a:	4614      	mov	r4, r2
 8000b8c:	b99c      	cbnz	r4, 8000bb6 <_malloc_r+0x56>
 8000b8e:	4f20      	ldr	r7, [pc, #128]	; (8000c10 <_malloc_r+0xb0>)
 8000b90:	683b      	ldr	r3, [r7, #0]
 8000b92:	b923      	cbnz	r3, 8000b9e <_malloc_r+0x3e>
 8000b94:	4621      	mov	r1, r4
 8000b96:	4630      	mov	r0, r6
 8000b98:	f000 f83c 	bl	8000c14 <_sbrk_r>
 8000b9c:	6038      	str	r0, [r7, #0]
 8000b9e:	4629      	mov	r1, r5
 8000ba0:	4630      	mov	r0, r6
 8000ba2:	f000 f837 	bl	8000c14 <_sbrk_r>
 8000ba6:	1c43      	adds	r3, r0, #1
 8000ba8:	d123      	bne.n	8000bf2 <_malloc_r+0x92>
 8000baa:	230c      	movs	r3, #12
 8000bac:	6033      	str	r3, [r6, #0]
 8000bae:	4630      	mov	r0, r6
 8000bb0:	f000 f8e0 	bl	8000d74 <__malloc_unlock>
 8000bb4:	e7e3      	b.n	8000b7e <_malloc_r+0x1e>
 8000bb6:	6823      	ldr	r3, [r4, #0]
 8000bb8:	1b5b      	subs	r3, r3, r5
 8000bba:	d417      	bmi.n	8000bec <_malloc_r+0x8c>
 8000bbc:	2b0b      	cmp	r3, #11
 8000bbe:	d903      	bls.n	8000bc8 <_malloc_r+0x68>
 8000bc0:	6023      	str	r3, [r4, #0]
 8000bc2:	441c      	add	r4, r3
 8000bc4:	6025      	str	r5, [r4, #0]
 8000bc6:	e004      	b.n	8000bd2 <_malloc_r+0x72>
 8000bc8:	6863      	ldr	r3, [r4, #4]
 8000bca:	42a2      	cmp	r2, r4
 8000bcc:	bf0c      	ite	eq
 8000bce:	600b      	streq	r3, [r1, #0]
 8000bd0:	6053      	strne	r3, [r2, #4]
 8000bd2:	4630      	mov	r0, r6
 8000bd4:	f000 f8ce 	bl	8000d74 <__malloc_unlock>
 8000bd8:	f104 000b 	add.w	r0, r4, #11
 8000bdc:	1d23      	adds	r3, r4, #4
 8000bde:	f020 0007 	bic.w	r0, r0, #7
 8000be2:	1ac2      	subs	r2, r0, r3
 8000be4:	d0cc      	beq.n	8000b80 <_malloc_r+0x20>
 8000be6:	1a1b      	subs	r3, r3, r0
 8000be8:	50a3      	str	r3, [r4, r2]
 8000bea:	e7c9      	b.n	8000b80 <_malloc_r+0x20>
 8000bec:	4622      	mov	r2, r4
 8000bee:	6864      	ldr	r4, [r4, #4]
 8000bf0:	e7cc      	b.n	8000b8c <_malloc_r+0x2c>
 8000bf2:	1cc4      	adds	r4, r0, #3
 8000bf4:	f024 0403 	bic.w	r4, r4, #3
 8000bf8:	42a0      	cmp	r0, r4
 8000bfa:	d0e3      	beq.n	8000bc4 <_malloc_r+0x64>
 8000bfc:	1a21      	subs	r1, r4, r0
 8000bfe:	4630      	mov	r0, r6
 8000c00:	f000 f808 	bl	8000c14 <_sbrk_r>
 8000c04:	3001      	adds	r0, #1
 8000c06:	d1dd      	bne.n	8000bc4 <_malloc_r+0x64>
 8000c08:	e7cf      	b.n	8000baa <_malloc_r+0x4a>
 8000c0a:	bf00      	nop
 8000c0c:	20000084 	.word	0x20000084
 8000c10:	20000088 	.word	0x20000088

08000c14 <_sbrk_r>:
 8000c14:	b538      	push	{r3, r4, r5, lr}
 8000c16:	4d06      	ldr	r5, [pc, #24]	; (8000c30 <_sbrk_r+0x1c>)
 8000c18:	2300      	movs	r3, #0
 8000c1a:	4604      	mov	r4, r0
 8000c1c:	4608      	mov	r0, r1
 8000c1e:	602b      	str	r3, [r5, #0]
 8000c20:	f7ff fb6a 	bl	80002f8 <_sbrk>
 8000c24:	1c43      	adds	r3, r0, #1
 8000c26:	d102      	bne.n	8000c2e <_sbrk_r+0x1a>
 8000c28:	682b      	ldr	r3, [r5, #0]
 8000c2a:	b103      	cbz	r3, 8000c2e <_sbrk_r+0x1a>
 8000c2c:	6023      	str	r3, [r4, #0]
 8000c2e:	bd38      	pop	{r3, r4, r5, pc}
 8000c30:	20000098 	.word	0x20000098

08000c34 <__sread>:
 8000c34:	b510      	push	{r4, lr}
 8000c36:	460c      	mov	r4, r1
 8000c38:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c3c:	f000 f8a0 	bl	8000d80 <_read_r>
 8000c40:	2800      	cmp	r0, #0
 8000c42:	bfab      	itete	ge
 8000c44:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000c46:	89a3      	ldrhlt	r3, [r4, #12]
 8000c48:	181b      	addge	r3, r3, r0
 8000c4a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000c4e:	bfac      	ite	ge
 8000c50:	6563      	strge	r3, [r4, #84]	; 0x54
 8000c52:	81a3      	strhlt	r3, [r4, #12]
 8000c54:	bd10      	pop	{r4, pc}

08000c56 <__swrite>:
 8000c56:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000c5a:	461f      	mov	r7, r3
 8000c5c:	898b      	ldrh	r3, [r1, #12]
 8000c5e:	05db      	lsls	r3, r3, #23
 8000c60:	4605      	mov	r5, r0
 8000c62:	460c      	mov	r4, r1
 8000c64:	4616      	mov	r6, r2
 8000c66:	d505      	bpl.n	8000c74 <__swrite+0x1e>
 8000c68:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c6c:	2302      	movs	r3, #2
 8000c6e:	2200      	movs	r2, #0
 8000c70:	f000 f868 	bl	8000d44 <_lseek_r>
 8000c74:	89a3      	ldrh	r3, [r4, #12]
 8000c76:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000c7a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000c7e:	81a3      	strh	r3, [r4, #12]
 8000c80:	4632      	mov	r2, r6
 8000c82:	463b      	mov	r3, r7
 8000c84:	4628      	mov	r0, r5
 8000c86:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000c8a:	f000 b817 	b.w	8000cbc <_write_r>

08000c8e <__sseek>:
 8000c8e:	b510      	push	{r4, lr}
 8000c90:	460c      	mov	r4, r1
 8000c92:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c96:	f000 f855 	bl	8000d44 <_lseek_r>
 8000c9a:	1c43      	adds	r3, r0, #1
 8000c9c:	89a3      	ldrh	r3, [r4, #12]
 8000c9e:	bf15      	itete	ne
 8000ca0:	6560      	strne	r0, [r4, #84]	; 0x54
 8000ca2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000ca6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000caa:	81a3      	strheq	r3, [r4, #12]
 8000cac:	bf18      	it	ne
 8000cae:	81a3      	strhne	r3, [r4, #12]
 8000cb0:	bd10      	pop	{r4, pc}

08000cb2 <__sclose>:
 8000cb2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cb6:	f000 b813 	b.w	8000ce0 <_close_r>
	...

08000cbc <_write_r>:
 8000cbc:	b538      	push	{r3, r4, r5, lr}
 8000cbe:	4d07      	ldr	r5, [pc, #28]	; (8000cdc <_write_r+0x20>)
 8000cc0:	4604      	mov	r4, r0
 8000cc2:	4608      	mov	r0, r1
 8000cc4:	4611      	mov	r1, r2
 8000cc6:	2200      	movs	r2, #0
 8000cc8:	602a      	str	r2, [r5, #0]
 8000cca:	461a      	mov	r2, r3
 8000ccc:	f7ff fac7 	bl	800025e <_write>
 8000cd0:	1c43      	adds	r3, r0, #1
 8000cd2:	d102      	bne.n	8000cda <_write_r+0x1e>
 8000cd4:	682b      	ldr	r3, [r5, #0]
 8000cd6:	b103      	cbz	r3, 8000cda <_write_r+0x1e>
 8000cd8:	6023      	str	r3, [r4, #0]
 8000cda:	bd38      	pop	{r3, r4, r5, pc}
 8000cdc:	20000098 	.word	0x20000098

08000ce0 <_close_r>:
 8000ce0:	b538      	push	{r3, r4, r5, lr}
 8000ce2:	4d06      	ldr	r5, [pc, #24]	; (8000cfc <_close_r+0x1c>)
 8000ce4:	2300      	movs	r3, #0
 8000ce6:	4604      	mov	r4, r0
 8000ce8:	4608      	mov	r0, r1
 8000cea:	602b      	str	r3, [r5, #0]
 8000cec:	f7ff fad3 	bl	8000296 <_close>
 8000cf0:	1c43      	adds	r3, r0, #1
 8000cf2:	d102      	bne.n	8000cfa <_close_r+0x1a>
 8000cf4:	682b      	ldr	r3, [r5, #0]
 8000cf6:	b103      	cbz	r3, 8000cfa <_close_r+0x1a>
 8000cf8:	6023      	str	r3, [r4, #0]
 8000cfa:	bd38      	pop	{r3, r4, r5, pc}
 8000cfc:	20000098 	.word	0x20000098

08000d00 <_fstat_r>:
 8000d00:	b538      	push	{r3, r4, r5, lr}
 8000d02:	4d07      	ldr	r5, [pc, #28]	; (8000d20 <_fstat_r+0x20>)
 8000d04:	2300      	movs	r3, #0
 8000d06:	4604      	mov	r4, r0
 8000d08:	4608      	mov	r0, r1
 8000d0a:	4611      	mov	r1, r2
 8000d0c:	602b      	str	r3, [r5, #0]
 8000d0e:	f7ff facd 	bl	80002ac <_fstat>
 8000d12:	1c43      	adds	r3, r0, #1
 8000d14:	d102      	bne.n	8000d1c <_fstat_r+0x1c>
 8000d16:	682b      	ldr	r3, [r5, #0]
 8000d18:	b103      	cbz	r3, 8000d1c <_fstat_r+0x1c>
 8000d1a:	6023      	str	r3, [r4, #0]
 8000d1c:	bd38      	pop	{r3, r4, r5, pc}
 8000d1e:	bf00      	nop
 8000d20:	20000098 	.word	0x20000098

08000d24 <_isatty_r>:
 8000d24:	b538      	push	{r3, r4, r5, lr}
 8000d26:	4d06      	ldr	r5, [pc, #24]	; (8000d40 <_isatty_r+0x1c>)
 8000d28:	2300      	movs	r3, #0
 8000d2a:	4604      	mov	r4, r0
 8000d2c:	4608      	mov	r0, r1
 8000d2e:	602b      	str	r3, [r5, #0]
 8000d30:	f7ff facb 	bl	80002ca <_isatty>
 8000d34:	1c43      	adds	r3, r0, #1
 8000d36:	d102      	bne.n	8000d3e <_isatty_r+0x1a>
 8000d38:	682b      	ldr	r3, [r5, #0]
 8000d3a:	b103      	cbz	r3, 8000d3e <_isatty_r+0x1a>
 8000d3c:	6023      	str	r3, [r4, #0]
 8000d3e:	bd38      	pop	{r3, r4, r5, pc}
 8000d40:	20000098 	.word	0x20000098

08000d44 <_lseek_r>:
 8000d44:	b538      	push	{r3, r4, r5, lr}
 8000d46:	4d07      	ldr	r5, [pc, #28]	; (8000d64 <_lseek_r+0x20>)
 8000d48:	4604      	mov	r4, r0
 8000d4a:	4608      	mov	r0, r1
 8000d4c:	4611      	mov	r1, r2
 8000d4e:	2200      	movs	r2, #0
 8000d50:	602a      	str	r2, [r5, #0]
 8000d52:	461a      	mov	r2, r3
 8000d54:	f7ff fac3 	bl	80002de <_lseek>
 8000d58:	1c43      	adds	r3, r0, #1
 8000d5a:	d102      	bne.n	8000d62 <_lseek_r+0x1e>
 8000d5c:	682b      	ldr	r3, [r5, #0]
 8000d5e:	b103      	cbz	r3, 8000d62 <_lseek_r+0x1e>
 8000d60:	6023      	str	r3, [r4, #0]
 8000d62:	bd38      	pop	{r3, r4, r5, pc}
 8000d64:	20000098 	.word	0x20000098

08000d68 <__malloc_lock>:
 8000d68:	4801      	ldr	r0, [pc, #4]	; (8000d70 <__malloc_lock+0x8>)
 8000d6a:	f7ff be45 	b.w	80009f8 <__retarget_lock_acquire_recursive>
 8000d6e:	bf00      	nop
 8000d70:	20000090 	.word	0x20000090

08000d74 <__malloc_unlock>:
 8000d74:	4801      	ldr	r0, [pc, #4]	; (8000d7c <__malloc_unlock+0x8>)
 8000d76:	f7ff be40 	b.w	80009fa <__retarget_lock_release_recursive>
 8000d7a:	bf00      	nop
 8000d7c:	20000090 	.word	0x20000090

08000d80 <_read_r>:
 8000d80:	b538      	push	{r3, r4, r5, lr}
 8000d82:	4d07      	ldr	r5, [pc, #28]	; (8000da0 <_read_r+0x20>)
 8000d84:	4604      	mov	r4, r0
 8000d86:	4608      	mov	r0, r1
 8000d88:	4611      	mov	r1, r2
 8000d8a:	2200      	movs	r2, #0
 8000d8c:	602a      	str	r2, [r5, #0]
 8000d8e:	461a      	mov	r2, r3
 8000d90:	f7ff fa48 	bl	8000224 <_read>
 8000d94:	1c43      	adds	r3, r0, #1
 8000d96:	d102      	bne.n	8000d9e <_read_r+0x1e>
 8000d98:	682b      	ldr	r3, [r5, #0]
 8000d9a:	b103      	cbz	r3, 8000d9e <_read_r+0x1e>
 8000d9c:	6023      	str	r3, [r4, #0]
 8000d9e:	bd38      	pop	{r3, r4, r5, pc}
 8000da0:	20000098 	.word	0x20000098

08000da4 <_init>:
 8000da4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000da6:	bf00      	nop
 8000da8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000daa:	bc08      	pop	{r3}
 8000dac:	469e      	mov	lr, r3
 8000dae:	4770      	bx	lr

08000db0 <_fini>:
 8000db0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000db2:	bf00      	nop
 8000db4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000db6:	bc08      	pop	{r3}
 8000db8:	469e      	mov	lr, r3
 8000dba:	4770      	bx	lr
